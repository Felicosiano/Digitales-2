

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun May 23 22:32:36 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F15244
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    22                           	psect	stringtext18,global,class=STRCODE,delta=2,noexec
    23                           	psect	stringtext19,global,class=STRCODE,delta=2,noexec
    24                           	psect	stringtext20,global,class=STRCODE,delta=2,noexec
    25                           	psect	stringtext21,global,class=STRCODE,delta=2,noexec
    26                           	psect	cinit,global,class=CODE,merge=1,delta=2
    27                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    29                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    30                           	psect	clrtext,global,class=CODE,delta=2
    31                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    32                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    33                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    34                           	psect	text1,local,class=CODE,merge=1,delta=2
    35                           	psect	text2,local,class=CODE,merge=1,delta=2
    36                           	psect	text3,local,class=CODE,merge=1,delta=2
    37                           	psect	text4,local,class=CODE,merge=1,delta=2
    38                           	psect	text5,local,class=CODE,merge=1,delta=2
    39                           	psect	text6,local,class=CODE,merge=1,delta=2
    40                           	psect	text7,local,class=CODE,merge=1,delta=2
    41                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    42                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    44                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text17,local,class=CODE,merge=1,delta=2
    51                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text22,local,class=CODE,merge=1,delta=2
    56                           	psect	text23,local,class=CODE,merge=1,delta=2
    57                           	psect	text24,local,class=CODE,merge=1,delta=2
    58                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text26,local,class=CODE,merge=1,delta=2
    60                           	psect	text27,local,class=CODE,merge=1,delta=2
    61                           	psect	text28,local,class=CODE,merge=1,delta=2
    62                           	psect	text29,local,class=CODE,merge=1,delta=2
    63                           	psect	text30,local,class=CODE,merge=1,delta=2
    64                           	psect	text31,local,class=CODE,merge=1,delta=2
    65                           	psect	text32,local,class=CODE,merge=1,delta=2
    66                           	psect	text33,local,class=CODE,merge=1,delta=2
    67                           	psect	text34,local,class=CODE,merge=1,delta=2
    68                           	psect	text35,local,class=CODE,merge=1,delta=2
    69                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    70                           	dabs	1,0x7E,2
    71  0000                     
    72                           ; Version 2.31
    73                           ; Generated 13/10/2020 GMT
    74                           ; 
    75                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution. Publication is not required when
    89                           ;        this file is used in an embedded application.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC16F15244 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  0012                     	;# 
   123  0013                     	;# 
   124  0014                     	;# 
   125  0018                     	;# 
   126  0019                     	;# 
   127  001A                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  0119                     	;# 
   138  011A                     	;# 
   139  011B                     	;# 
   140  011B                     	;# 
   141  011C                     	;# 
   142  011D                     	;# 
   143  011E                     	;# 
   144  011F                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  018E                     	;# 
   148  018F                     	;# 
   149  0190                     	;# 
   150  0191                     	;# 
   151  0192                     	;# 
   152  020C                     	;# 
   153  020D                     	;# 
   154  020E                     	;# 
   155  020E                     	;# 
   156  020F                     	;# 
   157  020F                     	;# 
   158  0210                     	;# 
   159  0210                     	;# 
   160  0211                     	;# 
   161  0211                     	;# 
   162  028C                     	;# 
   163  028C                     	;# 
   164  028D                     	;# 
   165  028D                     	;# 
   166  028E                     	;# 
   167  028F                     	;# 
   168  0290                     	;# 
   169  0291                     	;# 
   170  030C                     	;# 
   171  030C                     	;# 
   172  030D                     	;# 
   173  030E                     	;# 
   174  030F                     	;# 
   175  0310                     	;# 
   176  0310                     	;# 
   177  0311                     	;# 
   178  0312                     	;# 
   179  0313                     	;# 
   180  0314                     	;# 
   181  0314                     	;# 
   182  0315                     	;# 
   183  0316                     	;# 
   184  0318                     	;# 
   185  0318                     	;# 
   186  0319                     	;# 
   187  031A                     	;# 
   188  059C                     	;# 
   189  059C                     	;# 
   190  059D                     	;# 
   191  059D                     	;# 
   192  059E                     	;# 
   193  059F                     	;# 
   194  070C                     	;# 
   195  070D                     	;# 
   196  070E                     	;# 
   197  0716                     	;# 
   198  0717                     	;# 
   199  0718                     	;# 
   200  080C                     	;# 
   201  0811                     	;# 
   202  0813                     	;# 
   203  0814                     	;# 
   204  081A                     	;# 
   205  081A                     	;# 
   206  081B                     	;# 
   207  081C                     	;# 
   208  081C                     	;# 
   209  081D                     	;# 
   210  081E                     	;# 
   211  081F                     	;# 
   212  088E                     	;# 
   213  0890                     	;# 
   214  0891                     	;# 
   215  0892                     	;# 
   216  0893                     	;# 
   217  090C                     	;# 
   218  1E8F                     	;# 
   219  1E90                     	;# 
   220  1E91                     	;# 
   221  1E92                     	;# 
   222  1E93                     	;# 
   223  1E9C                     	;# 
   224  1EA1                     	;# 
   225  1EA2                     	;# 
   226  1EC3                     	;# 
   227  1EC5                     	;# 
   228  1EC6                     	;# 
   229  1EC7                     	;# 
   230  1ECB                     	;# 
   231  1ECB                     	;# 
   232  1ECB                     	;# 
   233  1ECC                     	;# 
   234  1ECC                     	;# 
   235  1ECC                     	;# 
   236  1F10                     	;# 
   237  1F11                     	;# 
   238  1F12                     	;# 
   239  1F14                     	;# 
   240  1F15                     	;# 
   241  1F1C                     	;# 
   242  1F1D                     	;# 
   243  1F1E                     	;# 
   244  1F1F                     	;# 
   245  1F20                     	;# 
   246  1F21                     	;# 
   247  1F22                     	;# 
   248  1F23                     	;# 
   249  1F24                     	;# 
   250  1F25                     	;# 
   251  1F26                     	;# 
   252  1F27                     	;# 
   253  1F38                     	;# 
   254  1F39                     	;# 
   255  1F3A                     	;# 
   256  1F3B                     	;# 
   257  1F3C                     	;# 
   258  1F3D                     	;# 
   259  1F3E                     	;# 
   260  1F3F                     	;# 
   261  1F43                     	;# 
   262  1F44                     	;# 
   263  1F45                     	;# 
   264  1F46                     	;# 
   265  1F47                     	;# 
   266  1F48                     	;# 
   267  1F49                     	;# 
   268  1F4A                     	;# 
   269  1F4E                     	;# 
   270  1F4F                     	;# 
   271  1F50                     	;# 
   272  1F51                     	;# 
   273  1F52                     	;# 
   274  1F53                     	;# 
   275  1F54                     	;# 
   276  1F55                     	;# 
   277  1FE4                     	;# 
   278  1FE5                     	;# 
   279  1FE6                     	;# 
   280  1FE7                     	;# 
   281  1FE8                     	;# 
   282  1FE8                     	;# 
   283  1FE9                     	;# 
   284  1FEA                     	;# 
   285  1FEB                     	;# 
   286  1FED                     	;# 
   287  1FEE                     	;# 
   288  1FEF                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  0012                     	;# 
   305  0013                     	;# 
   306  0014                     	;# 
   307  0018                     	;# 
   308  0019                     	;# 
   309  001A                     	;# 
   310  009A                     	;# 
   311  009B                     	;# 
   312  009B                     	;# 
   313  009C                     	;# 
   314  009D                     	;# 
   315  009E                     	;# 
   316  009F                     	;# 
   317  010C                     	;# 
   318  010D                     	;# 
   319  0119                     	;# 
   320  011A                     	;# 
   321  011B                     	;# 
   322  011B                     	;# 
   323  011C                     	;# 
   324  011D                     	;# 
   325  011E                     	;# 
   326  011F                     	;# 
   327  018C                     	;# 
   328  018D                     	;# 
   329  018E                     	;# 
   330  018F                     	;# 
   331  0190                     	;# 
   332  0191                     	;# 
   333  0192                     	;# 
   334  020C                     	;# 
   335  020D                     	;# 
   336  020E                     	;# 
   337  020E                     	;# 
   338  020F                     	;# 
   339  020F                     	;# 
   340  0210                     	;# 
   341  0210                     	;# 
   342  0211                     	;# 
   343  0211                     	;# 
   344  028C                     	;# 
   345  028C                     	;# 
   346  028D                     	;# 
   347  028D                     	;# 
   348  028E                     	;# 
   349  028F                     	;# 
   350  0290                     	;# 
   351  0291                     	;# 
   352  030C                     	;# 
   353  030C                     	;# 
   354  030D                     	;# 
   355  030E                     	;# 
   356  030F                     	;# 
   357  0310                     	;# 
   358  0310                     	;# 
   359  0311                     	;# 
   360  0312                     	;# 
   361  0313                     	;# 
   362  0314                     	;# 
   363  0314                     	;# 
   364  0315                     	;# 
   365  0316                     	;# 
   366  0318                     	;# 
   367  0318                     	;# 
   368  0319                     	;# 
   369  031A                     	;# 
   370  059C                     	;# 
   371  059C                     	;# 
   372  059D                     	;# 
   373  059D                     	;# 
   374  059E                     	;# 
   375  059F                     	;# 
   376  070C                     	;# 
   377  070D                     	;# 
   378  070E                     	;# 
   379  0716                     	;# 
   380  0717                     	;# 
   381  0718                     	;# 
   382  080C                     	;# 
   383  0811                     	;# 
   384  0813                     	;# 
   385  0814                     	;# 
   386  081A                     	;# 
   387  081A                     	;# 
   388  081B                     	;# 
   389  081C                     	;# 
   390  081C                     	;# 
   391  081D                     	;# 
   392  081E                     	;# 
   393  081F                     	;# 
   394  088E                     	;# 
   395  0890                     	;# 
   396  0891                     	;# 
   397  0892                     	;# 
   398  0893                     	;# 
   399  090C                     	;# 
   400  1E8F                     	;# 
   401  1E90                     	;# 
   402  1E91                     	;# 
   403  1E92                     	;# 
   404  1E93                     	;# 
   405  1E9C                     	;# 
   406  1EA1                     	;# 
   407  1EA2                     	;# 
   408  1EC3                     	;# 
   409  1EC5                     	;# 
   410  1EC6                     	;# 
   411  1EC7                     	;# 
   412  1ECB                     	;# 
   413  1ECB                     	;# 
   414  1ECB                     	;# 
   415  1ECC                     	;# 
   416  1ECC                     	;# 
   417  1ECC                     	;# 
   418  1F10                     	;# 
   419  1F11                     	;# 
   420  1F12                     	;# 
   421  1F14                     	;# 
   422  1F15                     	;# 
   423  1F1C                     	;# 
   424  1F1D                     	;# 
   425  1F1E                     	;# 
   426  1F1F                     	;# 
   427  1F20                     	;# 
   428  1F21                     	;# 
   429  1F22                     	;# 
   430  1F23                     	;# 
   431  1F24                     	;# 
   432  1F25                     	;# 
   433  1F26                     	;# 
   434  1F27                     	;# 
   435  1F38                     	;# 
   436  1F39                     	;# 
   437  1F3A                     	;# 
   438  1F3B                     	;# 
   439  1F3C                     	;# 
   440  1F3D                     	;# 
   441  1F3E                     	;# 
   442  1F3F                     	;# 
   443  1F43                     	;# 
   444  1F44                     	;# 
   445  1F45                     	;# 
   446  1F46                     	;# 
   447  1F47                     	;# 
   448  1F48                     	;# 
   449  1F49                     	;# 
   450  1F4A                     	;# 
   451  1F4E                     	;# 
   452  1F4F                     	;# 
   453  1F50                     	;# 
   454  1F51                     	;# 
   455  1F52                     	;# 
   456  1F53                     	;# 
   457  1F54                     	;# 
   458  1F55                     	;# 
   459  1FE4                     	;# 
   460  1FE5                     	;# 
   461  1FE6                     	;# 
   462  1FE7                     	;# 
   463  1FE8                     	;# 
   464  1FE8                     	;# 
   465  1FE9                     	;# 
   466  1FEA                     	;# 
   467  1FEB                     	;# 
   468  1FED                     	;# 
   469  1FEE                     	;# 
   470  1FEF                     	;# 
   471                           
   472                           	psect	idataBANK1
   473  0007                     __pidataBANK1:
   474                           
   475                           ;initializer for _BackLight_State
   476  0007  3408               	retlw	8
   477                           
   478                           	psect	stringtext1
   479  0800                     __pstringtext1:
   480  0800                     _dpowers:
   481  0800  3401               	retlw	1
   482  0801  3400               	retlw	0
   483  0802  3400               	retlw	0
   484  0803  3400               	retlw	0
   485  0804  340A               	retlw	10
   486  0805  3400               	retlw	0
   487  0806  3400               	retlw	0
   488  0807  3400               	retlw	0
   489  0808  3464               	retlw	100
   490  0809  3400               	retlw	0
   491  080A  3400               	retlw	0
   492  080B  3400               	retlw	0
   493  080C  34E8               	retlw	232
   494  080D  3403               	retlw	3
   495  080E  3400               	retlw	0
   496  080F  3400               	retlw	0
   497  0810  3410               	retlw	16
   498  0811  3427               	retlw	39
   499  0812  3400               	retlw	0
   500  0813  3400               	retlw	0
   501  0814  34A0               	retlw	160
   502  0815  3486               	retlw	134
   503  0816  3401               	retlw	1
   504  0817  3400               	retlw	0
   505  0818  3440               	retlw	64
   506  0819  3442               	retlw	66
   507  081A  340F               	retlw	15
   508  081B  3400               	retlw	0
   509  081C  3480               	retlw	128
   510  081D  3496               	retlw	150
   511  081E  3498               	retlw	152
   512  081F  3400               	retlw	0
   513  0820  3400               	retlw	0
   514  0821  34E1               	retlw	225
   515  0822  34F5               	retlw	245
   516  0823  3405               	retlw	5
   517  0824  3400               	retlw	0
   518  0825  34CA               	retlw	202
   519  0826  349A               	retlw	154
   520  0827  343B               	retlw	59
   521  0828                     __end_of_dpowers:
   522                           
   523                           	psect	stringtext2
   524  086F                     __pstringtext2:
   525  086F                     _MAXUV:
   526  086F  3408               	retlw	8
   527  0870  3400               	retlw	0
   528  0871                     __end_of_MAXUV:
   529                           
   530                           	psect	stringtext3
   531  0873                     __pstringtext3:
   532  0873                     _nivel:
   533  0873  340C               	retlw	12
   534  0874                     __end_of_nivel:
   535                           
   536                           	psect	stringtext4
   537  0874                     __pstringtext4:
   538  0874                     _PIN_BOM:
   539  0874  3402               	retlw	2
   540  0875                     __end_of_PIN_BOM:
   541                           
   542                           	psect	stringtext5
   543  0875                     __pstringtext5:
   544  0875                     _PIN_VAL:
   545  0875  3401               	retlw	1
   546  0876                     __end_of_PIN_VAL:
   547                           
   548                           	psect	stringtext6
   549  0876                     __pstringtext6:
   550  0876                     _AST:
   551  0876  3401               	retlw	1
   552  0877                     __end_of_AST:
   553                           
   554                           	psect	stringtext7
   555  0877                     __pstringtext7:
   556  0877                     _ASH:
   557  0877  3405               	retlw	5
   558  0878                     __end_of_ASH:
   559                           
   560                           	psect	stringtext8
   561  0878                     __pstringtext8:
   562  0878                     _AUV:
   563  0878  3402               	retlw	2
   564  0879                     __end_of_AUV:
   565                           
   566                           	psect	stringtext9
   567  0859                     __pstringtext9:
   568  0859                     _CUV:
   569  0859  34F8               	retlw	248
   570  085A  34A7               	retlw	167
   571  085B  341C               	retlw	28
   572  085C  343D               	retlw	61
   573  085D                     __end_of_CUV:
   574                           
   575                           	psect	stringtext10
   576  085D                     __pstringtext10:
   577  085D                     _CHUM:
   578  085D  347B               	retlw	123
   579  085E  34C2               	retlw	194
   580  085F  349E               	retlw	158
   581  0860  343B               	retlw	59
   582  0861                     __end_of_CHUM:
   583                           
   584                           	psect	stringtext11
   585  0861                     __pstringtext11:
   586  0861                     _CTEMP:
   587  0861  34E0               	retlw	224
   588  0862  340F               	retlw	15
   589  0863  34F8               	retlw	248
   590  0864  343E               	retlw	62
   591  0865                     __end_of_CTEMP:
   592                           
   593                           	psect	stringtext12
   594  0871                     __pstringtext12:
   595  0871                     _MINHUM:
   596  0871  3402               	retlw	2
   597  0872  3400               	retlw	0
   598  0873                     __end_of_MINHUM:
   599                           
   600                           	psect	stringtext13
   601  0828                     __pstringtext13:
   602  0828                     _MAXTEMP:
   603  0828  341A               	retlw	26
   604  0829  3400               	retlw	0
   605  082A                     __end_of_MAXTEMP:
   606  0012                     _TRISA	set	18
   607  0013                     _TRISB	set	19
   608  0014                     _TRISC	set	20
   609  000E                     _PORTCbits	set	14
   610  000E                     _PORTC	set	14
   611  009C                     _TRISB4	set	156
   612  009E                     _TRISB6	set	158
   613  009B                     _ADRESL	set	155
   614  009C                     _ADRESH	set	156
   615  009E                     _ADCON1	set	158
   616  009D                     _ADCON0	set	157
   617  010D                     _RB6I2C	set	269
   618  010C                     _RB4I2C	set	268
   619  018C                     _SSP1BUF	set	396
   620  0191                     _SSP1CON2bits	set	401
   621  0190                     _SSP1CON1bits	set	400
   622  018F                     _SSP1STAT	set	399
   623  0191                     _SSP1CON2	set	401
   624  0190                     _SSP1CON1	set	400
   625  018D                     _SSP1ADD	set	397
   626  070D                     _PIR1bits	set	1805
   627  1EC5                     _SSP1CLKPPS	set	7877
   628  1EC6                     _SSP1DATPPS	set	7878
   629  1F1E                     _RB6PPS	set	7966
   630  1F1C                     _RB4PPS	set	7964
   631  1F43                     _ANSELBbits	set	8003
   632  1F38                     _ANSELA	set	7992
   633  1F4E                     _ANSELC	set	8014
   634  082A                     STR_8:
   635  082A  3425               	retlw	37	;'%'
   636  082B  346C               	retlw	108	;'l'
   637  082C  3475               	retlw	117	;'u'
   638  082D  342E               	retlw	46	;'.'
   639  082E  3425               	retlw	37	;'%'
   640  082F  3436               	retlw	54	;'6'
   641  0830  342E               	retlw	46	;'.'
   642  0831  3436               	retlw	54	;'6'
   643  0832  346C               	retlw	108	;'l'
   644  0833  3475               	retlw	117	;'u'
   645  0834  3400               	retlw	0
   646                           
   647                           	psect	stringtext14
   648  0835                     __pstringtext14:
   649  0835                     STR_6:
   650  0835  3452               	retlw	82	;'R'
   651  0836  3465               	retlw	101	;'e'
   652  0837  3467               	retlw	103	;'g'
   653  0838  3461               	retlw	97	;'a'
   654  0839  346E               	retlw	110	;'n'
   655  083A  3464               	retlw	100	;'d'
   656  083B  346F               	retlw	111	;'o'
   657  083C  3420               	retlw	32	;' '
   658  083D  3400               	retlw	0
   659                           
   660                           	psect	stringtext15
   661  083E                     __pstringtext15:
   662  083E                     STR_7:
   663  083E  3453               	retlw	83	;'S'
   664  083F  3475               	retlw	117	;'u'
   665  0840  3465               	retlw	101	;'e'
   666  0841  346C               	retlw	108	;'l'
   667  0842  346F               	retlw	111	;'o'
   668  0843  3420               	retlw	32	;' '
   669  0844  344F               	retlw	79	;'O'
   670  0845  346B               	retlw	107	;'k'
   671  0846  3400               	retlw	0
   672                           
   673                           	psect	stringtext16
   674  0847                     __pstringtext16:
   675  0847                     STR_4:
   676  0847  3454               	retlw	84	;'T'
   677  0848  3461               	retlw	97	;'a'
   678  0849  346E               	retlw	110	;'n'
   679  084A  3471               	retlw	113	;'q'
   680  084B  3446               	retlw	70	;'F'
   681  084C  3475               	retlw	117	;'u'
   682  084D  346C               	retlw	108	;'l'
   683  084E  346C               	retlw	108	;'l'
   684  084F  3400               	retlw	0
   685                           
   686                           	psect	stringtext17
   687  0850                     __pstringtext17:
   688  0850                     STR_5:
   689  0850  344C               	retlw	76	;'L'
   690  0851  346C               	retlw	108	;'l'
   691  0852  3465               	retlw	101	;'e'
   692  0853  346E               	retlw	110	;'n'
   693  0854  3461               	retlw	97	;'a'
   694  0855  346E               	retlw	110	;'n'
   695  0856  3464               	retlw	100	;'d'
   696  0857  346F               	retlw	111	;'o'
   697  0858  3400               	retlw	0
   698                           
   699                           	psect	stringtext18
   700  0865                     __pstringtext18:
   701  0865                     STR_1:
   702  0865  3455               	retlw	85	;'U'
   703  0866  3476               	retlw	118	;'v'
   704  0867  343D               	retlw	61	;'='
   705  0868  3400               	retlw	0
   706                           
   707                           	psect	stringtext19
   708  0869                     __pstringtext19:
   709  0869                     STR_3:
   710  0869  3448               	retlw	72	;'H'
   711  086A  343D               	retlw	61	;'='
   712  086B  3400               	retlw	0
   713                           
   714                           	psect	stringtext20
   715  086C                     __pstringtext20:
   716  086C                     STR_2:
   717  086C  3454               	retlw	84	;'T'
   718  086D  343D               	retlw	61	;'='
   719  086E  3400               	retlw	0
   720                           
   721                           	psect	stringtext21
   722  0000                     __pstringtext21:
   723                           
   724                           	psect	cinit
   725  07ED                     start_initialization:	
   726                           ; #config settings
   727                           
   728  07ED                     __initialization:
   729                           
   730                           ; Initialize objects allocated to BANK1
   731  07ED  0141               	movlb	1	; select bank1
   732  07EE  3180  2007  3187   	fcall	__pidataBANK1	;fetch initializer
   733  07F1  00C2               	movwf	__pdataBANK1& (0+127)
   734                           
   735                           ; Clear objects allocated to BANK0
   736  07F2  0140               	movlb	0	; select bank0
   737  07F3  01EE               	clrf	__pbssBANK0& (0+127)
   738  07F4  01EF               	clrf	(__pbssBANK0+1)& (0+127)
   739                           
   740                           ; Clear objects allocated to BANK1
   741  07F5  30A0               	movlw	low __pbssBANK1
   742  07F6  0084               	movwf	4
   743  07F7  3000               	movlw	high __pbssBANK1
   744  07F8  0085               	movwf	5
   745  07F9  3022               	movlw	34
   746  07FA  3180  2008  3187   	fcall	clear_ram0
   747  07FD                     end_of_initialization:	
   748                           ;End of C runtime variable initialization code
   749                           
   750  07FD                     __end_of__initialization:
   751  07FD  0140               	movlb	0
   752  07FE  318B  2BCB         	ljmp	_main	;jump to C main() function
   753                           
   754                           	psect	bssBANK0
   755  006E                     __pbssBANK0:
   756  006E                     _texT:
   757  006E                     	ds	1
   758  006F                     _texuv:
   759  006F                     	ds	1
   760                           
   761                           	psect	bssBANK1
   762  00A0                     __pbssBANK1:
   763  00A0                     _lecturaTemp:
   764  00A0                     	ds	4
   765  00A4                     _lecturaHumedad:
   766  00A4                     	ds	4
   767  00A8                     _lecturaUv:
   768  00A8                     	ds	4
   769  00AC                     _i2c_add:
   770  00AC                     	ds	1
   771  00AD                     _RS:
   772  00AD                     	ds	1
   773  00AE                     _texH:
   774  00AE                     	ds	1
   775  00AF                     _status:
   776  00AF                     	ds	1
   777  00B0                     _flag:
   778  00B0                     	ds	1
   779  00B1                     ftoa@buf:
   780  00B1                     	ds	17
   781                           
   782                           	psect	dataBANK1
   783  00C2                     __pdataBANK1:
   784  00C2                     _BackLight_State:
   785  00C2                     	ds	1
   786                           
   787                           	psect	clrtext
   788  0008                     clear_ram0:	
   789                           ;	Called with FSR0 containing the base address, and
   790                           ;	WREG with the size to clear
   791                           
   792  0008  0064               	clrwdt	;clear the watchdog before getting into this loop
   793  0009                     clrloop0:
   794  0009  0180               	clrf	0	;clear RAM location pointed to by FSR
   795  000A  3101               	addfsr 0,1
   796  000B  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   797  000C  2809               	goto	clrloop0	;have we reached the end yet?
   798  000D  3400               	retlw	0	;all done for this memory range, return
   799                           
   800                           	psect	cstackCOMMON
   801  0070                     __pcstackCOMMON:
   802  0070                     ?_isdigit:
   803  0070                     ?___flge:	
   804                           ; 1 bit 
   805                           
   806  0070                     ?_I2C_Master_Init:	
   807                           ; 1 bit 
   808                           
   809  0070                     ??_I2C_Master_Init:	
   810                           ; 1 bytes @ 0x0
   811                           
   812  0070                     ?_LCD_Init:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0070                     ?_IO_Expander_Write:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0070                     ?_LCD_CMD:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0070                     ??_isdigit:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0070                     ?_Iniciar_ADC:	
   825                           ; 1 bytes @ 0x0
   826                           
   827  0070                     ??_Iniciar_ADC:	
   828                           ; 1 bytes @ 0x0
   829                           
   830  0070                     ?_PutVariables:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0070                     ?_PutTexto:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0070                     ?_inicio:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0070                     ?_LeerSensores:	
   840                           ; 1 bytes @ 0x0
   841                           
   842  0070                     ?_TanqueLLeno:	
   843                           ; 1 bytes @ 0x0
   844                           
   845  0070                     ?_TanqueVacio:	
   846                           ; 1 bytes @ 0x0
   847                           
   848  0070                     ?_CondicionesDeRiego:	
   849                           ; 1 bytes @ 0x0
   850                           
   851  0070                     ?_main:	
   852                           ; 1 bytes @ 0x0
   853                           
   854  0070                     ?_I2C_Master_Wait:	
   855                           ; 1 bytes @ 0x0
   856                           
   857  0070                     ??_I2C_Master_Wait:	
   858                           ; 1 bytes @ 0x0
   859                           
   860  0070                     ?_I2C_Master_Start:	
   861                           ; 1 bytes @ 0x0
   862                           
   863  0070                     ??_I2C_Master_Start:	
   864                           ; 1 bytes @ 0x0
   865                           
   866  0070                     ?_I2C_Master_Stop:	
   867                           ; 1 bytes @ 0x0
   868                           
   869  0070                     ??_I2C_Master_Stop:	
   870                           ; 1 bytes @ 0x0
   871                           
   872  0070                     ?_I2C_Master_Write:	
   873                           ; 1 bytes @ 0x0
   874                           
   875  0070                     ??_I2C_Master_Write:	
   876                           ; 1 bytes @ 0x0
   877                           
   878  0070                     ?_LCD_Write_4Bit:	
   879                           ; 1 bytes @ 0x0
   880                           
   881  0070                     ?_LCD_Write_Char:	
   882                           ; 1 bytes @ 0x0
   883                           
   884  0070                     ?__Umul8_16:	
   885                           ; 1 bytes @ 0x0
   886                           
   887  0070                     ?_LeerAdc:	
   888                           ; 2 bytes @ 0x0
   889                           
   890  0070                     ?___wmul:	
   891                           ; 2 bytes @ 0x0
   892                           
   893  0070                     ?___lldiv:	
   894                           ; 2 bytes @ 0x0
   895                           
   896  0070                     ?___flneg:	
   897                           ; 4 bytes @ 0x0
   898                           
   899  0070                     I2C_Master_Write@data:	
   900                           ; 4 bytes @ 0x0
   901                           
   902  0070                     __Umul8_16@multiplicand:	
   903                           ; 1 bytes @ 0x0
   904                           
   905  0070                     _isdigit$753:	
   906                           ; 1 bytes @ 0x0
   907                           
   908  0070                     ___wmul@multiplier:	
   909                           ; 1 bytes @ 0x0
   910                           
   911  0070                     ___lldiv@divisor:	
   912                           ; 2 bytes @ 0x0
   913                           
   914  0070                     ___flge@ff1:	
   915                           ; 4 bytes @ 0x0
   916                           
   917  0070                     ___flneg@f1:	
   918                           ; 4 bytes @ 0x0
   919                           
   920                           
   921                           ; 4 bytes @ 0x0
   922  0070                     	ds	1
   923  0071                     ??_IO_Expander_Write:
   924  0071                     IO_Expander_Write@Data:	
   925                           ; 1 bytes @ 0x1
   926                           
   927  0071                     isdigit@c:	
   928                           ; 1 bytes @ 0x1
   929                           
   930                           
   931                           ; 1 bytes @ 0x1
   932  0071                     	ds	1
   933  0072                     ??__Umul8_16:
   934  0072                     ??_LeerAdc:	
   935                           ; 1 bytes @ 0x2
   936                           
   937  0072                     ??_LCD_Write_4Bit:	
   938                           ; 1 bytes @ 0x2
   939                           
   940  0072                     ___wmul@multiplicand:	
   941                           ; 1 bytes @ 0x2
   942                           
   943                           
   944                           ; 2 bytes @ 0x2
   945  0072                     	ds	1
   946  0073                     LCD_Write_4Bit@Nibble:
   947                           
   948                           ; 1 bytes @ 0x3
   949  0073                     	ds	1
   950  0074                     ??_LCD_CMD:
   951  0074                     ??_LCD_Write_Char:	
   952                           ; 1 bytes @ 0x4
   953                           
   954  0074                     ??___wmul:	
   955                           ; 1 bytes @ 0x4
   956                           
   957  0074                     ??___flneg:	
   958                           ; 1 bytes @ 0x4
   959                           
   960  0074                     LeerAdc@canal:	
   961                           ; 1 bytes @ 0x4
   962                           
   963  0074                     ___wmul@product:	
   964                           ; 1 bytes @ 0x4
   965                           
   966  0074                     __Umul8_16@product:	
   967                           ; 2 bytes @ 0x4
   968                           
   969  0074                     ___lldiv@dividend:	
   970                           ; 2 bytes @ 0x4
   971                           
   972  0074                     ___flge@ff2:	
   973                           ; 4 bytes @ 0x4
   974                           
   975                           
   976                           ; 4 bytes @ 0x4
   977  0074                     	ds	1
   978  0075                     ?___xxtofl:
   979  0075                     LCD_CMD@CMD:	
   980                           ; 4 bytes @ 0x5
   981                           
   982  0075                     LCD_Write_Char@Data:	
   983                           ; 1 bytes @ 0x5
   984                           
   985  0075                     ___xxtofl@val:	
   986                           ; 1 bytes @ 0x5
   987                           
   988                           
   989                           ; 4 bytes @ 0x5
   990  0075                     	ds	1
   991  0076                     ?_LCD_Set_Cursor:
   992  0076                     ?_LCD_Write_String:	
   993                           ; 1 bytes @ 0x6
   994                           
   995  0076                     ??_LCD_Init:	
   996                           ; 1 bytes @ 0x6
   997                           
   998  0076                     LCD_Set_Cursor@COL:	
   999                           ; 1 bytes @ 0x6
  1000                           
  1001  0076                     LCD_Write_String@Str:	
  1002                           ; 1 bytes @ 0x6
  1003                           
  1004  0076                     __Umul8_16@word_mpld:	
  1005                           ; 2 bytes @ 0x6
  1006                           
  1007                           
  1008                           ; 2 bytes @ 0x6
  1009  0076                     	ds	1
  1010  0077                     ??_LCD_Set_Cursor:
  1011                           
  1012                           ; 1 bytes @ 0x7
  1013  0077                     	ds	1
  1014  0078                     ??_LCD_Write_String:
  1015  0078                     ??___lldiv:	
  1016                           ; 1 bytes @ 0x8
  1017                           
  1018  0078                     ??___flge:	
  1019                           ; 1 bytes @ 0x8
  1020                           
  1021  0078                     LCD_Init@I2C_Add:	
  1022                           ; 1 bytes @ 0x8
  1023                           
  1024  0078                     __Umul8_16@multiplier:	
  1025                           ; 1 bytes @ 0x8
  1026                           
  1027                           
  1028                           ; 1 bytes @ 0x8
  1029  0078                     	ds	1
  1030  0079                     ??___xxtofl:
  1031  0079                     LCD_Set_Cursor@ROW:	
  1032                           ; 1 bytes @ 0x9
  1033                           
  1034  0079                     LCD_Write_String@i:	
  1035                           ; 1 bytes @ 0x9
  1036                           
  1037  0079                     ___lldiv@quotient:	
  1038                           ; 2 bytes @ 0x9
  1039                           
  1040                           
  1041                           ; 4 bytes @ 0x9
  1042  0079                     	ds	2
  1043  007B                     ??_PutTexto:
  1044  007B                     ??_TanqueLLeno:	
  1045                           ; 1 bytes @ 0xB
  1046                           
  1047  007B                     ??_TanqueVacio:	
  1048                           ; 1 bytes @ 0xB
  1049                           
  1050                           
  1051                           ; 1 bytes @ 0xB
  1052  007B                     	ds	1
  1053  007C                     ??_inicio:
  1054  007C                     ??_CondicionesDeRiego:	
  1055                           ; 1 bytes @ 0xC
  1056                           
  1057                           
  1058                           ; 1 bytes @ 0xC
  1059  007C                     	ds	1
  1060  007D                     ??___flsub:
  1061  007D                     ___lldiv@counter:	
  1062                           ; 1 bytes @ 0xD
  1063                           
  1064                           
  1065                           ; 1 bytes @ 0xD
  1066  007D                     	ds	1
  1067                           
  1068                           	psect	cstackBANK0
  1069  0020                     __pcstackBANK0:
  1070  0020                     ?___llmod:
  1071  0020                     ___xxtofl@sign:	
  1072                           ; 4 bytes @ 0x0
  1073                           
  1074  0020                     ___llmod@divisor:	
  1075                           ; 1 bytes @ 0x0
  1076                           
  1077                           
  1078                           ; 4 bytes @ 0x0
  1079  0020                     	ds	1
  1080  0021                     ___xxtofl@exp:
  1081                           
  1082                           ; 1 bytes @ 0x1
  1083  0021                     	ds	1
  1084  0022                     ___xxtofl@arg:
  1085                           
  1086                           ; 4 bytes @ 0x2
  1087  0022                     	ds	2
  1088  0024                     ___llmod@dividend:
  1089                           
  1090                           ; 4 bytes @ 0x4
  1091  0024                     	ds	2
  1092  0026                     ?___flmul:
  1093  0026                     ___flmul@b:	
  1094                           ; 4 bytes @ 0x6
  1095                           
  1096                           
  1097                           ; 4 bytes @ 0x6
  1098  0026                     	ds	2
  1099  0028                     ??___llmod:
  1100                           
  1101                           ; 1 bytes @ 0x8
  1102  0028                     	ds	1
  1103  0029                     ___llmod@counter:
  1104                           
  1105                           ; 1 bytes @ 0x9
  1106  0029                     	ds	1
  1107  002A                     ?_sprintf:
  1108  002A                     sprintf@f:	
  1109                           ; 2 bytes @ 0xA
  1110                           
  1111  002A                     ___flmul@a:	
  1112                           ; 2 bytes @ 0xA
  1113                           
  1114                           
  1115                           ; 4 bytes @ 0xA
  1116  002A                     	ds	4
  1117  002E                     ??___flmul:
  1118                           
  1119                           ; 1 bytes @ 0xE
  1120  002E                     	ds	5
  1121  0033                     ___flmul@sign:
  1122                           
  1123                           ; 1 bytes @ 0x13
  1124  0033                     	ds	1
  1125  0034                     ??_sprintf:
  1126  0034                     ___flmul@grs:	
  1127                           ; 1 bytes @ 0x14
  1128                           
  1129                           
  1130                           ; 4 bytes @ 0x14
  1131  0034                     	ds	4
  1132  0038                     ___flmul@aexp:
  1133                           
  1134                           ; 1 bytes @ 0x18
  1135  0038                     	ds	1
  1136  0039                     ___flmul@bexp:
  1137                           
  1138                           ; 1 bytes @ 0x19
  1139  0039                     	ds	1
  1140  003A                     sprintf@flag:
  1141  003A                     ___flmul@prod:	
  1142                           ; 1 bytes @ 0x1A
  1143                           
  1144                           
  1145                           ; 4 bytes @ 0x1A
  1146  003A                     	ds	1
  1147  003B                     sprintf@ap:
  1148                           
  1149                           ; 1 bytes @ 0x1B
  1150  003B                     	ds	1
  1151  003C                     sprintf@val:
  1152                           
  1153                           ; 4 bytes @ 0x1C
  1154  003C                     	ds	2
  1155  003E                     ___flmul@temp:
  1156                           
  1157                           ; 2 bytes @ 0x1E
  1158  003E                     	ds	2
  1159  0040                     ?___fltol:
  1160  0040                     ?___fladd:	
  1161                           ; 4 bytes @ 0x20
  1162                           
  1163  0040                     sprintf@sp:	
  1164                           ; 4 bytes @ 0x20
  1165                           
  1166  0040                     ___fltol@f1:	
  1167                           ; 1 bytes @ 0x20
  1168                           
  1169  0040                     ___fladd@b:	
  1170                           ; 4 bytes @ 0x20
  1171                           
  1172                           
  1173                           ; 4 bytes @ 0x20
  1174  0040                     	ds	1
  1175  0041                     sprintf@width:
  1176                           
  1177                           ; 2 bytes @ 0x21
  1178  0041                     	ds	2
  1179  0043                     sprintf@prec:
  1180                           
  1181                           ; 2 bytes @ 0x23
  1182  0043                     	ds	1
  1183  0044                     ??___fltol:
  1184  0044                     ___fladd@a:	
  1185                           ; 1 bytes @ 0x24
  1186                           
  1187                           
  1188                           ; 4 bytes @ 0x24
  1189  0044                     	ds	1
  1190  0045                     sprintf@c:
  1191                           
  1192                           ; 1 bytes @ 0x25
  1193  0045                     	ds	3
  1194  0048                     ??___fladd:
  1195                           
  1196                           ; 1 bytes @ 0x28
  1197  0048                     	ds	1
  1198  0049                     ___fltol@sign1:
  1199                           
  1200                           ; 1 bytes @ 0x29
  1201  0049                     	ds	1
  1202  004A                     ___fltol@exp1:
  1203                           
  1204                           ; 1 bytes @ 0x2A
  1205  004A                     	ds	6
  1206  0050                     ___fladd@signs:
  1207                           
  1208                           ; 1 bytes @ 0x30
  1209  0050                     	ds	1
  1210  0051                     ___fladd@aexp:
  1211                           
  1212                           ; 1 bytes @ 0x31
  1213  0051                     	ds	1
  1214  0052                     ___fladd@bexp:
  1215                           
  1216                           ; 1 bytes @ 0x32
  1217  0052                     	ds	1
  1218  0053                     ___fladd@grs:
  1219                           
  1220                           ; 1 bytes @ 0x33
  1221  0053                     	ds	1
  1222  0054                     ??_LeerSensores:
  1223  0054                     ?___flsub:	
  1224                           ; 1 bytes @ 0x34
  1225                           
  1226  0054                     ___flsub@a:	
  1227                           ; 4 bytes @ 0x34
  1228                           
  1229                           
  1230                           ; 4 bytes @ 0x34
  1231  0054                     	ds	4
  1232  0058                     ___flsub@b:
  1233                           
  1234                           ; 4 bytes @ 0x38
  1235  0058                     	ds	4
  1236  005C                     ?_ftoa:
  1237  005C                     ftoa@f:	
  1238                           ; 1 bytes @ 0x3C
  1239                           
  1240                           
  1241                           ; 4 bytes @ 0x3C
  1242  005C                     	ds	4
  1243  0060                     ftoa@status:
  1244                           
  1245                           ; 1 bytes @ 0x40
  1246  0060                     	ds	1
  1247  0061                     ??_ftoa:
  1248                           
  1249                           ; 1 bytes @ 0x41
  1250  0061                     	ds	1
  1251  0062                     ftoa@rem:
  1252                           
  1253                           ; 4 bytes @ 0x42
  1254  0062                     	ds	4
  1255  0066                     ftoa@l:
  1256                           
  1257                           ; 4 bytes @ 0x46
  1258  0066                     	ds	4
  1259  006A                     ftoa@cp:
  1260                           
  1261                           ; 1 bytes @ 0x4A
  1262  006A                     	ds	1
  1263  006B                     ??_PutVariables:
  1264                           
  1265                           ; 1 bytes @ 0x4B
  1266  006B                     	ds	1
  1267  006C                     ??_main:
  1268                           
  1269                           ; 1 bytes @ 0x4C
  1270  006C                     	ds	2
  1271                           
  1272                           	psect	maintext
  1273  0BCB                     __pmaintext:	
  1274 ;;
  1275 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1276 ;;
  1277 ;; *************** function _main *****************
  1278 ;; Defined at:
  1279 ;;		line 209 in file "Entrega2.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;		None
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;		None
  1284 ;; Return value:  Size  Location     Type
  1285 ;;                  1    wreg      void 
  1286 ;; Registers used:
  1287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1288 ;; Tracked objects:
  1289 ;;		On entry : B3F/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1293 ;;      Params:         0       0       0       0       0       0       0       0
  1294 ;;      Locals:         0       0       0       0       0       0       0       0
  1295 ;;      Temps:          0       2       0       0       0       0       0       0
  1296 ;;      Totals:         0       2       0       0       0       0       0       0
  1297 ;;Total ram usage:        2 bytes
  1298 ;; Hardware stack levels required when called:    8
  1299 ;; This function calls:
  1300 ;;		_CondicionesDeRiego
  1301 ;;		_Iniciar_ADC
  1302 ;;		_LeerSensores
  1303 ;;		_PutVariables
  1304 ;;		_TanqueLLeno
  1305 ;;		_TanqueVacio
  1306 ;;		_inicio
  1307 ;; This function is called by:
  1308 ;;		Startup code after reset
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           
  1313                           ;psect for function _main
  1314  0BCB                     _main:
  1315  0BCB                     l2717:	
  1316                           ;incstack = 0
  1317                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1318                           
  1319                           
  1320                           ;Entrega2.c: 210:     TRISC=nivel;
  1321  0BCB  300C               	movlw	12
  1322  0BCC  0140               	movlb	0	; select bank0
  1323  0BCD  0094               	movwf	20	;volatile
  1324  0BCE                     l2719:
  1325                           
  1326                           ;Entrega2.c: 211:     ANSELC=0x00;
  1327  0BCE  017E               	movlb	62	; select bank62
  1328  0BCF  01CE               	clrf	78	;volatile
  1329  0BD0                     l2721:
  1330                           
  1331                           ;Entrega2.c: 213:     PORTC|=0b11110011;
  1332  0BD0  30F3               	movlw	243
  1333  0BD1  0140               	movlb	0	; select bank0
  1334  0BD2  00EC               	movwf	??_main
  1335  0BD3  086C               	movf	??_main,w
  1336  0BD4  048E               	iorwf	14,f	;volatile
  1337  0BD5                     l2723:
  1338                           
  1339                           ;Entrega2.c: 214:     _delay((unsigned long)((800)*(32000000/4000.0)));
  1340  0BD5  3021               	movlw	33
  1341  0BD6  0140               	movlb	0	; select bank0
  1342  0BD7  00ED               	movwf	??_main+1
  1343  0BD8  3078               	movlw	120
  1344  0BD9  00EC               	movwf	??_main
  1345  0BDA  3098               	movlw	152
  1346  0BDB                     u3157:
  1347  0BDB  0B89               	decfsz	9,f
  1348  0BDC  2BDB               	goto	u3157
  1349  0BDD  0BEC               	decfsz	??_main,f
  1350  0BDE  2BDB               	goto	u3157
  1351  0BDF  0BED               	decfsz	??_main+1,f
  1352  0BE0  2BDB               	goto	u3157
  1353  0BE1  0000               	nop
  1354  0BE2                     l2725:
  1355                           
  1356                           ;Entrega2.c: 215:     PORTC&=~0b11110000;
  1357  0BE2  300F               	movlw	15
  1358  0BE3  0140               	movlb	0	; select bank0
  1359  0BE4  00EC               	movwf	??_main
  1360  0BE5  086C               	movf	??_main,w
  1361  0BE6  058E               	andwf	14,f	;volatile
  1362  0BE7                     l2727:
  1363                           
  1364                           ;Entrega2.c: 218:     TRISB=0b01010000;
  1365  0BE7  3050               	movlw	80
  1366  0BE8  0093               	movwf	19	;volatile
  1367  0BE9                     l2729:
  1368                           
  1369                           ;Entrega2.c: 219:     TRISA=0b111111;
  1370  0BE9  303F               	movlw	63
  1371  0BEA  0092               	movwf	18	;volatile
  1372  0BEB                     l2731:
  1373                           
  1374                           ;Entrega2.c: 220:     ANSELA=0xff;
  1375  0BEB  30FF               	movlw	255
  1376  0BEC  017E               	movlb	62	; select bank62
  1377  0BED  00B8               	movwf	56	;volatile
  1378  0BEE                     l2733:
  1379                           
  1380                           ;Entrega2.c: 223:     Iniciar_ADC();
  1381  0BEE  3189  21B8  318B   	fcall	_Iniciar_ADC
  1382  0BF1                     l2735:
  1383                           
  1384                           ;Entrega2.c: 224:     inicio();
  1385  0BF1  3189  21C9  318B   	fcall	_inicio
  1386  0BF4                     l2737:
  1387                           
  1388                           ;Entrega2.c: 228:     {;Entrega2.c: 230:         LeerSensores();
  1389  0BF4  3180  209E  318B   	fcall	_LeerSensores
  1390  0BF7                     l2739:
  1391                           
  1392                           ;Entrega2.c: 231:         PutVariables();
  1393  0BF7  3180  200E  318B   	fcall	_PutVariables
  1394  0BFA                     l2741:
  1395                           
  1396                           ;Entrega2.c: 232:         TanqueVacio();
  1397  0BFA  318B  2398  318B   	fcall	_TanqueVacio
  1398  0BFD                     l2743:
  1399                           
  1400                           ;Entrega2.c: 233:         TanqueLLeno();
  1401  0BFD  318B  236A  318B   	fcall	_TanqueLLeno
  1402  0C00                     l2745:
  1403                           
  1404                           ;Entrega2.c: 234:         CondicionesDeRiego();
  1405  0C00  318C  245E  318B   	fcall	_CondicionesDeRiego
  1406  0C03                     l2747:
  1407                           
  1408                           ;Entrega2.c: 235:         _delay((unsigned long)((500)*(32000000/4000.0)));
  1409  0C03  3015               	movlw	21
  1410  0C04  0140               	movlb	0	; select bank0
  1411  0C05  00ED               	movwf	??_main+1
  1412  0C06  304B               	movlw	75
  1413  0C07  00EC               	movwf	??_main
  1414  0C08  30BE               	movlw	190
  1415  0C09                     u3167:
  1416  0C09  0B89               	decfsz	9,f
  1417  0C0A  2C09               	goto	u3167
  1418  0C0B  0BEC               	decfsz	??_main,f
  1419  0C0C  2C09               	goto	u3167
  1420  0C0D  0BED               	decfsz	??_main+1,f
  1421  0C0E  2C09               	goto	u3167
  1422  0C0F  0000               	nop
  1423  0C10  2BF4               	goto	l2737
  1424  0C11  3180  2802         	ljmp	start
  1425  0C13                     __end_of_main:
  1426                           
  1427                           	psect	text1
  1428  09C9                     __ptext1:	
  1429 ;; *************** function _inicio *****************
  1430 ;; Defined at:
  1431 ;;		line 139 in file "Entrega2.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;		None
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;		None
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      void 
  1438 ;; Registers used:
  1439 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1445 ;;      Params:         0       0       0       0       0       0       0       0
  1446 ;;      Locals:         0       0       0       0       0       0       0       0
  1447 ;;      Temps:          0       0       0       0       0       0       0       0
  1448 ;;      Totals:         0       0       0       0       0       0       0       0
  1449 ;;Total ram usage:        0 bytes
  1450 ;; Hardware stack levels used:    1
  1451 ;; Hardware stack levels required when called:    7
  1452 ;; This function calls:
  1453 ;;		_I2C_Master_Init
  1454 ;;		_LCD_Init
  1455 ;;		_PutTexto
  1456 ;; This function is called by:
  1457 ;;		_main
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461                           
  1462                           ;psect for function _inicio
  1463  09C9                     _inicio:
  1464  09C9                     l2669:	
  1465                           ;incstack = 0
  1466                           ; Regs used in _inicio: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1467                           
  1468                           
  1469                           ;Entrega2.c: 142:     I2C_Master_Init();
  1470  09C9  318A  22D4  3189   	fcall	_I2C_Master_Init
  1471                           
  1472                           ;Entrega2.c: 144:     LCD_Init(0x4E);
  1473  09CC  304E               	movlw	78
  1474  09CD  318D  2584  3189   	fcall	_LCD_Init
  1475  09D0                     l2671:
  1476                           
  1477                           ;Entrega2.c: 145:     PutTexto();
  1478  09D0  318B  2318  3189   	fcall	_PutTexto
  1479  09D3                     l92:
  1480  09D3  0008               	return
  1481  09D4                     __end_of_inicio:
  1482                           
  1483                           	psect	text2
  1484  0B18                     __ptext2:	
  1485 ;; *************** function _PutTexto *****************
  1486 ;; Defined at:
  1487 ;;		line 131 in file "Entrega2.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;		None
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;		None
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  1    wreg      void 
  1494 ;; Registers used:
  1495 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1501 ;;      Params:         0       0       0       0       0       0       0       0
  1502 ;;      Locals:         0       0       0       0       0       0       0       0
  1503 ;;      Temps:          1       0       0       0       0       0       0       0
  1504 ;;      Totals:         1       0       0       0       0       0       0       0
  1505 ;;Total ram usage:        1 bytes
  1506 ;; Hardware stack levels used:    1
  1507 ;; Hardware stack levels required when called:    6
  1508 ;; This function calls:
  1509 ;;		_LCD_Set_Cursor
  1510 ;;		_LCD_Write_String
  1511 ;; This function is called by:
  1512 ;;		_inicio
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516                           
  1517                           ;psect for function _PutTexto
  1518  0B18                     _PutTexto:
  1519  0B18                     l2615:	
  1520                           ;incstack = 0
  1521                           ; Regs used in _PutTexto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1522                           
  1523                           
  1524                           ;Entrega2.c: 133:     LCD_Write_String("Uv=");
  1525  0B18  3065               	movlw	low (STR_1| (0+32768))
  1526  0B19  00F6               	movwf	LCD_Write_String@Str
  1527  0B1A  3088               	movlw	high (STR_1| (0+32768))
  1528  0B1B  00F7               	movwf	LCD_Write_String@Str+1
  1529  0B1C  318A  2258  318B   	fcall	_LCD_Write_String
  1530                           
  1531                           ;Entrega2.c: 134:     LCD_Set_Cursor(1, 8);
  1532  0B1F  3008               	movlw	8
  1533  0B20  00FB               	movwf	??_PutTexto
  1534  0B21  087B               	movf	??_PutTexto,w
  1535  0B22  00F6               	movwf	LCD_Set_Cursor@COL
  1536  0B23  3001               	movlw	1
  1537  0B24  318B  233C  318B   	fcall	_LCD_Set_Cursor
  1538                           
  1539                           ;Entrega2.c: 135:     LCD_Write_String("T=");
  1540  0B27  306C               	movlw	low (STR_2| (0+32768))
  1541  0B28  00F6               	movwf	LCD_Write_String@Str
  1542  0B29  3088               	movlw	high (STR_2| (0+32768))
  1543  0B2A  00F7               	movwf	LCD_Write_String@Str+1
  1544  0B2B  318A  2258  318B   	fcall	_LCD_Write_String
  1545                           
  1546                           ;Entrega2.c: 136:     LCD_Set_Cursor(2, 1);
  1547  0B2E  01F6               	clrf	LCD_Set_Cursor@COL
  1548  0B2F  0AF6               	incf	LCD_Set_Cursor@COL,f
  1549  0B30  3002               	movlw	2
  1550  0B31  318B  233C  318B   	fcall	_LCD_Set_Cursor
  1551                           
  1552                           ;Entrega2.c: 137:     LCD_Write_String("H=");
  1553  0B34  3069               	movlw	low (STR_3| (0+32768))
  1554  0B35  00F6               	movwf	LCD_Write_String@Str
  1555  0B36  3088               	movlw	high (STR_3| (0+32768))
  1556  0B37  00F7               	movwf	LCD_Write_String@Str+1
  1557  0B38  318A  2258  318B   	fcall	_LCD_Write_String
  1558  0B3B                     l89:
  1559  0B3B  0008               	return
  1560  0B3C                     __end_of_PutTexto:
  1561                           
  1562                           	psect	text3
  1563  0D84                     __ptext3:	
  1564 ;; *************** function _LCD_Init *****************
  1565 ;; Defined at:
  1566 ;;		line 104 in file "I2C_LCD.c"
  1567 ;; Parameters:    Size  Location     Type
  1568 ;;  I2C_Add         1    wreg     unsigned char 
  1569 ;; Auto vars:     Size  Location     Type
  1570 ;;  I2C_Add         1    8[COMMON] unsigned char 
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  1    wreg      void 
  1573 ;; Registers used:
  1574 ;;		wreg, status,2, status,0, pclath, cstack
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1580 ;;      Params:         0       0       0       0       0       0       0       0
  1581 ;;      Locals:         1       0       0       0       0       0       0       0
  1582 ;;      Temps:          2       0       0       0       0       0       0       0
  1583 ;;      Totals:         3       0       0       0       0       0       0       0
  1584 ;;Total ram usage:        3 bytes
  1585 ;; Hardware stack levels used:    1
  1586 ;; Hardware stack levels required when called:    5
  1587 ;; This function calls:
  1588 ;;		_I2C_Master_Start
  1589 ;;		_I2C_Master_Stop
  1590 ;;		_IO_Expander_Write
  1591 ;;		_LCD_CMD
  1592 ;; This function is called by:
  1593 ;;		_inicio
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           
  1598                           ;psect for function _LCD_Init
  1599  0D84                     _LCD_Init:
  1600                           
  1601                           ;incstack = 0
  1602                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1603                           ;LCD_Init@I2C_Add stored from wreg
  1604  0D84  00F8               	movwf	LCD_Init@I2C_Add
  1605  0D85                     l2617:
  1606                           
  1607                           ;I2C_LCD.c: 104: void LCD_Init(unsigned char I2C_Add);I2C_LCD.c: 105: {;I2C_LCD.c: 106: 
      +                            i2c_add = I2C_Add;
  1608  0D85  0878               	movf	LCD_Init@I2C_Add,w
  1609  0D86  00F6               	movwf	??_LCD_Init
  1610  0D87  0876               	movf	??_LCD_Init,w
  1611  0D88  0141               	movlb	1	; select bank1
  1612  0D89  00AC               	movwf	_i2c_add^(0+128)
  1613  0D8A                     l2619:
  1614                           
  1615                           ;I2C_LCD.c: 108:   I2C_Master_Start();
  1616  0D8A  3189  21AC  318D   	fcall	_I2C_Master_Start
  1617  0D8D                     l2621:
  1618                           
  1619                           ;I2C_LCD.c: 109:   IO_Expander_Write(0x00);
  1620  0D8D  3000               	movlw	0
  1621  0D8E  318A  2205  318D   	fcall	_IO_Expander_Write
  1622  0D91                     l2623:
  1623                           
  1624                           ;I2C_LCD.c: 110:   I2C_Master_Stop();
  1625  0D91  3189  21B2  318D   	fcall	_I2C_Master_Stop
  1626  0D94                     l2625:
  1627                           
  1628                           ;I2C_LCD.c: 111:   _delay((unsigned long)((30)*(32000000/4000.0)));
  1629  0D94  3002               	movlw	2
  1630  0D95  00F7               	movwf	??_LCD_Init+1
  1631  0D96  3038               	movlw	56
  1632  0D97  00F6               	movwf	??_LCD_Init
  1633  0D98  30AD               	movlw	173
  1634  0D99                     u3177:
  1635  0D99  0B89               	decfsz	9,f
  1636  0D9A  2D99               	goto	u3177
  1637  0D9B  0BF6               	decfsz	??_LCD_Init,f
  1638  0D9C  2D99               	goto	u3177
  1639  0D9D  0BF7               	decfsz	??_LCD_Init+1,f
  1640  0D9E  2D99               	goto	u3177
  1641  0D9F  0000               	nop
  1642                           
  1643                           ;I2C_LCD.c: 112:   LCD_CMD(0x03);
  1644  0DA0  3003               	movlw	3
  1645  0DA1  318A  222D  318D   	fcall	_LCD_CMD
  1646  0DA4                     l2627:
  1647                           
  1648                           ;I2C_LCD.c: 113:   _delay((unsigned long)((5)*(32000000/4000.0)));
  1649  0DA4  3034               	movlw	52
  1650  0DA5  00F6               	movwf	??_LCD_Init
  1651  0DA6  30F2               	movlw	242
  1652  0DA7                     u3187:
  1653  0DA7  0B89               	decfsz	9,f
  1654  0DA8  2DA7               	goto	u3187
  1655  0DA9  0BF6               	decfsz	??_LCD_Init,f
  1656  0DAA  2DA7               	goto	u3187
  1657  0DAB                     l2629:
  1658                           
  1659                           ;I2C_LCD.c: 114:   LCD_CMD(0x03);
  1660  0DAB  3003               	movlw	3
  1661  0DAC  318A  222D  318D   	fcall	_LCD_CMD
  1662                           
  1663                           ;I2C_LCD.c: 115:   _delay((unsigned long)((5)*(32000000/4000.0)));
  1664  0DAF  3034               	movlw	52
  1665  0DB0  00F6               	movwf	??_LCD_Init
  1666  0DB1  30F2               	movlw	242
  1667  0DB2                     u3197:
  1668  0DB2  0B89               	decfsz	9,f
  1669  0DB3  2DB2               	goto	u3197
  1670  0DB4  0BF6               	decfsz	??_LCD_Init,f
  1671  0DB5  2DB2               	goto	u3197
  1672  0DB6                     l2631:
  1673                           
  1674                           ;I2C_LCD.c: 116:   LCD_CMD(0x03);
  1675  0DB6  3003               	movlw	3
  1676  0DB7  318A  222D  318D   	fcall	_LCD_CMD
  1677  0DBA                     l2633:
  1678                           
  1679                           ;I2C_LCD.c: 117:   _delay((unsigned long)((5)*(32000000/4000.0)));
  1680  0DBA  3034               	movlw	52
  1681  0DBB  00F6               	movwf	??_LCD_Init
  1682  0DBC  30F2               	movlw	242
  1683  0DBD                     u3207:
  1684  0DBD  0B89               	decfsz	9,f
  1685  0DBE  2DBD               	goto	u3207
  1686  0DBF  0BF6               	decfsz	??_LCD_Init,f
  1687  0DC0  2DBD               	goto	u3207
  1688                           
  1689                           ;I2C_LCD.c: 118:   LCD_CMD(0x02);
  1690  0DC1  3002               	movlw	2
  1691  0DC2  318A  222D  318D   	fcall	_LCD_CMD
  1692  0DC5                     l2635:
  1693                           
  1694                           ;I2C_LCD.c: 119:   _delay((unsigned long)((5)*(32000000/4000.0)));
  1695  0DC5  3034               	movlw	52
  1696  0DC6  00F6               	movwf	??_LCD_Init
  1697  0DC7  30F2               	movlw	242
  1698  0DC8                     u3217:
  1699  0DC8  0B89               	decfsz	9,f
  1700  0DC9  2DC8               	goto	u3217
  1701  0DCA  0BF6               	decfsz	??_LCD_Init,f
  1702  0DCB  2DC8               	goto	u3217
  1703  0DCC                     l2637:
  1704                           
  1705                           ;I2C_LCD.c: 120:   LCD_CMD(0x20 | (2 << 2));
  1706  0DCC  3028               	movlw	40
  1707  0DCD  318A  222D  318D   	fcall	_LCD_CMD
  1708                           
  1709                           ;I2C_LCD.c: 121:   _delay((unsigned long)((50)*(32000000/4000.0)));
  1710  0DD0  3003               	movlw	3
  1711  0DD1  00F7               	movwf	??_LCD_Init+1
  1712  0DD2  3008               	movlw	8
  1713  0DD3  00F6               	movwf	??_LCD_Init
  1714  0DD4  3077               	movlw	119
  1715  0DD5                     u3227:
  1716  0DD5  0B89               	decfsz	9,f
  1717  0DD6  2DD5               	goto	u3227
  1718  0DD7  0BF6               	decfsz	??_LCD_Init,f
  1719  0DD8  2DD5               	goto	u3227
  1720  0DD9  0BF7               	decfsz	??_LCD_Init+1,f
  1721  0DDA  2DD5               	goto	u3227
  1722  0DDB  0000               	nop
  1723  0DDC                     l2639:
  1724                           
  1725                           ;I2C_LCD.c: 122:   LCD_CMD(0x0C);
  1726  0DDC  300C               	movlw	12
  1727  0DDD  318A  222D  318D   	fcall	_LCD_CMD
  1728  0DE0                     l2641:
  1729                           
  1730                           ;I2C_LCD.c: 123:   _delay((unsigned long)((50)*(32000000/4000.0)));
  1731  0DE0  3003               	movlw	3
  1732  0DE1  00F7               	movwf	??_LCD_Init+1
  1733  0DE2  3008               	movlw	8
  1734  0DE3  00F6               	movwf	??_LCD_Init
  1735  0DE4  3077               	movlw	119
  1736  0DE5                     u3237:
  1737  0DE5  0B89               	decfsz	9,f
  1738  0DE6  2DE5               	goto	u3237
  1739  0DE7  0BF6               	decfsz	??_LCD_Init,f
  1740  0DE8  2DE5               	goto	u3237
  1741  0DE9  0BF7               	decfsz	??_LCD_Init+1,f
  1742  0DEA  2DE5               	goto	u3237
  1743  0DEB  0000               	nop
  1744                           
  1745                           ;I2C_LCD.c: 124:   LCD_CMD(0x01);
  1746  0DEC  3001               	movlw	1
  1747  0DED  318A  222D  318D   	fcall	_LCD_CMD
  1748  0DF0                     l2643:
  1749                           
  1750                           ;I2C_LCD.c: 125:   _delay((unsigned long)((50)*(32000000/4000.0)));
  1751  0DF0  3003               	movlw	3
  1752  0DF1  00F7               	movwf	??_LCD_Init+1
  1753  0DF2  3008               	movlw	8
  1754  0DF3  00F6               	movwf	??_LCD_Init
  1755  0DF4  3077               	movlw	119
  1756  0DF5                     u3247:
  1757  0DF5  0B89               	decfsz	9,f
  1758  0DF6  2DF5               	goto	u3247
  1759  0DF7  0BF6               	decfsz	??_LCD_Init,f
  1760  0DF8  2DF5               	goto	u3247
  1761  0DF9  0BF7               	decfsz	??_LCD_Init+1,f
  1762  0DFA  2DF5               	goto	u3247
  1763  0DFB  0000               	nop
  1764  0DFC                     l2645:
  1765                           
  1766                           ;I2C_LCD.c: 126:   LCD_CMD(0x04 | 0x02);
  1767  0DFC  3006               	movlw	6
  1768  0DFD  318A  222D  318D   	fcall	_LCD_CMD
  1769                           
  1770                           ;I2C_LCD.c: 127:   _delay((unsigned long)((50)*(32000000/4000.0)));
  1771  0E00  3003               	movlw	3
  1772  0E01  00F7               	movwf	??_LCD_Init+1
  1773  0E02  3008               	movlw	8
  1774  0E03  00F6               	movwf	??_LCD_Init
  1775  0E04  3077               	movlw	119
  1776  0E05                     u3257:
  1777  0E05  0B89               	decfsz	9,f
  1778  0E06  2E05               	goto	u3257
  1779  0E07  0BF6               	decfsz	??_LCD_Init,f
  1780  0E08  2E05               	goto	u3257
  1781  0E09  0BF7               	decfsz	??_LCD_Init+1,f
  1782  0E0A  2E05               	goto	u3257
  1783  0E0B  0000               	nop
  1784  0E0C                     l204:
  1785  0E0C  0008               	return
  1786  0E0D                     __end_of_LCD_Init:
  1787                           
  1788                           	psect	text4
  1789  0AD4                     __ptext4:	
  1790 ;; *************** function _I2C_Master_Init *****************
  1791 ;; Defined at:
  1792 ;;		line 9 in file "I2C_LCD.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;		None
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;		None
  1797 ;; Return value:  Size  Location     Type
  1798 ;;                  1    wreg      void 
  1799 ;; Registers used:
  1800 ;;		wreg, status,2
  1801 ;; Tracked objects:
  1802 ;;		On entry : 0/0
  1803 ;;		On exit  : 0/0
  1804 ;;		Unchanged: 0/0
  1805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1806 ;;      Params:         0       0       0       0       0       0       0       0
  1807 ;;      Locals:         0       0       0       0       0       0       0       0
  1808 ;;      Temps:          0       0       0       0       0       0       0       0
  1809 ;;      Totals:         0       0       0       0       0       0       0       0
  1810 ;;Total ram usage:        0 bytes
  1811 ;; Hardware stack levels used:    1
  1812 ;; This function calls:
  1813 ;;		Nothing
  1814 ;; This function is called by:
  1815 ;;		_inicio
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819                           
  1820                           ;psect for function _I2C_Master_Init
  1821  0AD4                     _I2C_Master_Init:
  1822  0AD4                     l1633:	
  1823                           ;incstack = 0
  1824                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  1825                           
  1826                           
  1827                           ;I2C_LCD.c: 11:   SSP1ADD = 0x19;
  1828  0AD4  3019               	movlw	25
  1829  0AD5  0143               	movlb	3	; select bank3
  1830  0AD6  008D               	movwf	13	;volatile
  1831                           
  1832                           ;I2C_LCD.c: 12:   SSP1CON1 = 0x28;
  1833  0AD7  3028               	movlw	40
  1834  0AD8  0090               	movwf	16	;volatile
  1835  0AD9                     l1635:
  1836                           
  1837                           ;I2C_LCD.c: 13:   SSP1CON2 = 0x00;
  1838  0AD9  0191               	clrf	17	;volatile
  1839  0ADA                     l1637:
  1840                           
  1841                           ;I2C_LCD.c: 14:   SSP1STAT = 0x00;
  1842  0ADA  018F               	clrf	15	;volatile
  1843  0ADB                     l1639:
  1844                           
  1845                           ;I2C_LCD.c: 16:   TRISB6 = 1;
  1846  0ADB  0140               	movlb	0	; select bank0
  1847  0ADC  1713               	bsf	19,6	;volatile
  1848  0ADD                     l1641:
  1849                           
  1850                           ;I2C_LCD.c: 17:   TRISB4 = 1;
  1851  0ADD  1613               	bsf	19,4	;volatile
  1852  0ADE                     l1643:
  1853                           
  1854                           ;I2C_LCD.c: 20:   ANSELBbits.ANSB6 = 0;
  1855  0ADE  017E               	movlb	62	; select bank62
  1856  0ADF  1343               	bcf	67,6	;volatile
  1857  0AE0                     l1645:
  1858                           
  1859                           ;I2C_LCD.c: 21:   ANSELBbits.ANSB4 = 0;
  1860  0AE0  1243               	bcf	67,4	;volatile
  1861                           
  1862                           ;I2C_LCD.c: 24:   RB4PPS = 0x08;
  1863  0AE1  3008               	movlw	8
  1864  0AE2  009C               	movwf	28	;volatile
  1865                           
  1866                           ;I2C_LCD.c: 25:   RB6PPS = 0x07;
  1867  0AE3  3007               	movlw	7
  1868  0AE4  009E               	movwf	30	;volatile
  1869                           
  1870                           ;I2C_LCD.c: 27:   RB4I2C = 0b00000001;
  1871  0AE5  3001               	movlw	1
  1872  0AE6  0142               	movlb	2	; select bank2
  1873  0AE7  008C               	movwf	12	;volatile
  1874                           
  1875                           ;I2C_LCD.c: 28:   RB6I2C = 0b00000001;
  1876  0AE8  3001               	movlw	1
  1877  0AE9  008D               	movwf	13	;volatile
  1878                           
  1879                           ;I2C_LCD.c: 31:   SSP1DATPPS = 0b001100;
  1880  0AEA  300C               	movlw	12
  1881  0AEB  017D               	movlb	61	; select bank61
  1882  0AEC  00C6               	movwf	70	;volatile
  1883                           
  1884                           ;I2C_LCD.c: 32:   SSP1CLKPPS = 0b001110;
  1885  0AED  300E               	movlw	14
  1886  0AEE  00C5               	movwf	69	;volatile
  1887  0AEF                     l1647:
  1888                           
  1889                           ;I2C_LCD.c: 34:   PIR1bits.SSP1IF = 0;
  1890  0AEF  014E               	movlb	14	; select bank14
  1891  0AF0  108D               	bcf	13,1	;volatile
  1892  0AF1                     l1649:
  1893                           
  1894                           ;I2C_LCD.c: 35:   PIR1bits.BCL1IF = 0;
  1895  0AF1  110D               	bcf	13,2	;volatile
  1896  0AF2                     l1651:
  1897                           
  1898                           ;I2C_LCD.c: 36:   SSP1CON1bits.SSPEN = 1;
  1899  0AF2  0143               	movlb	3	; select bank3
  1900  0AF3  1690               	bsf	16,5	;volatile
  1901  0AF4                     l168:
  1902  0AF4  0008               	return
  1903  0AF5                     __end_of_I2C_Master_Init:
  1904                           
  1905                           	psect	text5
  1906  0B98                     __ptext5:	
  1907 ;; *************** function _TanqueVacio *****************
  1908 ;; Defined at:
  1909 ;;		line 175 in file "Entrega2.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;		None
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;		None
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  1    wreg      void 
  1916 ;; Registers used:
  1917 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1923 ;;      Params:         0       0       0       0       0       0       0       0
  1924 ;;      Locals:         0       0       0       0       0       0       0       0
  1925 ;;      Temps:          1       0       0       0       0       0       0       0
  1926 ;;      Totals:         1       0       0       0       0       0       0       0
  1927 ;;Total ram usage:        1 bytes
  1928 ;; Hardware stack levels used:    1
  1929 ;; Hardware stack levels required when called:    6
  1930 ;; This function calls:
  1931 ;;		_LCD_Set_Cursor
  1932 ;;		_LCD_Write_String
  1933 ;; This function is called by:
  1934 ;;		_main
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           
  1939                           ;psect for function _TanqueVacio
  1940  0B98                     _TanqueVacio:
  1941  0B98                     l2691:	
  1942                           ;incstack = 0
  1943                           ; Regs used in _TanqueVacio: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1944                           
  1945                           
  1946                           ;Entrega2.c: 177:     PORTCbits.RC7=PORTCbits.RC2;
  1947  0B98  0140               	movlb	0	; select bank0
  1948  0B99  190E               	btfsc	14,2	;volatile
  1949  0B9A  2B9C               	goto	u3071
  1950  0B9B  2B9F               	goto	u3070
  1951  0B9C                     u3071:
  1952  0B9C  0140               	movlb	0	; select bank0
  1953  0B9D  178E               	bsf	14,7	;volatile
  1954  0B9E  2BA1               	goto	u3084
  1955  0B9F                     u3070:
  1956  0B9F  0140               	movlb	0	; select bank0
  1957  0BA0  138E               	bcf	14,7	;volatile
  1958  0BA1                     u3084:
  1959                           
  1960                           ;Entrega2.c: 178:     PORTCbits.RC6=PORTCbits.RC3;
  1961  0BA1  198E               	btfsc	14,3	;volatile
  1962  0BA2  2BA4               	goto	u3091
  1963  0BA3  2BA7               	goto	u3090
  1964  0BA4                     u3091:
  1965  0BA4  0140               	movlb	0	; select bank0
  1966  0BA5  170E               	bsf	14,6	;volatile
  1967  0BA6  2BA9               	goto	u3104
  1968  0BA7                     u3090:
  1969  0BA7  0140               	movlb	0	; select bank0
  1970  0BA8  130E               	bcf	14,6	;volatile
  1971  0BA9                     u3104:
  1972  0BA9                     l2693:
  1973                           
  1974                           ;Entrega2.c: 179:     if((PORTC & nivel)==0b00001100)
  1975  0BA9  300C               	movlw	12
  1976  0BAA  050E               	andwf	14,w	;volatile
  1977  0BAB  00FB               	movwf	??_TanqueVacio
  1978  0BAC  300C               	movlw	12
  1979  0BAD  067B               	xorwf	??_TanqueVacio,w
  1980  0BAE  1D03               	btfss	3,2
  1981  0BAF  2BB1               	goto	u3111
  1982  0BB0  2BB2               	goto	u3110
  1983  0BB1                     u3111:
  1984  0BB1  2BCA               	goto	l106
  1985  0BB2                     u3110:
  1986  0BB2                     l2695:
  1987                           
  1988                           ;Entrega2.c: 180:     {;Entrega2.c: 181:         PORTC&=~PIN_VAL;
  1989  0BB2  30FE               	movlw	254
  1990  0BB3  00FB               	movwf	??_TanqueVacio
  1991  0BB4  087B               	movf	??_TanqueVacio,w
  1992  0BB5  058E               	andwf	14,f	;volatile
  1993  0BB6                     l2697:
  1994                           
  1995                           ;Entrega2.c: 183:         flag=1;
  1996  0BB6  0141               	movlb	1	; select bank1
  1997  0BB7  01B0               	clrf	_flag^(0+128)
  1998  0BB8  0AB0               	incf	_flag^(0+128),f
  1999  0BB9                     l2699:
  2000                           
  2001                           ;Entrega2.c: 184:         LCD_Set_Cursor(2, 8);
  2002  0BB9  3008               	movlw	8
  2003  0BBA  00FB               	movwf	??_TanqueVacio
  2004  0BBB  087B               	movf	??_TanqueVacio,w
  2005  0BBC  00F6               	movwf	LCD_Set_Cursor@COL
  2006  0BBD  3002               	movlw	2
  2007  0BBE  318B  233C  318B   	fcall	_LCD_Set_Cursor
  2008  0BC1                     l2701:
  2009                           
  2010                           ;Entrega2.c: 185:         LCD_Write_String("Llenando");
  2011  0BC1  3050               	movlw	low (STR_5| (0+32768))
  2012  0BC2  00F6               	movwf	LCD_Write_String@Str
  2013  0BC3  3088               	movlw	high (STR_5| (0+32768))
  2014  0BC4  00F7               	movwf	LCD_Write_String@Str+1
  2015  0BC5  318A  2258  318B   	fcall	_LCD_Write_String
  2016  0BC8                     l2703:
  2017                           
  2018                           ;Entrega2.c: 186:         PORTC|=PIN_BOM;
  2019  0BC8  0140               	movlb	0	; select bank0
  2020  0BC9  148E               	bsf	14,1	;volatile
  2021  0BCA                     l106:
  2022  0BCA  0008               	return
  2023  0BCB                     __end_of_TanqueVacio:
  2024                           
  2025                           	psect	text6
  2026  0B6A                     __ptext6:	
  2027 ;; *************** function _TanqueLLeno *****************
  2028 ;; Defined at:
  2029 ;;		line 157 in file "Entrega2.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;		None
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;		None
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  1    wreg      void 
  2036 ;; Registers used:
  2037 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2043 ;;      Params:         0       0       0       0       0       0       0       0
  2044 ;;      Locals:         0       0       0       0       0       0       0       0
  2045 ;;      Temps:          2       0       0       0       0       0       0       0
  2046 ;;      Totals:         2       0       0       0       0       0       0       0
  2047 ;;Total ram usage:        2 bytes
  2048 ;; Hardware stack levels used:    1
  2049 ;; Hardware stack levels required when called:    6
  2050 ;; This function calls:
  2051 ;;		_LCD_Set_Cursor
  2052 ;;		_LCD_Write_String
  2053 ;; This function is called by:
  2054 ;;		_main
  2055 ;; This function uses a non-reentrant model
  2056 ;;
  2057                           
  2058                           
  2059                           ;psect for function _TanqueLLeno
  2060  0B6A                     _TanqueLLeno:
  2061  0B6A                     l2675:	
  2062                           ;incstack = 0
  2063                           ; Regs used in _TanqueLLeno: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2064                           
  2065                           
  2066                           ;Entrega2.c: 159:     while(flag==1)
  2067  0B6A  2B91               	goto	l2689
  2068  0B6B                     l2677:
  2069                           
  2070                           ;Entrega2.c: 160:     {;Entrega2.c: 162:         if((PORTC & nivel)==0x0)
  2071  0B6B  0140               	movlb	0	; select bank0
  2072  0B6C  080E               	movf	14,w	;volatile
  2073  0B6D  390C               	andlw	12
  2074  0B6E  1D03               	btfss	3,2
  2075  0B6F  2B71               	goto	u3051
  2076  0B70  2B72               	goto	u3050
  2077  0B71                     u3051:
  2078  0B71  2B91               	goto	l2689
  2079  0B72                     u3050:
  2080  0B72                     l2679:
  2081                           
  2082                           ;Entrega2.c: 164:         {;Entrega2.c: 165:             flag=0;
  2083  0B72  0141               	movlb	1	; select bank1
  2084  0B73  01B0               	clrf	_flag^(0+128)
  2085  0B74                     l2681:
  2086                           
  2087                           ;Entrega2.c: 166:             PORTC|=PIN_VAL;
  2088  0B74  0140               	movlb	0	; select bank0
  2089  0B75  140E               	bsf	14,0	;volatile
  2090  0B76                     l2683:
  2091                           
  2092                           ;Entrega2.c: 167:             LCD_Set_Cursor(2, 8);
  2093  0B76  3008               	movlw	8
  2094  0B77  00FB               	movwf	??_TanqueLLeno
  2095  0B78  087B               	movf	??_TanqueLLeno,w
  2096  0B79  00F6               	movwf	LCD_Set_Cursor@COL
  2097  0B7A  3002               	movlw	2
  2098  0B7B  318B  233C  318B   	fcall	_LCD_Set_Cursor
  2099  0B7E                     l2685:
  2100                           
  2101                           ;Entrega2.c: 168:             LCD_Write_String("TanqFull");
  2102  0B7E  3047               	movlw	low (STR_4| (0+32768))
  2103  0B7F  00F6               	movwf	LCD_Write_String@Str
  2104  0B80  3088               	movlw	high (STR_4| (0+32768))
  2105  0B81  00F7               	movwf	LCD_Write_String@Str+1
  2106  0B82  318A  2258  318B   	fcall	_LCD_Write_String
  2107  0B85                     l2687:
  2108                           
  2109                           ;Entrega2.c: 169:             _delay((unsigned long)((1000)*(32000000/4000.0)));
  2110  0B85  3029               	movlw	41
  2111  0B86  00FC               	movwf	??_TanqueLLeno+1
  2112  0B87  3096               	movlw	150
  2113  0B88  00FB               	movwf	??_TanqueLLeno
  2114  0B89  307F               	movlw	127
  2115  0B8A                     u3267:
  2116  0B8A  0B89               	decfsz	9,f
  2117  0B8B  2B8A               	goto	u3267
  2118  0B8C  0BFB               	decfsz	??_TanqueLLeno,f
  2119  0B8D  2B8A               	goto	u3267
  2120  0B8E  0BFC               	decfsz	??_TanqueLLeno+1,f
  2121  0B8F  2B8A               	goto	u3267
  2122  0B90  0000               	nop
  2123  0B91                     l2689:
  2124                           
  2125                           ;Entrega2.c: 159:     while(flag==1)
  2126  0B91  0141               	movlb	1	; select bank1
  2127  0B92  0330               	decf	_flag^(0+128),w
  2128  0B93  1903               	btfsc	3,2
  2129  0B94  2B96               	goto	u3061
  2130  0B95  2B97               	goto	u3060
  2131  0B96                     u3061:
  2132  0B96  2B6B               	goto	l2677
  2133  0B97                     u3060:
  2134  0B97                     l102:
  2135  0B97  0008               	return
  2136  0B98                     __end_of_TanqueLLeno:
  2137                           
  2138                           	psect	text7
  2139  000E                     __ptext7:	
  2140 ;; *************** function _PutVariables *****************
  2141 ;; Defined at:
  2142 ;;		line 105 in file "Entrega2.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;		None
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;		None
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  1    wreg      void 
  2149 ;; Registers used:
  2150 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2156 ;;      Params:         0       0       0       0       0       0       0       0
  2157 ;;      Locals:         0       0       0       0       0       0       0       0
  2158 ;;      Temps:          0       1       0       0       0       0       0       0
  2159 ;;      Totals:         0       1       0       0       0       0       0       0
  2160 ;;Total ram usage:        1 bytes
  2161 ;; Hardware stack levels used:    1
  2162 ;; Hardware stack levels required when called:    6
  2163 ;; This function calls:
  2164 ;;		_LCD_Set_Cursor
  2165 ;;		_LCD_Write_String
  2166 ;;		_ftoa
  2167 ;; This function is called by:
  2168 ;;		_main
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172                           
  2173                           ;psect for function _PutVariables
  2174  000E                     _PutVariables:
  2175  000E                     l2647:	
  2176                           ;incstack = 0
  2177                           ; Regs used in _PutVariables: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2178                           
  2179                           
  2180                           ;Entrega2.c: 108:     texuv=ftoa(lecturaUv,status);
  2181  000E  0141               	movlb	1	; select bank1
  2182  000F  082B               	movf	(_lecturaUv+3)^(0+128),w
  2183  0010  0140               	movlb	0	; select bank0
  2184  0011  00DF               	movwf	ftoa@f+3
  2185  0012  0141               	movlb	1	; select bank1
  2186  0013  082A               	movf	(_lecturaUv+2)^(0+128),w
  2187  0014  0140               	movlb	0	; select bank0
  2188  0015  00DE               	movwf	ftoa@f+2
  2189  0016  0141               	movlb	1	; select bank1
  2190  0017  0829               	movf	(_lecturaUv+1)^(0+128),w
  2191  0018  0140               	movlb	0	; select bank0
  2192  0019  00DD               	movwf	ftoa@f+1
  2193  001A  0141               	movlb	1	; select bank1
  2194  001B  0828               	movf	_lecturaUv^(0+128),w
  2195  001C  0140               	movlb	0	; select bank0
  2196  001D  00DC               	movwf	ftoa@f
  2197  001E  01E0               	clrf	ftoa@status
  2198  001F  318F  2744  3180   	fcall	_ftoa
  2199  0022  0140               	movlb	0	; select bank0
  2200  0023  00EB               	movwf	??_PutVariables
  2201  0024  086B               	movf	??_PutVariables,w
  2202  0025  00EF               	movwf	_texuv
  2203  0026                     l2649:
  2204                           
  2205                           ;Entrega2.c: 109:     texuv[4]=0x0;
  2206  0026  086F               	movf	_texuv,w
  2207  0027  3E04               	addlw	4
  2208  0028  0086               	movwf	6
  2209  0029  0187               	clrf	7
  2210  002A  0181               	clrf	1
  2211  002B                     l2651:
  2212                           
  2213                           ;Entrega2.c: 110:     LCD_Set_Cursor(1, 4);
  2214  002B  3004               	movlw	4
  2215  002C  00EB               	movwf	??_PutVariables
  2216  002D  086B               	movf	??_PutVariables,w
  2217  002E  00F6               	movwf	LCD_Set_Cursor@COL
  2218  002F  3001               	movlw	1
  2219  0030  318B  233C  3180   	fcall	_LCD_Set_Cursor
  2220  0033                     l2653:
  2221                           
  2222                           ;Entrega2.c: 111:     LCD_Write_String(texuv);
  2223  0033  0140               	movlb	0	; select bank0
  2224  0034  086F               	movf	_texuv,w
  2225  0035  00F6               	movwf	LCD_Write_String@Str
  2226  0036  39FF               	andlw	255
  2227  0037  1D03               	skipz
  2228  0038  3000               	movlw	0
  2229  0039  00F7               	movwf	LCD_Write_String@Str+1
  2230  003A  318A  2258  3180   	fcall	_LCD_Write_String
  2231  003D                     l2655:
  2232                           
  2233                           ;Entrega2.c: 113:     texT=ftoa(lecturaTemp,status);
  2234  003D  0141               	movlb	1	; select bank1
  2235  003E  0823               	movf	(_lecturaTemp+3)^(0+128),w
  2236  003F  0140               	movlb	0	; select bank0
  2237  0040  00DF               	movwf	ftoa@f+3
  2238  0041  0141               	movlb	1	; select bank1
  2239  0042  0822               	movf	(_lecturaTemp+2)^(0+128),w
  2240  0043  0140               	movlb	0	; select bank0
  2241  0044  00DE               	movwf	ftoa@f+2
  2242  0045  0141               	movlb	1	; select bank1
  2243  0046  0821               	movf	(_lecturaTemp+1)^(0+128),w
  2244  0047  0140               	movlb	0	; select bank0
  2245  0048  00DD               	movwf	ftoa@f+1
  2246  0049  0141               	movlb	1	; select bank1
  2247  004A  0820               	movf	_lecturaTemp^(0+128),w
  2248  004B  0140               	movlb	0	; select bank0
  2249  004C  00DC               	movwf	ftoa@f
  2250  004D  01E0               	clrf	ftoa@status
  2251  004E  318F  2744  3180   	fcall	_ftoa
  2252  0051  0140               	movlb	0	; select bank0
  2253  0052  00EB               	movwf	??_PutVariables
  2254  0053  086B               	movf	??_PutVariables,w
  2255  0054  00EE               	movwf	_texT
  2256                           
  2257                           ;Entrega2.c: 114:     texT[4]=0x0;
  2258  0055  086E               	movf	_texT,w
  2259  0056  3E04               	addlw	4
  2260  0057  0086               	movwf	6
  2261  0058  0187               	clrf	7
  2262  0059  0181               	clrf	1
  2263  005A                     l2657:
  2264                           
  2265                           ;Entrega2.c: 115:     LCD_Set_Cursor(1, 10);
  2266  005A  300A               	movlw	10
  2267  005B  00EB               	movwf	??_PutVariables
  2268  005C  086B               	movf	??_PutVariables,w
  2269  005D  00F6               	movwf	LCD_Set_Cursor@COL
  2270  005E  3001               	movlw	1
  2271  005F  318B  233C  3180   	fcall	_LCD_Set_Cursor
  2272  0062                     l2659:
  2273                           
  2274                           ;Entrega2.c: 116:     LCD_Write_String(texT);
  2275  0062  0140               	movlb	0	; select bank0
  2276  0063  086E               	movf	_texT,w
  2277  0064  00F6               	movwf	LCD_Write_String@Str
  2278  0065  39FF               	andlw	255
  2279  0066  1D03               	skipz
  2280  0067  3000               	movlw	0
  2281  0068  00F7               	movwf	LCD_Write_String@Str+1
  2282  0069  318A  2258  3180   	fcall	_LCD_Write_String
  2283  006C                     l2661:
  2284                           
  2285                           ;Entrega2.c: 118:     texH=ftoa(lecturaHumedad,status);
  2286  006C  0141               	movlb	1	; select bank1
  2287  006D  0827               	movf	(_lecturaHumedad+3)^(0+128),w
  2288  006E  0140               	movlb	0	; select bank0
  2289  006F  00DF               	movwf	ftoa@f+3
  2290  0070  0141               	movlb	1	; select bank1
  2291  0071  0826               	movf	(_lecturaHumedad+2)^(0+128),w
  2292  0072  0140               	movlb	0	; select bank0
  2293  0073  00DE               	movwf	ftoa@f+2
  2294  0074  0141               	movlb	1	; select bank1
  2295  0075  0825               	movf	(_lecturaHumedad+1)^(0+128),w
  2296  0076  0140               	movlb	0	; select bank0
  2297  0077  00DD               	movwf	ftoa@f+1
  2298  0078  0141               	movlb	1	; select bank1
  2299  0079  0824               	movf	_lecturaHumedad^(0+128),w
  2300  007A  0140               	movlb	0	; select bank0
  2301  007B  00DC               	movwf	ftoa@f
  2302  007C  01E0               	clrf	ftoa@status
  2303  007D  318F  2744  3180   	fcall	_ftoa
  2304  0080  0140               	movlb	0	; select bank0
  2305  0081  00EB               	movwf	??_PutVariables
  2306  0082  086B               	movf	??_PutVariables,w
  2307  0083  0141               	movlb	1	; select bank1
  2308  0084  00AE               	movwf	_texH^(0+128)
  2309  0085                     l2663:
  2310                           
  2311                           ;Entrega2.c: 119:     texH[4]=0x0;
  2312  0085  082E               	movf	_texH^(0+128),w
  2313  0086  3E04               	addlw	4
  2314  0087  0086               	movwf	6
  2315  0088  0187               	clrf	7
  2316  0089  0181               	clrf	1
  2317  008A                     l2665:
  2318                           
  2319                           ;Entrega2.c: 120:     LCD_Set_Cursor(2, 3);
  2320  008A  3003               	movlw	3
  2321  008B  0140               	movlb	0	; select bank0
  2322  008C  00EB               	movwf	??_PutVariables
  2323  008D  086B               	movf	??_PutVariables,w
  2324  008E  00F6               	movwf	LCD_Set_Cursor@COL
  2325  008F  3002               	movlw	2
  2326  0090  318B  233C  3180   	fcall	_LCD_Set_Cursor
  2327  0093                     l2667:
  2328                           
  2329                           ;Entrega2.c: 121:     LCD_Write_String(texH);
  2330  0093  0141               	movlb	1	; select bank1
  2331  0094  082E               	movf	_texH^(0+128),w
  2332  0095  00F6               	movwf	LCD_Write_String@Str
  2333  0096  39FF               	andlw	255
  2334  0097  1D03               	skipz
  2335  0098  3000               	movlw	0
  2336  0099  00F7               	movwf	LCD_Write_String@Str+1
  2337  009A  318A  2258  3180   	fcall	_LCD_Write_String
  2338  009D                     l86:
  2339  009D  0008               	return
  2340  009E                     __end_of_PutVariables:
  2341                           
  2342                           	psect	text8
  2343  0F44                     __ptext8:	
  2344 ;; *************** function _ftoa *****************
  2345 ;; Defined at:
  2346 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftoa.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;  f               4   60[BANK0 ] float 
  2349 ;;  status          1   64[BANK0 ] PTR int 
  2350 ;;		 -> NULL(0), 
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;  l               4   70[BANK0 ] unsigned long 
  2353 ;;  rem             4   66[BANK0 ] unsigned long 
  2354 ;;  cp              1   74[BANK0 ] PTR unsigned char 
  2355 ;;		 -> ftoa@buf(17), 
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  1    wreg      PTR unsigned char 
  2358 ;; Registers used:
  2359 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2365 ;;      Params:         0       5       0       0       0       0       0       0
  2366 ;;      Locals:         0       9       0       0       0       0       0       0
  2367 ;;      Temps:          0       1       0       0       0       0       0       0
  2368 ;;      Totals:         0      15       0       0       0       0       0       0
  2369 ;;Total ram usage:       15 bytes
  2370 ;; Hardware stack levels used:    1
  2371 ;; Hardware stack levels required when called:    2
  2372 ;; This function calls:
  2373 ;;		___flge
  2374 ;;		___flmul
  2375 ;;		___flneg
  2376 ;;		___flsub
  2377 ;;		___fltol
  2378 ;;		___xxtofl
  2379 ;;		_sprintf
  2380 ;; This function is called by:
  2381 ;;		_PutVariables
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           
  2386                           ;psect for function _ftoa
  2387  0F44                     _ftoa:
  2388  0F44                     l2593:	
  2389                           ;incstack = 0
  2390                           ; Regs used in _ftoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2391                           
  2392  0F44  30B1               	movlw	(low (ftoa@buf| 0))& (0+255)
  2393  0F45  0140               	movlb	0	; select bank0
  2394  0F46  00E1               	movwf	??_ftoa
  2395  0F47  0861               	movf	??_ftoa,w
  2396  0F48  00EA               	movwf	ftoa@cp
  2397  0F49                     l2595:
  2398  0F49  085F               	movf	ftoa@f+3,w
  2399  0F4A  00F3               	movwf	___flge@ff1+3
  2400  0F4B  085E               	movf	ftoa@f+2,w
  2401  0F4C  00F2               	movwf	___flge@ff1+2
  2402  0F4D  085D               	movf	ftoa@f+1,w
  2403  0F4E  00F1               	movwf	___flge@ff1+1
  2404  0F4F  085C               	movf	ftoa@f,w
  2405  0F50  00F0               	movwf	___flge@ff1
  2406  0F51  3000               	movlw	0
  2407  0F52  00F7               	movwf	___flge@ff2+3
  2408  0F53  3000               	movlw	0
  2409  0F54  00F6               	movwf	___flge@ff2+2
  2410  0F55  3000               	movlw	0
  2411  0F56  00F5               	movwf	___flge@ff2+1
  2412  0F57  3000               	movlw	0
  2413  0F58  00F4               	movwf	___flge@ff2
  2414  0F59  318E  260D  318F   	fcall	___flge
  2415  0F5C  1803               	btfsc	3,0
  2416  0F5D  2F5F               	goto	u3041
  2417  0F5E  2F60               	goto	u3040
  2418  0F5F                     u3041:
  2419  0F5F  2F80               	goto	l2603
  2420  0F60                     u3040:
  2421  0F60                     l2597:
  2422  0F60  302D               	movlw	45
  2423  0F61  0140               	movlb	0	; select bank0
  2424  0F62  00E1               	movwf	??_ftoa
  2425  0F63  086A               	movf	ftoa@cp,w
  2426  0F64  0086               	movwf	6
  2427  0F65  0187               	clrf	7
  2428  0F66  0861               	movf	??_ftoa,w
  2429  0F67  0081               	movwf	1
  2430  0F68                     l2599:
  2431  0F68  3001               	movlw	1
  2432  0F69  00E1               	movwf	??_ftoa
  2433  0F6A  0861               	movf	??_ftoa,w
  2434  0F6B  07EA               	addwf	ftoa@cp,f
  2435  0F6C                     l2601:
  2436  0F6C  085F               	movf	ftoa@f+3,w
  2437  0F6D  00F3               	movwf	___flneg@f1+3
  2438  0F6E  085E               	movf	ftoa@f+2,w
  2439  0F6F  00F2               	movwf	___flneg@f1+2
  2440  0F70  085D               	movf	ftoa@f+1,w
  2441  0F71  00F1               	movwf	___flneg@f1+1
  2442  0F72  085C               	movf	ftoa@f,w
  2443  0F73  00F0               	movwf	___flneg@f1
  2444  0F74  3189  21BE  318F   	fcall	___flneg
  2445  0F77  0873               	movf	?___flneg+3,w
  2446  0F78  0140               	movlb	0	; select bank0
  2447  0F79  00DF               	movwf	ftoa@f+3
  2448  0F7A  0872               	movf	?___flneg+2,w
  2449  0F7B  00DE               	movwf	ftoa@f+2
  2450  0F7C  0871               	movf	?___flneg+1,w
  2451  0F7D  00DD               	movwf	ftoa@f+1
  2452  0F7E  0870               	movf	?___flneg,w
  2453  0F7F  00DC               	movwf	ftoa@f
  2454  0F80                     l2603:
  2455  0F80  0140               	movlb	0	; select bank0
  2456  0F81  085F               	movf	ftoa@f+3,w
  2457  0F82  00C3               	movwf	___fltol@f1+3
  2458  0F83  085E               	movf	ftoa@f+2,w
  2459  0F84  00C2               	movwf	___fltol@f1+2
  2460  0F85  085D               	movf	ftoa@f+1,w
  2461  0F86  00C1               	movwf	___fltol@f1+1
  2462  0F87  085C               	movf	ftoa@f,w
  2463  0F88  00C0               	movwf	___fltol@f1
  2464  0F89  318D  250F  318F   	fcall	___fltol
  2465  0F8C  0140               	movlb	0	; select bank0
  2466  0F8D  0843               	movf	?___fltol+3,w
  2467  0F8E  00E9               	movwf	ftoa@l+3
  2468  0F8F  0842               	movf	?___fltol+2,w
  2469  0F90  00E8               	movwf	ftoa@l+2
  2470  0F91  0841               	movf	?___fltol+1,w
  2471  0F92  00E7               	movwf	ftoa@l+1
  2472  0F93  0840               	movf	?___fltol,w
  2473  0F94  00E6               	movwf	ftoa@l
  2474  0F95                     l2605:
  2475  0F95  0869               	movf	ftoa@l+3,w
  2476  0F96  00F8               	movwf	___xxtofl@val+3
  2477  0F97  0868               	movf	ftoa@l+2,w
  2478  0F98  00F7               	movwf	___xxtofl@val+2
  2479  0F99  0867               	movf	ftoa@l+1,w
  2480  0F9A  00F6               	movwf	___xxtofl@val+1
  2481  0F9B  0866               	movf	ftoa@l,w
  2482  0F9C  00F5               	movwf	___xxtofl@val
  2483  0F9D  3000               	movlw	0
  2484  0F9E  318E  2697  318F   	fcall	___xxtofl
  2485  0FA1  0878               	movf	?___xxtofl+3,w
  2486  0FA2  0140               	movlb	0	; select bank0
  2487  0FA3  00D7               	movwf	___flsub@a+3
  2488  0FA4  0877               	movf	?___xxtofl+2,w
  2489  0FA5  00D6               	movwf	___flsub@a+2
  2490  0FA6  0876               	movf	?___xxtofl+1,w
  2491  0FA7  00D5               	movwf	___flsub@a+1
  2492  0FA8  0875               	movf	?___xxtofl,w
  2493  0FA9  00D4               	movwf	___flsub@a
  2494  0FAA  085F               	movf	ftoa@f+3,w
  2495  0FAB  00DB               	movwf	___flsub@b+3
  2496  0FAC  085E               	movf	ftoa@f+2,w
  2497  0FAD  00DA               	movwf	___flsub@b+2
  2498  0FAE  085D               	movf	ftoa@f+1,w
  2499  0FAF  00D9               	movwf	___flsub@b+1
  2500  0FB0  085C               	movf	ftoa@f,w
  2501  0FB1  00D8               	movwf	___flsub@b
  2502  0FB2  318A  22B4  318F   	fcall	___flsub
  2503  0FB5  0140               	movlb	0	; select bank0
  2504  0FB6  0857               	movf	?___flsub+3,w
  2505  0FB7  00DF               	movwf	ftoa@f+3
  2506  0FB8  0856               	movf	?___flsub+2,w
  2507  0FB9  00DE               	movwf	ftoa@f+2
  2508  0FBA  0855               	movf	?___flsub+1,w
  2509  0FBB  00DD               	movwf	ftoa@f+1
  2510  0FBC  0854               	movf	?___flsub,w
  2511  0FBD  00DC               	movwf	ftoa@f
  2512  0FBE                     l2607:
  2513  0FBE  085F               	movf	ftoa@f+3,w
  2514  0FBF  00AD               	movwf	___flmul@a+3
  2515  0FC0  085E               	movf	ftoa@f+2,w
  2516  0FC1  00AC               	movwf	___flmul@a+2
  2517  0FC2  085D               	movf	ftoa@f+1,w
  2518  0FC3  00AB               	movwf	___flmul@a+1
  2519  0FC4  085C               	movf	ftoa@f,w
  2520  0FC5  00AA               	movwf	___flmul@a
  2521  0FC6  3049               	movlw	73
  2522  0FC7  00A9               	movwf	___flmul@b+3
  2523  0FC8  3074               	movlw	116
  2524  0FC9  00A8               	movwf	___flmul@b+2
  2525  0FCA  3024               	movlw	36
  2526  0FCB  00A7               	movwf	___flmul@b+1
  2527  0FCC  3000               	movlw	0
  2528  0FCD  00A6               	movwf	___flmul@b
  2529  0FCE  3185  2596  318F   	fcall	___flmul
  2530  0FD1  0140               	movlb	0	; select bank0
  2531  0FD2  0829               	movf	?___flmul+3,w
  2532  0FD3  00C3               	movwf	___fltol@f1+3
  2533  0FD4  0828               	movf	?___flmul+2,w
  2534  0FD5  00C2               	movwf	___fltol@f1+2
  2535  0FD6  0827               	movf	?___flmul+1,w
  2536  0FD7  00C1               	movwf	___fltol@f1+1
  2537  0FD8  0826               	movf	?___flmul,w
  2538  0FD9  00C0               	movwf	___fltol@f1
  2539  0FDA  318D  250F  318F   	fcall	___fltol
  2540  0FDD  0140               	movlb	0	; select bank0
  2541  0FDE  0843               	movf	?___fltol+3,w
  2542  0FDF  00E5               	movwf	ftoa@rem+3
  2543  0FE0  0842               	movf	?___fltol+2,w
  2544  0FE1  00E4               	movwf	ftoa@rem+2
  2545  0FE2  0841               	movf	?___fltol+1,w
  2546  0FE3  00E3               	movwf	ftoa@rem+1
  2547  0FE4  0840               	movf	?___fltol,w
  2548  0FE5  00E2               	movwf	ftoa@rem
  2549  0FE6                     l2609:
  2550  0FE6  302A               	movlw	low (STR_8| (0+32768))
  2551  0FE7  00AA               	movwf	sprintf@f
  2552  0FE8  3088               	movlw	high (STR_8| (0+32768))
  2553  0FE9  00AB               	movwf	sprintf@f+1
  2554  0FEA  0869               	movf	ftoa@l+3,w
  2555  0FEB  00AF               	movwf	?_sprintf+5
  2556  0FEC  0868               	movf	ftoa@l+2,w
  2557  0FED  00AE               	movwf	?_sprintf+4
  2558  0FEE  0867               	movf	ftoa@l+1,w
  2559  0FEF  00AD               	movwf	?_sprintf+3
  2560  0FF0  0866               	movf	ftoa@l,w
  2561  0FF1  00AC               	movwf	?_sprintf+2
  2562  0FF2  0865               	movf	ftoa@rem+3,w
  2563  0FF3  00B3               	movwf	?_sprintf+9
  2564  0FF4  0864               	movf	ftoa@rem+2,w
  2565  0FF5  00B2               	movwf	?_sprintf+8
  2566  0FF6  0863               	movf	ftoa@rem+1,w
  2567  0FF7  00B1               	movwf	?_sprintf+7
  2568  0FF8  0862               	movf	ftoa@rem,w
  2569  0FF9  00B0               	movwf	?_sprintf+6
  2570  0FFA  086A               	movf	ftoa@cp,w
  2571  0FFB  3181  2167  318F   	fcall	_sprintf
  2572  0FFE                     l2611:
  2573  0FFE  30B1               	movlw	(low (ftoa@buf| 0))& (0+255)
  2574  0FFF                     l770:
  2575  0FFF  0008               	return
  2576  1000                     __end_of_ftoa:
  2577                           
  2578                           	psect	text9
  2579  0167                     __ptext9:	
  2580 ;; *************** function _sprintf *****************
  2581 ;; Defined at:
  2582 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;  sp              1    wreg     PTR unsigned char 
  2585 ;;		 -> ftoa@buf(17), 
  2586 ;;  f               2   10[BANK0 ] PTR const unsigned char 
  2587 ;;		 -> STR_8(11), 
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;  sp              1   32[BANK0 ] PTR unsigned char 
  2590 ;;		 -> ftoa@buf(17), 
  2591 ;;  val             4   28[BANK0 ] unsigned long 
  2592 ;;  tmpval          4    0        struct .
  2593 ;;  prec            2   35[BANK0 ] int 
  2594 ;;  width           2   33[BANK0 ] int 
  2595 ;;  cp              2    0        PTR const unsigned char 
  2596 ;;  len             2    0        unsigned int 
  2597 ;;  c               1   37[BANK0 ] unsigned char 
  2598 ;;  ap              1   27[BANK0 ] PTR void [1]
  2599 ;;		 -> ?_sprintf(2), 
  2600 ;;  flag            1   26[BANK0 ] unsigned char 
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  2   10[BANK0 ] int 
  2603 ;; Registers used:
  2604 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2610 ;;      Params:         0      10       0       0       0       0       0       0
  2611 ;;      Locals:         0      12       0       0       0       0       0       0
  2612 ;;      Temps:          0       6       0       0       0       0       0       0
  2613 ;;      Totals:         0      28       0       0       0       0       0       0
  2614 ;;Total ram usage:       28 bytes
  2615 ;; Hardware stack levels used:    1
  2616 ;; Hardware stack levels required when called:    1
  2617 ;; This function calls:
  2618 ;;		___lldiv
  2619 ;;		___llmod
  2620 ;;		___wmul
  2621 ;;		_isdigit
  2622 ;; This function is called by:
  2623 ;;		_ftoa
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           
  2628                           ;psect for function _sprintf
  2629  0167                     _sprintf:
  2630                           
  2631                           ;incstack = 0
  2632                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2633                           ;sprintf@sp stored from wreg
  2634  0167  0140               	movlb	0	; select bank0
  2635  0168  00C0               	movwf	sprintf@sp
  2636  0169                     l2475:
  2637                           
  2638                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2639  0169  302C               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2640  016A  00B4               	movwf	??_sprintf
  2641  016B  0834               	movf	??_sprintf,w
  2642  016C  00BB               	movwf	sprintf@ap
  2643                           
  2644                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2645  016D  2B45               	goto	l2573
  2646  016E                     l2477:
  2647                           
  2648                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2649  016E  3025               	movlw	37
  2650  016F  0645               	xorwf	sprintf@c,w
  2651  0170  1903               	btfsc	3,2
  2652  0171  2973               	goto	u2851
  2653  0172  2974               	goto	u2850
  2654  0173                     u2851:
  2655  0173  2980               	goto	l2483
  2656  0174                     u2850:
  2657  0174                     l2479:
  2658                           
  2659                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2660  0174  0845               	movf	sprintf@c,w
  2661  0175  00B4               	movwf	??_sprintf
  2662  0176  0840               	movf	sprintf@sp,w
  2663  0177  0086               	movwf	6
  2664  0178  0187               	clrf	7
  2665  0179  0834               	movf	??_sprintf,w
  2666  017A  0081               	movwf	1
  2667  017B                     l2481:
  2668  017B  3001               	movlw	1
  2669  017C  00B4               	movwf	??_sprintf
  2670  017D  0834               	movf	??_sprintf,w
  2671  017E  07C0               	addwf	sprintf@sp,f
  2672                           
  2673                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2674  017F  2B45               	goto	l2573
  2675  0180                     l2483:
  2676                           
  2677                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2678  0180  01C1               	clrf	sprintf@width
  2679  0181  01C2               	clrf	sprintf@width+1
  2680                           
  2681                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2682  0182  01BA               	clrf	sprintf@flag
  2683  0183                     l2485:
  2684                           
  2685                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2686  0183  082A               	movf	sprintf@f,w
  2687  0184  0084               	movwf	4
  2688  0185  082B               	movf	sprintf@f+1,w
  2689  0186  0085               	movwf	5
  2690  0187  0800               	movf	0,w	;code access
  2691  0188  3189  21E0  3181   	fcall	_isdigit
  2692  018B  1C03               	btfss	3,0
  2693  018C  298E               	goto	u2861
  2694  018D  298F               	goto	u2860
  2695  018E                     u2861:
  2696  018E  29C2               	goto	l2497
  2697  018F                     u2860:
  2698  018F                     l2487:
  2699                           
  2700                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2701  018F  0140               	movlb	0	; select bank0
  2702  0190  01C1               	clrf	sprintf@width
  2703  0191  01C2               	clrf	sprintf@width+1
  2704  0192                     l2489:
  2705                           
  2706                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2707  0192  300A               	movlw	10
  2708  0193  00F0               	movwf	___wmul@multiplier
  2709  0194  3000               	movlw	0
  2710  0195  00F1               	movwf	___wmul@multiplier+1
  2711  0196  0140               	movlb	0	; select bank0
  2712  0197  0842               	movf	sprintf@width+1,w
  2713  0198  00F3               	movwf	___wmul@multiplicand+1
  2714  0199  0841               	movf	sprintf@width,w
  2715  019A  00F2               	movwf	___wmul@multiplicand
  2716  019B  318A  2275  3181   	fcall	___wmul
  2717  019E  0871               	movf	?___wmul+1,w
  2718  019F  0140               	movlb	0	; select bank0
  2719  01A0  00C2               	movwf	sprintf@width+1
  2720  01A1  0870               	movf	?___wmul,w
  2721  01A2  00C1               	movwf	sprintf@width
  2722  01A3                     l2491:
  2723                           
  2724                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2725  01A3  082A               	movf	sprintf@f,w
  2726  01A4  0084               	movwf	4
  2727  01A5  082B               	movf	sprintf@f+1,w
  2728  01A6  0085               	movwf	5
  2729  01A7  0800               	movf	0,w	;code access
  2730  01A8  3ED0               	addlw	208
  2731  01A9  00B4               	movwf	??_sprintf
  2732  01AA  30FF               	movlw	255
  2733  01AB  1803               	skipnc
  2734  01AC  3000               	movlw	0
  2735  01AD  00B5               	movwf	??_sprintf+1
  2736  01AE  0834               	movf	??_sprintf,w
  2737  01AF  07C1               	addwf	sprintf@width,f
  2738  01B0  0835               	movf	??_sprintf+1,w
  2739  01B1  3DC2               	addwfc	sprintf@width+1,f
  2740  01B2                     l2493:
  2741  01B2  3001               	movlw	1
  2742  01B3  07AA               	addwf	sprintf@f,f
  2743  01B4  3000               	movlw	0
  2744  01B5  3DAB               	addwfc	sprintf@f+1,f
  2745  01B6                     l2495:
  2746                           
  2747                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2748  01B6  082A               	movf	sprintf@f,w
  2749  01B7  0084               	movwf	4
  2750  01B8  082B               	movf	sprintf@f+1,w
  2751  01B9  0085               	movwf	5
  2752  01BA  0800               	movf	0,w	;code access
  2753  01BB  3189  21E0  3181   	fcall	_isdigit
  2754  01BE  1803               	btfsc	3,0
  2755  01BF  29C1               	goto	u2871
  2756  01C0  29C2               	goto	u2870
  2757  01C1                     u2871:
  2758  01C1  2992               	goto	l2489
  2759  01C2                     u2870:
  2760  01C2                     l2497:
  2761                           
  2762                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2763  01C2  0140               	movlb	0	; select bank0
  2764  01C3  082A               	movf	sprintf@f,w
  2765  01C4  0084               	movwf	4
  2766  01C5  082B               	movf	sprintf@f+1,w
  2767  01C6  0085               	movwf	5
  2768  01C7  0012               	moviw fsr0++
  2769  01C8  3A2E               	xorlw	46
  2770  01C9  1D03               	btfss	3,2
  2771  01CA  29CC               	goto	u2881
  2772  01CB  29CD               	goto	u2880
  2773  01CC                     u2881:
  2774  01CC  2A05               	goto	l2511
  2775  01CD                     u2880:
  2776  01CD                     l2499:
  2777                           
  2778                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2779  01CD  3001               	movlw	1
  2780  01CE  07AA               	addwf	sprintf@f,f
  2781  01CF  3000               	movlw	0
  2782  01D0  3DAB               	addwfc	sprintf@f+1,f
  2783  01D1                     l2501:
  2784                           
  2785                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2786  01D1  01C3               	clrf	sprintf@prec
  2787  01D2  01C4               	clrf	sprintf@prec+1
  2788                           
  2789                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2790  01D3  29F8               	goto	l2509
  2791  01D4                     l2503:
  2792                           
  2793                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2794  01D4  300A               	movlw	10
  2795  01D5  00F0               	movwf	___wmul@multiplier
  2796  01D6  3000               	movlw	0
  2797  01D7  00F1               	movwf	___wmul@multiplier+1
  2798  01D8  0140               	movlb	0	; select bank0
  2799  01D9  0844               	movf	sprintf@prec+1,w
  2800  01DA  00F3               	movwf	___wmul@multiplicand+1
  2801  01DB  0843               	movf	sprintf@prec,w
  2802  01DC  00F2               	movwf	___wmul@multiplicand
  2803  01DD  318A  2275  3181   	fcall	___wmul
  2804  01E0  0871               	movf	?___wmul+1,w
  2805  01E1  0140               	movlb	0	; select bank0
  2806  01E2  00C4               	movwf	sprintf@prec+1
  2807  01E3  0870               	movf	?___wmul,w
  2808  01E4  00C3               	movwf	sprintf@prec
  2809  01E5                     l2505:
  2810                           
  2811                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2812  01E5  082A               	movf	sprintf@f,w
  2813  01E6  0084               	movwf	4
  2814  01E7  082B               	movf	sprintf@f+1,w
  2815  01E8  0085               	movwf	5
  2816  01E9  0800               	movf	0,w	;code access
  2817  01EA  3ED0               	addlw	208
  2818  01EB  00B4               	movwf	??_sprintf
  2819  01EC  30FF               	movlw	255
  2820  01ED  1803               	skipnc
  2821  01EE  3000               	movlw	0
  2822  01EF  00B5               	movwf	??_sprintf+1
  2823  01F0  0834               	movf	??_sprintf,w
  2824  01F1  07C3               	addwf	sprintf@prec,f
  2825  01F2  0835               	movf	??_sprintf+1,w
  2826  01F3  3DC4               	addwfc	sprintf@prec+1,f
  2827  01F4                     l2507:
  2828  01F4  3001               	movlw	1
  2829  01F5  07AA               	addwf	sprintf@f,f
  2830  01F6  3000               	movlw	0
  2831  01F7  3DAB               	addwfc	sprintf@f+1,f
  2832  01F8                     l2509:
  2833                           
  2834                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2835  01F8  082A               	movf	sprintf@f,w
  2836  01F9  0084               	movwf	4
  2837  01FA  082B               	movf	sprintf@f+1,w
  2838  01FB  0085               	movwf	5
  2839  01FC  0800               	movf	0,w	;code access
  2840  01FD  3189  21E0  3181   	fcall	_isdigit
  2841  0200  1803               	btfsc	3,0
  2842  0201  2A03               	goto	u2891
  2843  0202  2A04               	goto	u2890
  2844  0203                     u2891:
  2845  0203  29D4               	goto	l2503
  2846  0204                     u2890:
  2847  0204  2A0F               	goto	l2517
  2848  0205                     l2511:
  2849                           
  2850                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2851  0205  01C3               	clrf	sprintf@prec
  2852  0206  01C4               	clrf	sprintf@prec+1
  2853  0207  2A0F               	goto	l2517
  2854  0208                     l796:	
  2855                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 667:   case 'l':
  2856                           
  2857                           
  2858                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 669:    flag |= 0
      +                          x10;
  2859  0208  163A               	bsf	sprintf@flag,4
  2860                           
  2861                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 670:    goto loop
      +                          ;
  2862  0209  2A0F               	goto	l2517
  2863  020A                     l2513:
  2864                           
  2865                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  2866  020A  30C0               	movlw	192
  2867  020B  00B4               	movwf	??_sprintf
  2868  020C  0834               	movf	??_sprintf,w
  2869  020D  04BA               	iorwf	sprintf@flag,f
  2870                           
  2871                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 845:    break;
  2872  020E  2A2F               	goto	l799
  2873  020F                     l2517:
  2874  020F  0140               	movlb	0	; select bank0
  2875  0210  082B               	movf	sprintf@f+1,w
  2876  0211  00B5               	movwf	??_sprintf+1
  2877  0212  082A               	movf	sprintf@f,w
  2878  0213  00B4               	movwf	??_sprintf
  2879  0214  0AAA               	incf	sprintf@f,f
  2880  0215  1903               	skipnz
  2881  0216  0AAB               	incf	sprintf@f+1,f
  2882  0217  0834               	movf	??_sprintf,w
  2883  0218  0084               	movwf	4
  2884  0219  0835               	movf	??_sprintf+1,w
  2885  021A  0085               	movwf	5
  2886  021B  0800               	movf	0,w	;code access
  2887  021C  00C5               	movwf	sprintf@c
  2888  021D  00B6               	movwf	??_sprintf+2
  2889  021E  01B7               	clrf	??_sprintf+3
  2890                           
  2891                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2892                           ; Switch size 1, requested type "simple"
  2893                           ; Number of cases is 1, Range of values is 0 to 0
  2894                           ; switch strategies available:
  2895                           ; Name         Instructions Cycles
  2896                           ; simple_byte            4     3 (average)
  2897                           ; direct_byte            8     6 (fixed)
  2898                           ; jumptable            260     6 (fixed)
  2899                           ;	Chosen strategy is simple_byte
  2900  021F  0837               	movf	??_sprintf+3,w
  2901  0220  3A00               	xorlw	0	; case 0
  2902  0221  1903               	skipnz
  2903  0222  2A24               	goto	l2835
  2904  0223  2B45               	goto	l2573
  2905  0224                     l2835:
  2906                           
  2907                           ; Switch size 1, requested type "simple"
  2908                           ; Number of cases is 3, Range of values is 0 to 117
  2909                           ; switch strategies available:
  2910                           ; Name         Instructions Cycles
  2911                           ; simple_byte           10     6 (average)
  2912                           ; direct_byte          242     6 (fixed)
  2913                           ; jumptable            260     6 (fixed)
  2914                           ;	Chosen strategy is simple_byte
  2915  0224  0836               	movf	??_sprintf+2,w
  2916  0225  3A00               	xorlw	0	; case 0
  2917  0226  1903               	skipnz
  2918  0227  2B59               	goto	l2575
  2919  0228  3A6C               	xorlw	108	; case 108
  2920  0229  1903               	skipnz
  2921  022A  2A08               	goto	l796
  2922  022B  3A19               	xorlw	25	; case 117
  2923  022C  1903               	skipnz
  2924  022D  2A0A               	goto	l2513
  2925  022E  2B45               	goto	l2573
  2926  022F                     l799:
  2927                           
  2928                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1307:     if(flag & 0x10)
  2929  022F  1E3A               	btfss	sprintf@flag,4
  2930  0230  2A32               	goto	u2901
  2931  0231  2A33               	goto	u2900
  2932  0232                     u2901:
  2933  0232  2A43               	goto	l2523
  2934  0233                     u2900:
  2935  0233                     l2519:
  2936                           
  2937                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1308:     val = (
      +                          *(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned long)0));
  2938  0233  083B               	movf	sprintf@ap,w
  2939  0234  0086               	movwf	6
  2940  0235  0187               	clrf	7
  2941  0236  3F40               	moviw [0]fsr1
  2942  0237  00BC               	movwf	sprintf@val
  2943  0238  3F41               	moviw [1]fsr1
  2944  0239  00BD               	movwf	sprintf@val+1
  2945  023A  3F42               	moviw [2]fsr1
  2946  023B  00BE               	movwf	sprintf@val+2
  2947  023C  3F43               	moviw [3]fsr1
  2948  023D  00BF               	movwf	sprintf@val+3
  2949  023E                     l2521:
  2950  023E  3004               	movlw	4
  2951  023F  00B4               	movwf	??_sprintf
  2952  0240  0834               	movf	??_sprintf,w
  2953  0241  07BB               	addwf	sprintf@ap,f
  2954  0242  2A54               	goto	l2527
  2955  0243                     l2523:
  2956                           
  2957                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1312:     val = (
      +                          *(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2958  0243  083B               	movf	sprintf@ap,w
  2959  0244  0086               	movwf	6
  2960  0245  0187               	clrf	7
  2961  0246  3F40               	moviw [0]fsr1
  2962  0247  00B4               	movwf	??_sprintf
  2963  0248  3F41               	moviw [1]fsr1
  2964  0249  00B5               	movwf	??_sprintf+1
  2965  024A  0834               	movf	??_sprintf,w
  2966  024B  00BC               	movwf	sprintf@val
  2967  024C  0835               	movf	??_sprintf+1,w
  2968  024D  00BD               	movwf	sprintf@val+1
  2969  024E  01BE               	clrf	sprintf@val+2
  2970  024F  01BF               	clrf	sprintf@val+3
  2971  0250                     l2525:
  2972  0250  3002               	movlw	2
  2973  0251  00B4               	movwf	??_sprintf
  2974  0252  0834               	movf	??_sprintf,w
  2975  0253  07BB               	addwf	sprintf@ap,f
  2976  0254                     l2527:
  2977                           
  2978                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  2979  0254  0843               	movf	sprintf@prec,w
  2980  0255  0444               	iorwf	sprintf@prec+1,w
  2981  0256  1D03               	btfss	3,2
  2982  0257  2A59               	goto	u2911
  2983  0258  2A5A               	goto	u2910
  2984  0259                     u2911:
  2985  0259  2A66               	goto	l2533
  2986  025A                     u2910:
  2987  025A                     l2529:
  2988  025A  083F               	movf	sprintf@val+3,w
  2989  025B  043E               	iorwf	sprintf@val+2,w
  2990  025C  043D               	iorwf	sprintf@val+1,w
  2991  025D  043C               	iorwf	sprintf@val,w
  2992  025E  1D03               	skipz
  2993  025F  2A61               	goto	u2921
  2994  0260  2A62               	goto	u2920
  2995  0261                     u2921:
  2996  0261  2A66               	goto	l2533
  2997  0262                     u2920:
  2998  0262                     l2531:
  2999                           
  3000                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3001  0262  3001               	movlw	1
  3002  0263  07C3               	addwf	sprintf@prec,f
  3003  0264  3000               	movlw	0
  3004  0265  3DC4               	addwfc	sprintf@prec+1,f
  3005  0266                     l2533:
  3006                           
  3007                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3008  0266  01C5               	clrf	sprintf@c
  3009  0267  0AC5               	incf	sprintf@c,f
  3010  0268                     l2539:
  3011                           
  3012                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3013  0268  0845               	movf	sprintf@c,w
  3014  0269  00B4               	movwf	??_sprintf
  3015  026A  01B5               	clrf	??_sprintf+1
  3016  026B  35B4               	lslf	??_sprintf,f
  3017  026C  0DB5               	rlf	??_sprintf+1,f
  3018  026D  35B4               	lslf	??_sprintf,f
  3019  026E  0DB5               	rlf	??_sprintf+1,f
  3020  026F  3000               	movlw	low (_dpowers| (0+32768))
  3021  0270  0734               	addwf	??_sprintf,w
  3022  0271  0084               	movwf	4
  3023  0272  3088               	movlw	high (_dpowers| (0+32768))
  3024  0273  3D35               	addwfc	??_sprintf+1,w
  3025  0274  0085               	movwf	5
  3026  0275  3F00               	moviw [0]fsr0
  3027  0276  00B6               	movwf	??_sprintf+2
  3028  0277  3F01               	moviw [1]fsr0
  3029  0278  00B7               	movwf	??_sprintf+3
  3030  0279  3F02               	moviw [2]fsr0
  3031  027A  00B8               	movwf	??_sprintf+4
  3032  027B  3F03               	moviw [3]fsr0
  3033  027C  00B9               	movwf	??_sprintf+5
  3034  027D  0839               	movf	??_sprintf+5,w
  3035  027E  023F               	subwf	sprintf@val+3,w
  3036  027F  1D03               	skipz
  3037  0280  2A8B               	goto	u2935
  3038  0281  0838               	movf	??_sprintf+4,w
  3039  0282  023E               	subwf	sprintf@val+2,w
  3040  0283  1D03               	skipz
  3041  0284  2A8B               	goto	u2935
  3042  0285  0837               	movf	??_sprintf+3,w
  3043  0286  023D               	subwf	sprintf@val+1,w
  3044  0287  1D03               	skipz
  3045  0288  2A8B               	goto	u2935
  3046  0289  0836               	movf	??_sprintf+2,w
  3047  028A  023C               	subwf	sprintf@val,w
  3048  028B                     u2935:
  3049  028B  1803               	skipnc
  3050  028C  2A8E               	goto	u2931
  3051  028D  2A8F               	goto	u2930
  3052  028E                     u2931:
  3053  028E  2A90               	goto	l2543
  3054  028F                     u2930:
  3055  028F  2A9A               	goto	l2545
  3056  0290                     l2543:
  3057  0290  3001               	movlw	1
  3058  0291  00B4               	movwf	??_sprintf
  3059  0292  0834               	movf	??_sprintf,w
  3060  0293  07C5               	addwf	sprintf@c,f
  3061  0294  300A               	movlw	10
  3062  0295  0645               	xorwf	sprintf@c,w
  3063  0296  1D03               	btfss	3,2
  3064  0297  2A99               	goto	u2941
  3065  0298  2A9A               	goto	u2940
  3066  0299                     u2941:
  3067  0299  2A68               	goto	l2539
  3068  029A                     u2940:
  3069  029A                     l2545:
  3070                           
  3071                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3072  029A  0844               	movf	sprintf@prec+1,w
  3073  029B  3A80               	xorlw	128
  3074  029C  3C80               	sublw	128
  3075  029D  1D03               	skipz
  3076  029E  2AA1               	goto	u2955
  3077  029F  0843               	movf	sprintf@prec,w
  3078  02A0  0245               	subwf	sprintf@c,w
  3079  02A1                     u2955:
  3080  02A1  1803               	skipnc
  3081  02A2  2AA4               	goto	u2951
  3082  02A3  2AA5               	goto	u2950
  3083  02A4                     u2951:
  3084  02A4  2AAB               	goto	l2549
  3085  02A5                     u2950:
  3086  02A5                     l2547:
  3087                           
  3088                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  3089  02A5  0140               	movlb	0	; select bank0
  3090  02A6  0843               	movf	sprintf@prec,w
  3091  02A7  00B4               	movwf	??_sprintf
  3092  02A8  0834               	movf	??_sprintf,w
  3093  02A9  00C5               	movwf	sprintf@c
  3094  02AA  2AC1               	goto	l807
  3095  02AB                     l2549:
  3096  02AB  0140               	movlb	0	; select bank0
  3097  02AC  0844               	movf	sprintf@prec+1,w
  3098  02AD  3A80               	xorlw	128
  3099  02AE  00B4               	movwf	??_sprintf
  3100  02AF  3080               	movlw	128
  3101  02B0  0234               	subwf	??_sprintf,w
  3102  02B1  1D03               	skipz
  3103  02B2  2AB5               	goto	u2965
  3104  02B3  0845               	movf	sprintf@c,w
  3105  02B4  0243               	subwf	sprintf@prec,w
  3106  02B5                     u2965:
  3107  02B5  1803               	skipnc
  3108  02B6  2AB8               	goto	u2961
  3109  02B7  2AB9               	goto	u2960
  3110  02B8                     u2961:
  3111  02B8  2AC1               	goto	l807
  3112  02B9                     u2960:
  3113  02B9                     l2551:
  3114                           
  3115                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  3116  02B9  0140               	movlb	0	; select bank0
  3117  02BA  0845               	movf	sprintf@c,w
  3118  02BB  00B4               	movwf	??_sprintf
  3119  02BC  01B5               	clrf	??_sprintf+1
  3120  02BD  0834               	movf	??_sprintf,w
  3121  02BE  00C3               	movwf	sprintf@prec
  3122  02BF  0835               	movf	??_sprintf+1,w
  3123  02C0  00C4               	movwf	sprintf@prec+1
  3124  02C1                     l807:
  3125                           
  3126                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  3127  02C1  0140               	movlb	0	; select bank0
  3128  02C2  0842               	movf	sprintf@width+1,w
  3129  02C3  3A80               	xorlw	128
  3130  02C4  3C80               	sublw	128
  3131  02C5  1D03               	skipz
  3132  02C6  2AC9               	goto	u2975
  3133  02C7  0841               	movf	sprintf@width,w
  3134  02C8  0245               	subwf	sprintf@c,w
  3135  02C9                     u2975:
  3136  02C9  1803               	skipnc
  3137  02CA  2ACC               	goto	u2971
  3138  02CB  2ACD               	goto	u2970
  3139  02CC                     u2971:
  3140  02CC  2AD6               	goto	l2555
  3141  02CD                     u2970:
  3142  02CD                     l2553:
  3143                           
  3144                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  3145  02CD  0140               	movlb	0	; select bank0
  3146  02CE  0845               	movf	sprintf@c,w
  3147  02CF  00B4               	movwf	??_sprintf
  3148  02D0  01B5               	clrf	??_sprintf+1
  3149  02D1  0834               	movf	??_sprintf,w
  3150  02D2  02C1               	subwf	sprintf@width,f
  3151  02D3  0835               	movf	??_sprintf+1,w
  3152  02D4  3BC2               	subwfb	sprintf@width+1,f
  3153  02D5  2AD9               	goto	l2557
  3154  02D6                     l2555:
  3155                           
  3156                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  3157  02D6  0140               	movlb	0	; select bank0
  3158  02D7  01C1               	clrf	sprintf@width
  3159  02D8  01C2               	clrf	sprintf@width+1
  3160  02D9                     l2557:
  3161                           
  3162                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  3163  02D9  0841               	movf	sprintf@width,w
  3164  02DA  0442               	iorwf	sprintf@width+1,w
  3165  02DB  1903               	btfsc	3,2
  3166  02DC  2ADE               	goto	u2981
  3167  02DD  2ADF               	goto	u2980
  3168  02DE                     u2981:
  3169  02DE  2B39               	goto	l2571
  3170  02DF                     u2980:
  3171  02DF                     l2559:
  3172                           
  3173                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  3174  02DF  3020               	movlw	32
  3175  02E0  00B4               	movwf	??_sprintf
  3176  02E1  0840               	movf	sprintf@sp,w
  3177  02E2  0086               	movwf	6
  3178  02E3  0187               	clrf	7
  3179  02E4  0834               	movf	??_sprintf,w
  3180  02E5  0081               	movwf	1
  3181  02E6                     l2561:
  3182  02E6  3001               	movlw	1
  3183  02E7  00B4               	movwf	??_sprintf
  3184  02E8  0834               	movf	??_sprintf,w
  3185  02E9  07C0               	addwf	sprintf@sp,f
  3186  02EA                     l2563:
  3187  02EA  30FF               	movlw	255
  3188  02EB  07C1               	addwf	sprintf@width,f
  3189  02EC  30FF               	movlw	255
  3190  02ED  3DC2               	addwfc	sprintf@width+1,f
  3191  02EE  0841               	movf	sprintf@width,w
  3192  02EF  0442               	iorwf	sprintf@width+1,w
  3193  02F0  1D03               	btfss	3,2
  3194  02F1  2AF3               	goto	u2991
  3195  02F2  2AF4               	goto	u2990
  3196  02F3                     u2991:
  3197  02F3  2ADF               	goto	l2559
  3198  02F4                     u2990:
  3199  02F4  2B39               	goto	l2571
  3200  02F5                     l2565:
  3201                           
  3202                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
  3203  02F5  3000               	movlw	0
  3204  02F6  00A3               	movwf	___llmod@divisor+3
  3205  02F7  3000               	movlw	0
  3206  02F8  00A2               	movwf	___llmod@divisor+2
  3207  02F9  3000               	movlw	0
  3208  02FA  00A1               	movwf	___llmod@divisor+1
  3209  02FB  300A               	movlw	10
  3210  02FC  00A0               	movwf	___llmod@divisor
  3211  02FD  0844               	movf	sprintf@prec+1,w
  3212  02FE  0085               	movwf	5
  3213  02FF  0843               	movf	sprintf@prec,w
  3214  0300  0084               	movwf	4
  3215  0301  3584               	lslf	4,f
  3216  0302  0D85               	rlf	5,f
  3217  0303  3584               	lslf	4,f
  3218  0304  0D85               	rlf	5,f
  3219  0305  3000               	movlw	low (_dpowers| (0+32768))
  3220  0306  0784               	addwf	4,f
  3221  0307  3088               	movlw	high (_dpowers| (0+32768))
  3222  0308  3D85               	addwfc	5,f
  3223  0309  3F00               	moviw [0]fsr0
  3224  030A  00F0               	movwf	___lldiv@divisor
  3225  030B  3F01               	moviw [1]fsr0
  3226  030C  00F1               	movwf	___lldiv@divisor+1
  3227  030D  3F02               	moviw [2]fsr0
  3228  030E  00F2               	movwf	___lldiv@divisor+2
  3229  030F  3F03               	moviw [3]fsr0
  3230  0310  00F3               	movwf	___lldiv@divisor+3
  3231  0311  083F               	movf	sprintf@val+3,w
  3232  0312  00F7               	movwf	___lldiv@dividend+3
  3233  0313  083E               	movf	sprintf@val+2,w
  3234  0314  00F6               	movwf	___lldiv@dividend+2
  3235  0315  083D               	movf	sprintf@val+1,w
  3236  0316  00F5               	movwf	___lldiv@dividend+1
  3237  0317  083C               	movf	sprintf@val,w
  3238  0318  00F4               	movwf	___lldiv@dividend
  3239  0319  318C  24B5  3181   	fcall	___lldiv
  3240  031C  0873               	movf	?___lldiv+3,w
  3241  031D  0140               	movlb	0	; select bank0
  3242  031E  00A7               	movwf	___llmod@dividend+3
  3243  031F  0872               	movf	?___lldiv+2,w
  3244  0320  00A6               	movwf	___llmod@dividend+2
  3245  0321  0871               	movf	?___lldiv+1,w
  3246  0322  00A5               	movwf	___llmod@dividend+1
  3247  0323  0870               	movf	?___lldiv,w
  3248  0324  00A4               	movwf	___llmod@dividend
  3249  0325  318C  2413  3181   	fcall	___llmod
  3250  0328  0140               	movlb	0	; select bank0
  3251  0329  0820               	movf	?___llmod,w
  3252  032A  3E30               	addlw	48
  3253  032B  00B4               	movwf	??_sprintf
  3254  032C  0834               	movf	??_sprintf,w
  3255  032D  00C5               	movwf	sprintf@c
  3256  032E                     l2567:
  3257                           
  3258                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  3259  032E  0845               	movf	sprintf@c,w
  3260  032F  00B4               	movwf	??_sprintf
  3261  0330  0840               	movf	sprintf@sp,w
  3262  0331  0086               	movwf	6
  3263  0332  0187               	clrf	7
  3264  0333  0834               	movf	??_sprintf,w
  3265  0334  0081               	movwf	1
  3266  0335                     l2569:
  3267  0335  3001               	movlw	1
  3268  0336  00B4               	movwf	??_sprintf
  3269  0337  0834               	movf	??_sprintf,w
  3270  0338  07C0               	addwf	sprintf@sp,f
  3271  0339                     l2571:
  3272                           
  3273                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3274  0339  30FF               	movlw	255
  3275  033A  07C3               	addwf	sprintf@prec,f
  3276  033B  30FF               	movlw	255
  3277  033C  3DC4               	addwfc	sprintf@prec+1,f
  3278  033D  0A43               	incf	sprintf@prec,w
  3279  033E  1D03               	skipz
  3280  033F  2B44               	goto	u3001
  3281  0340  0A44               	incf	sprintf@prec+1,w
  3282  0341  1D03               	btfss	3,2
  3283  0342  2B44               	goto	u3001
  3284  0343  2B45               	goto	u3000
  3285  0344                     u3001:
  3286  0344  2AF5               	goto	l2565
  3287  0345                     u3000:
  3288  0345                     l2573:
  3289                           
  3290                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3291  0345  082B               	movf	sprintf@f+1,w
  3292  0346  00B5               	movwf	??_sprintf+1
  3293  0347  082A               	movf	sprintf@f,w
  3294  0348  00B4               	movwf	??_sprintf
  3295  0349  0AAA               	incf	sprintf@f,f
  3296  034A  1903               	skipnz
  3297  034B  0AAB               	incf	sprintf@f+1,f
  3298  034C  0834               	movf	??_sprintf,w
  3299  034D  0084               	movwf	4
  3300  034E  0835               	movf	??_sprintf+1,w
  3301  034F  0085               	movwf	5
  3302  0350  0800               	movf	0,w	;code access
  3303  0351  00B6               	movwf	??_sprintf+2
  3304  0352  0836               	movf	??_sprintf+2,w
  3305  0353  00C5               	movwf	sprintf@c
  3306  0354  0845               	movf	sprintf@c,w
  3307  0355  1D03               	btfss	3,2
  3308  0356  2B58               	goto	u3011
  3309  0357  2B59               	goto	u3010
  3310  0358                     u3011:
  3311  0358  296E               	goto	l2477
  3312  0359                     u3010:
  3313  0359                     l2575:
  3314                           
  3315                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3316  0359  0840               	movf	sprintf@sp,w
  3317  035A  0086               	movwf	6
  3318  035B  0187               	clrf	7
  3319  035C  0181               	clrf	1
  3320  035D                     l818:
  3321  035D  0008               	return
  3322  035E                     __end_of_sprintf:
  3323                           
  3324                           	psect	text10
  3325  09E0                     __ptext10:	
  3326 ;; *************** function _isdigit *****************
  3327 ;; Defined at:
  3328 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;  c               1    wreg     unsigned char 
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;  c               1    1[COMMON] unsigned char 
  3333 ;; Return value:  Size  Location     Type
  3334 ;;		None               void
  3335 ;; Registers used:
  3336 ;;		wreg, status,2, status,0
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3342 ;;      Params:         0       0       0       0       0       0       0       0
  3343 ;;      Locals:         2       0       0       0       0       0       0       0
  3344 ;;      Temps:          0       0       0       0       0       0       0       0
  3345 ;;      Totals:         2       0       0       0       0       0       0       0
  3346 ;;Total ram usage:        2 bytes
  3347 ;; Hardware stack levels used:    1
  3348 ;; This function calls:
  3349 ;;		Nothing
  3350 ;; This function is called by:
  3351 ;;		_sprintf
  3352 ;; This function uses a non-reentrant model
  3353 ;;
  3354                           
  3355                           
  3356                           ;psect for function _isdigit
  3357  09E0                     _isdigit:
  3358                           
  3359                           ;incstack = 0
  3360                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3361                           ;isdigit@c stored from wreg
  3362  09E0  00F1               	movwf	isdigit@c
  3363  09E1                     l2185:
  3364  09E1  01F0               	clrf	_isdigit$753
  3365  09E2                     l2187:
  3366  09E2  303A               	movlw	58
  3367  09E3  0271               	subwf	isdigit@c,w
  3368  09E4  1803               	skipnc
  3369  09E5  29E7               	goto	u2261
  3370  09E6  29E8               	goto	u2260
  3371  09E7                     u2261:
  3372  09E7  29F0               	goto	l2193
  3373  09E8                     u2260:
  3374  09E8                     l2189:
  3375  09E8  3030               	movlw	48
  3376  09E9  0271               	subwf	isdigit@c,w
  3377  09EA  1C03               	skipc
  3378  09EB  29ED               	goto	u2271
  3379  09EC  29EE               	goto	u2270
  3380  09ED                     u2271:
  3381  09ED  29F0               	goto	l2193
  3382  09EE                     u2270:
  3383  09EE                     l2191:
  3384  09EE  01F0               	clrf	_isdigit$753
  3385  09EF  0AF0               	incf	_isdigit$753,f
  3386  09F0                     l2193:
  3387  09F0  0C70               	rrf	_isdigit$753,w
  3388  09F1                     l823:
  3389  09F1  0008               	return
  3390  09F2                     __end_of_isdigit:
  3391                           
  3392                           	psect	text11
  3393  0A75                     __ptext11:	
  3394 ;; *************** function ___wmul *****************
  3395 ;; Defined at:
  3396 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;  multiplier      2    0[COMMON] unsigned int 
  3399 ;;  multiplicand    2    2[COMMON] unsigned int 
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;  product         2    4[COMMON] unsigned int 
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  2    0[COMMON] unsigned int 
  3404 ;; Registers used:
  3405 ;;		wreg, status,2, status,0
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3411 ;;      Params:         4       0       0       0       0       0       0       0
  3412 ;;      Locals:         2       0       0       0       0       0       0       0
  3413 ;;      Temps:          0       0       0       0       0       0       0       0
  3414 ;;      Totals:         6       0       0       0       0       0       0       0
  3415 ;;Total ram usage:        6 bytes
  3416 ;; Hardware stack levels used:    1
  3417 ;; This function calls:
  3418 ;;		Nothing
  3419 ;; This function is called by:
  3420 ;;		_sprintf
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424                           
  3425                           ;psect for function ___wmul
  3426  0A75                     ___wmul:
  3427  0A75                     l1919:	
  3428                           ;incstack = 0
  3429                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3430                           
  3431  0A75  01F4               	clrf	___wmul@product
  3432  0A76  01F5               	clrf	___wmul@product+1
  3433  0A77                     l1921:
  3434  0A77  1C70               	btfss	___wmul@multiplier,0
  3435  0A78  2A7A               	goto	u1631
  3436  0A79  2A7B               	goto	u1630
  3437  0A7A                     u1631:
  3438  0A7A  2A7F               	goto	l314
  3439  0A7B                     u1630:
  3440  0A7B                     l1923:
  3441  0A7B  0872               	movf	___wmul@multiplicand,w
  3442  0A7C  07F4               	addwf	___wmul@product,f
  3443  0A7D  0873               	movf	___wmul@multiplicand+1,w
  3444  0A7E  3DF5               	addwfc	___wmul@product+1,f
  3445  0A7F                     l314:
  3446  0A7F  3001               	movlw	1
  3447  0A80                     u1645:
  3448  0A80  35F2               	lslf	___wmul@multiplicand,f
  3449  0A81  0DF3               	rlf	___wmul@multiplicand+1,f
  3450  0A82  0B89               	decfsz	9,f
  3451  0A83  2A80               	goto	u1645
  3452  0A84                     l1925:
  3453  0A84  3001               	movlw	1
  3454  0A85                     u1655:
  3455  0A85  36F1               	lsrf	___wmul@multiplier+1,f
  3456  0A86  0CF0               	rrf	___wmul@multiplier,f
  3457  0A87  0B89               	decfsz	9,f
  3458  0A88  2A85               	goto	u1655
  3459  0A89                     l1927:
  3460  0A89  0870               	movf	___wmul@multiplier,w
  3461  0A8A  0471               	iorwf	___wmul@multiplier+1,w
  3462  0A8B  1D03               	btfss	3,2
  3463  0A8C  2A8E               	goto	u1661
  3464  0A8D  2A8F               	goto	u1660
  3465  0A8E                     u1661:
  3466  0A8E  2A77               	goto	l1921
  3467  0A8F                     u1660:
  3468  0A8F                     l1929:
  3469  0A8F  0875               	movf	___wmul@product+1,w
  3470  0A90  00F1               	movwf	?___wmul+1
  3471  0A91  0874               	movf	___wmul@product,w
  3472  0A92  00F0               	movwf	?___wmul
  3473  0A93                     l316:
  3474  0A93  0008               	return
  3475  0A94                     __end_of___wmul:
  3476                           
  3477                           	psect	text12
  3478  0C13                     __ptext12:	
  3479 ;; *************** function ___llmod *****************
  3480 ;; Defined at:
  3481 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  3482 ;; Parameters:    Size  Location     Type
  3483 ;;  divisor         4    0[BANK0 ] unsigned long 
  3484 ;;  dividend        4    4[BANK0 ] unsigned long 
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;  counter         1    9[BANK0 ] unsigned char 
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  4    0[BANK0 ] unsigned long 
  3489 ;; Registers used:
  3490 ;;		wreg, status,2, status,0
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3496 ;;      Params:         0       8       0       0       0       0       0       0
  3497 ;;      Locals:         0       1       0       0       0       0       0       0
  3498 ;;      Temps:          0       1       0       0       0       0       0       0
  3499 ;;      Totals:         0      10       0       0       0       0       0       0
  3500 ;;Total ram usage:       10 bytes
  3501 ;; Hardware stack levels used:    1
  3502 ;; This function calls:
  3503 ;;		Nothing
  3504 ;; This function is called by:
  3505 ;;		_sprintf
  3506 ;; This function uses a non-reentrant model
  3507 ;;
  3508                           
  3509                           
  3510                           ;psect for function ___llmod
  3511  0C13                     ___llmod:
  3512  0C13                     l1957:	
  3513                           ;incstack = 0
  3514                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3515                           
  3516  0C13  0140               	movlb	0	; select bank0
  3517  0C14  0823               	movf	___llmod@divisor+3,w
  3518  0C15  0422               	iorwf	___llmod@divisor+2,w
  3519  0C16  0421               	iorwf	___llmod@divisor+1,w
  3520  0C17  0420               	iorwf	___llmod@divisor,w
  3521  0C18  1903               	skipnz
  3522  0C19  2C1B               	goto	u1741
  3523  0C1A  2C1C               	goto	u1740
  3524  0C1B                     u1741:
  3525  0C1B  2C55               	goto	l1973
  3526  0C1C                     u1740:
  3527  0C1C                     l1959:
  3528  0C1C  01A9               	clrf	___llmod@counter
  3529  0C1D  0AA9               	incf	___llmod@counter,f
  3530  0C1E  2C2A               	goto	l1963
  3531  0C1F                     l1961:
  3532  0C1F  3001               	movlw	1
  3533  0C20                     u1755:
  3534  0C20  35A0               	lslf	___llmod@divisor,f
  3535  0C21  0DA1               	rlf	___llmod@divisor+1,f
  3536  0C22  0DA2               	rlf	___llmod@divisor+2,f
  3537  0C23  0DA3               	rlf	___llmod@divisor+3,f
  3538  0C24  0B89               	decfsz	9,f
  3539  0C25  2C20               	goto	u1755
  3540  0C26  3001               	movlw	1
  3541  0C27  00A8               	movwf	??___llmod
  3542  0C28  0828               	movf	??___llmod,w
  3543  0C29  07A9               	addwf	___llmod@counter,f
  3544  0C2A                     l1963:
  3545  0C2A  1FA3               	btfss	___llmod@divisor+3,7
  3546  0C2B  2C2D               	goto	u1761
  3547  0C2C  2C2E               	goto	u1760
  3548  0C2D                     u1761:
  3549  0C2D  2C1F               	goto	l1961
  3550  0C2E                     u1760:
  3551  0C2E                     l1965:
  3552  0C2E  0823               	movf	___llmod@divisor+3,w
  3553  0C2F  0227               	subwf	___llmod@dividend+3,w
  3554  0C30  1D03               	skipz
  3555  0C31  2C3C               	goto	u1775
  3556  0C32  0822               	movf	___llmod@divisor+2,w
  3557  0C33  0226               	subwf	___llmod@dividend+2,w
  3558  0C34  1D03               	skipz
  3559  0C35  2C3C               	goto	u1775
  3560  0C36  0821               	movf	___llmod@divisor+1,w
  3561  0C37  0225               	subwf	___llmod@dividend+1,w
  3562  0C38  1D03               	skipz
  3563  0C39  2C3C               	goto	u1775
  3564  0C3A  0820               	movf	___llmod@divisor,w
  3565  0C3B  0224               	subwf	___llmod@dividend,w
  3566  0C3C                     u1775:
  3567  0C3C  1C03               	skipc
  3568  0C3D  2C3F               	goto	u1771
  3569  0C3E  2C40               	goto	u1770
  3570  0C3F                     u1771:
  3571  0C3F  2C48               	goto	l1969
  3572  0C40                     u1770:
  3573  0C40                     l1967:
  3574  0C40  0820               	movf	___llmod@divisor,w
  3575  0C41  02A4               	subwf	___llmod@dividend,f
  3576  0C42  0821               	movf	___llmod@divisor+1,w
  3577  0C43  3BA5               	subwfb	___llmod@dividend+1,f
  3578  0C44  0822               	movf	___llmod@divisor+2,w
  3579  0C45  3BA6               	subwfb	___llmod@dividend+2,f
  3580  0C46  0823               	movf	___llmod@divisor+3,w
  3581  0C47  3BA7               	subwfb	___llmod@dividend+3,f
  3582  0C48                     l1969:
  3583  0C48  3001               	movlw	1
  3584  0C49                     u1785:
  3585  0C49  36A3               	lsrf	___llmod@divisor+3,f
  3586  0C4A  0CA2               	rrf	___llmod@divisor+2,f
  3587  0C4B  0CA1               	rrf	___llmod@divisor+1,f
  3588  0C4C  0CA0               	rrf	___llmod@divisor,f
  3589  0C4D  0B89               	decfsz	9,f
  3590  0C4E  2C49               	goto	u1785
  3591  0C4F                     l1971:
  3592  0C4F  3001               	movlw	1
  3593  0C50  02A9               	subwf	___llmod@counter,f
  3594  0C51  1D03               	btfss	3,2
  3595  0C52  2C54               	goto	u1791
  3596  0C53  2C55               	goto	u1790
  3597  0C54                     u1791:
  3598  0C54  2C2E               	goto	l1965
  3599  0C55                     u1790:
  3600  0C55                     l1973:
  3601  0C55  0827               	movf	___llmod@dividend+3,w
  3602  0C56  00A3               	movwf	?___llmod+3
  3603  0C57  0826               	movf	___llmod@dividend+2,w
  3604  0C58  00A2               	movwf	?___llmod+2
  3605  0C59  0825               	movf	___llmod@dividend+1,w
  3606  0C5A  00A1               	movwf	?___llmod+1
  3607  0C5B  0824               	movf	___llmod@dividend,w
  3608  0C5C  00A0               	movwf	?___llmod
  3609  0C5D                     l536:
  3610  0C5D  0008               	return
  3611  0C5E                     __end_of___llmod:
  3612                           
  3613                           	psect	text13
  3614  0CB5                     __ptext13:	
  3615 ;; *************** function ___lldiv *****************
  3616 ;; Defined at:
  3617 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;  divisor         4    0[COMMON] unsigned long 
  3620 ;;  dividend        4    4[COMMON] unsigned long 
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;  quotient        4    9[COMMON] unsigned long 
  3623 ;;  counter         1   13[COMMON] unsigned char 
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  4    0[COMMON] unsigned long 
  3626 ;; Registers used:
  3627 ;;		wreg, status,2, status,0
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3633 ;;      Params:         8       0       0       0       0       0       0       0
  3634 ;;      Locals:         5       0       0       0       0       0       0       0
  3635 ;;      Temps:          1       0       0       0       0       0       0       0
  3636 ;;      Totals:        14       0       0       0       0       0       0       0
  3637 ;;Total ram usage:       14 bytes
  3638 ;; Hardware stack levels used:    1
  3639 ;; This function calls:
  3640 ;;		Nothing
  3641 ;; This function is called by:
  3642 ;;		_sprintf
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645                           
  3646                           
  3647                           ;psect for function ___lldiv
  3648  0CB5                     ___lldiv:
  3649  0CB5                     l1933:	
  3650                           ;incstack = 0
  3651                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3652                           
  3653  0CB5  3000               	movlw	0
  3654  0CB6  00FC               	movwf	___lldiv@quotient+3
  3655  0CB7  3000               	movlw	0
  3656  0CB8  00FB               	movwf	___lldiv@quotient+2
  3657  0CB9  3000               	movlw	0
  3658  0CBA  00FA               	movwf	___lldiv@quotient+1
  3659  0CBB  3000               	movlw	0
  3660  0CBC  00F9               	movwf	___lldiv@quotient
  3661  0CBD  0873               	movf	___lldiv@divisor+3,w
  3662  0CBE  0472               	iorwf	___lldiv@divisor+2,w
  3663  0CBF  0471               	iorwf	___lldiv@divisor+1,w
  3664  0CC0  0470               	iorwf	___lldiv@divisor,w
  3665  0CC1  1903               	skipnz
  3666  0CC2  2CC4               	goto	u1671
  3667  0CC3  2CC5               	goto	u1670
  3668  0CC4                     u1671:
  3669  0CC4  2D06               	goto	l1953
  3670  0CC5                     u1670:
  3671  0CC5                     l1935:
  3672  0CC5  01FD               	clrf	___lldiv@counter
  3673  0CC6  0AFD               	incf	___lldiv@counter,f
  3674  0CC7  2CD3               	goto	l1939
  3675  0CC8                     l1937:
  3676  0CC8  3001               	movlw	1
  3677  0CC9                     u1685:
  3678  0CC9  35F0               	lslf	___lldiv@divisor,f
  3679  0CCA  0DF1               	rlf	___lldiv@divisor+1,f
  3680  0CCB  0DF2               	rlf	___lldiv@divisor+2,f
  3681  0CCC  0DF3               	rlf	___lldiv@divisor+3,f
  3682  0CCD  0B89               	decfsz	9,f
  3683  0CCE  2CC9               	goto	u1685
  3684  0CCF  3001               	movlw	1
  3685  0CD0  00F8               	movwf	??___lldiv
  3686  0CD1  0878               	movf	??___lldiv,w
  3687  0CD2  07FD               	addwf	___lldiv@counter,f
  3688  0CD3                     l1939:
  3689  0CD3  1FF3               	btfss	___lldiv@divisor+3,7
  3690  0CD4  2CD6               	goto	u1691
  3691  0CD5  2CD7               	goto	u1690
  3692  0CD6                     u1691:
  3693  0CD6  2CC8               	goto	l1937
  3694  0CD7                     u1690:
  3695  0CD7                     l1941:
  3696  0CD7  3001               	movlw	1
  3697  0CD8                     u1705:
  3698  0CD8  35F9               	lslf	___lldiv@quotient,f
  3699  0CD9  0DFA               	rlf	___lldiv@quotient+1,f
  3700  0CDA  0DFB               	rlf	___lldiv@quotient+2,f
  3701  0CDB  0DFC               	rlf	___lldiv@quotient+3,f
  3702  0CDC  0B89               	decfsz	9,f
  3703  0CDD  2CD8               	goto	u1705
  3704  0CDE                     l1943:
  3705  0CDE  0873               	movf	___lldiv@divisor+3,w
  3706  0CDF  0277               	subwf	___lldiv@dividend+3,w
  3707  0CE0  1D03               	skipz
  3708  0CE1  2CEC               	goto	u1715
  3709  0CE2  0872               	movf	___lldiv@divisor+2,w
  3710  0CE3  0276               	subwf	___lldiv@dividend+2,w
  3711  0CE4  1D03               	skipz
  3712  0CE5  2CEC               	goto	u1715
  3713  0CE6  0871               	movf	___lldiv@divisor+1,w
  3714  0CE7  0275               	subwf	___lldiv@dividend+1,w
  3715  0CE8  1D03               	skipz
  3716  0CE9  2CEC               	goto	u1715
  3717  0CEA  0870               	movf	___lldiv@divisor,w
  3718  0CEB  0274               	subwf	___lldiv@dividend,w
  3719  0CEC                     u1715:
  3720  0CEC  1C03               	skipc
  3721  0CED  2CEF               	goto	u1711
  3722  0CEE  2CF0               	goto	u1710
  3723  0CEF                     u1711:
  3724  0CEF  2CF9               	goto	l1949
  3725  0CF0                     u1710:
  3726  0CF0                     l1945:
  3727  0CF0  0870               	movf	___lldiv@divisor,w
  3728  0CF1  02F4               	subwf	___lldiv@dividend,f
  3729  0CF2  0871               	movf	___lldiv@divisor+1,w
  3730  0CF3  3BF5               	subwfb	___lldiv@dividend+1,f
  3731  0CF4  0872               	movf	___lldiv@divisor+2,w
  3732  0CF5  3BF6               	subwfb	___lldiv@dividend+2,f
  3733  0CF6  0873               	movf	___lldiv@divisor+3,w
  3734  0CF7  3BF7               	subwfb	___lldiv@dividend+3,f
  3735  0CF8                     l1947:
  3736  0CF8  1479               	bsf	___lldiv@quotient,0
  3737  0CF9                     l1949:
  3738  0CF9  3001               	movlw	1
  3739  0CFA                     u1725:
  3740  0CFA  36F3               	lsrf	___lldiv@divisor+3,f
  3741  0CFB  0CF2               	rrf	___lldiv@divisor+2,f
  3742  0CFC  0CF1               	rrf	___lldiv@divisor+1,f
  3743  0CFD  0CF0               	rrf	___lldiv@divisor,f
  3744  0CFE  0B89               	decfsz	9,f
  3745  0CFF  2CFA               	goto	u1725
  3746  0D00                     l1951:
  3747  0D00  3001               	movlw	1
  3748  0D01  02FD               	subwf	___lldiv@counter,f
  3749  0D02  1D03               	btfss	3,2
  3750  0D03  2D05               	goto	u1731
  3751  0D04  2D06               	goto	u1730
  3752  0D05                     u1731:
  3753  0D05  2CD7               	goto	l1941
  3754  0D06                     u1730:
  3755  0D06                     l1953:
  3756  0D06  087C               	movf	___lldiv@quotient+3,w
  3757  0D07  00F3               	movwf	?___lldiv+3
  3758  0D08  087B               	movf	___lldiv@quotient+2,w
  3759  0D09  00F2               	movwf	?___lldiv+2
  3760  0D0A  087A               	movf	___lldiv@quotient+1,w
  3761  0D0B  00F1               	movwf	?___lldiv+1
  3762  0D0C  0879               	movf	___lldiv@quotient,w
  3763  0D0D  00F0               	movwf	?___lldiv
  3764  0D0E                     l350:
  3765  0D0E  0008               	return
  3766  0D0F                     __end_of___lldiv:
  3767                           
  3768                           	psect	text14
  3769  0D0F                     __ptext14:	
  3770 ;; *************** function ___fltol *****************
  3771 ;; Defined at:
  3772 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  3773 ;; Parameters:    Size  Location     Type
  3774 ;;  f1              4   32[BANK0 ] unsigned long 
  3775 ;; Auto vars:     Size  Location     Type
  3776 ;;  exp1            1   42[BANK0 ] unsigned char 
  3777 ;;  sign1           1   41[BANK0 ] unsigned char 
  3778 ;; Return value:  Size  Location     Type
  3779 ;;                  4   32[BANK0 ] long 
  3780 ;; Registers used:
  3781 ;;		wreg, status,2, status,0
  3782 ;; Tracked objects:
  3783 ;;		On entry : 0/0
  3784 ;;		On exit  : 0/0
  3785 ;;		Unchanged: 0/0
  3786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3787 ;;      Params:         0       4       0       0       0       0       0       0
  3788 ;;      Locals:         0       2       0       0       0       0       0       0
  3789 ;;      Temps:          0       5       0       0       0       0       0       0
  3790 ;;      Totals:         0      11       0       0       0       0       0       0
  3791 ;;Total ram usage:       11 bytes
  3792 ;; Hardware stack levels used:    1
  3793 ;; This function calls:
  3794 ;;		Nothing
  3795 ;; This function is called by:
  3796 ;;		_ftoa
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           
  3800                           
  3801                           ;psect for function ___fltol
  3802  0D0F                     ___fltol:
  3803  0D0F                     l2249:	
  3804                           ;incstack = 0
  3805                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3806                           
  3807  0D0F  1003               	clrc
  3808  0D10  0140               	movlb	0	; select bank0
  3809  0D11  0D42               	rlf	___fltol@f1+2,w
  3810  0D12  0D43               	rlf	___fltol@f1+3,w
  3811  0D13  00C4               	movwf	??___fltol
  3812  0D14  0844               	movf	??___fltol,w
  3813  0D15  00CA               	movwf	___fltol@exp1
  3814  0D16  084A               	movf	___fltol@exp1,w
  3815  0D17  1D03               	btfss	3,2
  3816  0D18  2D1A               	goto	u2351
  3817  0D19  2D1B               	goto	u2350
  3818  0D1A                     u2351:
  3819  0D1A  2D24               	goto	l2255
  3820  0D1B                     u2350:
  3821  0D1B                     l2251:
  3822  0D1B  3000               	movlw	0
  3823  0D1C  00C3               	movwf	?___fltol+3
  3824  0D1D  3000               	movlw	0
  3825  0D1E  00C2               	movwf	?___fltol+2
  3826  0D1F  3000               	movlw	0
  3827  0D20  00C1               	movwf	?___fltol+1
  3828  0D21  3000               	movlw	0
  3829  0D22  00C0               	movwf	?___fltol
  3830  0D23  2D83               	goto	l500
  3831  0D24                     l2255:
  3832  0D24  0840               	movf	___fltol@f1,w
  3833  0D25  00C4               	movwf	??___fltol
  3834  0D26  0841               	movf	___fltol@f1+1,w
  3835  0D27  00C5               	movwf	??___fltol+1
  3836  0D28  0842               	movf	___fltol@f1+2,w
  3837  0D29  00C6               	movwf	??___fltol+2
  3838  0D2A  0843               	movf	___fltol@f1+3,w
  3839  0D2B  00C7               	movwf	??___fltol+3
  3840  0D2C  301F               	movlw	31
  3841  0D2D                     u2365:
  3842  0D2D  36C7               	lsrf	??___fltol+3,f
  3843  0D2E  0CC6               	rrf	??___fltol+2,f
  3844  0D2F  0CC5               	rrf	??___fltol+1,f
  3845  0D30  0CC4               	rrf	??___fltol,f
  3846  0D31                     u2360:
  3847  0D31  0B89               	decfsz	9,f
  3848  0D32  2D2D               	goto	u2365
  3849  0D33  0844               	movf	??___fltol,w
  3850  0D34  00C8               	movwf	??___fltol+4
  3851  0D35  0848               	movf	??___fltol+4,w
  3852  0D36  00C9               	movwf	___fltol@sign1
  3853  0D37                     l2257:
  3854  0D37  17C2               	bsf	___fltol@f1+2,7
  3855  0D38                     l2259:
  3856  0D38  30FF               	movlw	255
  3857  0D39  05C0               	andwf	___fltol@f1,f
  3858  0D3A  30FF               	movlw	255
  3859  0D3B  05C1               	andwf	___fltol@f1+1,f
  3860  0D3C  30FF               	movlw	255
  3861  0D3D  05C2               	andwf	___fltol@f1+2,f
  3862  0D3E  3000               	movlw	0
  3863  0D3F  05C3               	andwf	___fltol@f1+3,f
  3864  0D40                     l2261:
  3865  0D40  3096               	movlw	150
  3866  0D41  02CA               	subwf	___fltol@exp1,f
  3867  0D42                     l2263:
  3868  0D42  1FCA               	btfss	___fltol@exp1,7
  3869  0D43  2D45               	goto	u2371
  3870  0D44  2D46               	goto	u2370
  3871  0D45                     u2371:
  3872  0D45  2D5E               	goto	l2273
  3873  0D46                     u2370:
  3874  0D46                     l2265:
  3875  0D46  084A               	movf	___fltol@exp1,w
  3876  0D47  3A80               	xorlw	128
  3877  0D48  3E97               	addlw	151
  3878  0D49  1803               	skipnc
  3879  0D4A  2D4C               	goto	u2381
  3880  0D4B  2D4D               	goto	u2380
  3881  0D4C                     u2381:
  3882  0D4C  2D4E               	goto	l2271
  3883  0D4D                     u2380:
  3884  0D4D  2D1B               	goto	l2251
  3885  0D4E                     l2271:
  3886  0D4E  3001               	movlw	1
  3887  0D4F                     u2395:
  3888  0D4F  36C3               	lsrf	___fltol@f1+3,f
  3889  0D50  0CC2               	rrf	___fltol@f1+2,f
  3890  0D51  0CC1               	rrf	___fltol@f1+1,f
  3891  0D52  0CC0               	rrf	___fltol@f1,f
  3892  0D53  0B89               	decfsz	9,f
  3893  0D54  2D4F               	goto	u2395
  3894  0D55  3001               	movlw	1
  3895  0D56  00C4               	movwf	??___fltol
  3896  0D57  0844               	movf	??___fltol,w
  3897  0D58  07CA               	addwf	___fltol@exp1,f
  3898  0D59  1D03               	btfss	3,2
  3899  0D5A  2D5C               	goto	u2401
  3900  0D5B  2D5D               	goto	u2400
  3901  0D5C                     u2401:
  3902  0D5C  2D4E               	goto	l2271
  3903  0D5D                     u2400:
  3904  0D5D  2D73               	goto	l2281
  3905  0D5E                     l2273:
  3906  0D5E  3020               	movlw	32
  3907  0D5F  024A               	subwf	___fltol@exp1,w
  3908  0D60  1C03               	skipc
  3909  0D61  2D63               	goto	u2411
  3910  0D62  2D64               	goto	u2410
  3911  0D63                     u2411:
  3912  0D63  2D6E               	goto	l507
  3913  0D64                     u2410:
  3914  0D64  2D1B               	goto	l2251
  3915  0D65                     l2279:
  3916  0D65  3001               	movlw	1
  3917  0D66                     u2425:
  3918  0D66  35C0               	lslf	___fltol@f1,f
  3919  0D67  0DC1               	rlf	___fltol@f1+1,f
  3920  0D68  0DC2               	rlf	___fltol@f1+2,f
  3921  0D69  0DC3               	rlf	___fltol@f1+3,f
  3922  0D6A  0B89               	decfsz	9,f
  3923  0D6B  2D66               	goto	u2425
  3924  0D6C  3001               	movlw	1
  3925  0D6D  02CA               	subwf	___fltol@exp1,f
  3926  0D6E                     l507:
  3927  0D6E  084A               	movf	___fltol@exp1,w
  3928  0D6F  1D03               	btfss	3,2
  3929  0D70  2D72               	goto	u2431
  3930  0D71  2D73               	goto	u2430
  3931  0D72                     u2431:
  3932  0D72  2D65               	goto	l2279
  3933  0D73                     u2430:
  3934  0D73                     l2281:
  3935  0D73  0849               	movf	___fltol@sign1,w
  3936  0D74  1903               	btfsc	3,2
  3937  0D75  2D77               	goto	u2441
  3938  0D76  2D78               	goto	u2440
  3939  0D77                     u2441:
  3940  0D77  2D83               	goto	l510
  3941  0D78                     u2440:
  3942  0D78                     l2283:
  3943  0D78  09C0               	comf	___fltol@f1,f
  3944  0D79  09C1               	comf	___fltol@f1+1,f
  3945  0D7A  09C2               	comf	___fltol@f1+2,f
  3946  0D7B  09C3               	comf	___fltol@f1+3,f
  3947  0D7C  0AC0               	incf	___fltol@f1,f
  3948  0D7D  1903               	skipnz
  3949  0D7E  0AC1               	incf	___fltol@f1+1,f
  3950  0D7F  1903               	skipnz
  3951  0D80  0AC2               	incf	___fltol@f1+2,f
  3952  0D81  1903               	skipnz
  3953  0D82  0AC3               	incf	___fltol@f1+3,f
  3954  0D83                     l510:
  3955  0D83                     l500:
  3956  0D83  0008               	return
  3957  0D84                     __end_of___fltol:
  3958                           
  3959                           	psect	text15
  3960  0AB4                     __ptext15:	
  3961 ;; *************** function ___flsub *****************
  3962 ;; Defined at:
  3963 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  3964 ;; Parameters:    Size  Location     Type
  3965 ;;  a               4   52[BANK0 ] long 
  3966 ;;  b               4   56[BANK0 ] long 
  3967 ;; Auto vars:     Size  Location     Type
  3968 ;;		None
  3969 ;; Return value:  Size  Location     Type
  3970 ;;                  4   52[BANK0 ] long 
  3971 ;; Registers used:
  3972 ;;		wreg, status,2, status,0, pclath, cstack
  3973 ;; Tracked objects:
  3974 ;;		On entry : 0/0
  3975 ;;		On exit  : 0/0
  3976 ;;		Unchanged: 0/0
  3977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3978 ;;      Params:         0       8       0       0       0       0       0       0
  3979 ;;      Locals:         0       0       0       0       0       0       0       0
  3980 ;;      Temps:          0       0       0       0       0       0       0       0
  3981 ;;      Totals:         0       8       0       0       0       0       0       0
  3982 ;;Total ram usage:        8 bytes
  3983 ;; Hardware stack levels used:    1
  3984 ;; Hardware stack levels required when called:    1
  3985 ;; This function calls:
  3986 ;;		___fladd
  3987 ;; This function is called by:
  3988 ;;		_ftoa
  3989 ;; This function uses a non-reentrant model
  3990 ;;
  3991                           
  3992                           
  3993                           ;psect for function ___flsub
  3994  0AB4                     ___flsub:
  3995  0AB4                     l2285:	
  3996                           ;incstack = 0
  3997                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  3998                           
  3999  0AB4  3080               	movlw	128
  4000  0AB5  0140               	movlb	0	; select bank0
  4001  0AB6  06D7               	xorwf	___flsub@a+3,f
  4002  0AB7                     l2287:
  4003  0AB7  085B               	movf	___flsub@b+3,w
  4004  0AB8  00C3               	movwf	___fladd@b+3
  4005  0AB9  085A               	movf	___flsub@b+2,w
  4006  0ABA  00C2               	movwf	___fladd@b+2
  4007  0ABB  0859               	movf	___flsub@b+1,w
  4008  0ABC  00C1               	movwf	___fladd@b+1
  4009  0ABD  0858               	movf	___flsub@b,w
  4010  0ABE  00C0               	movwf	___fladd@b
  4011  0ABF  0857               	movf	___flsub@a+3,w
  4012  0AC0  00C7               	movwf	___fladd@a+3
  4013  0AC1  0856               	movf	___flsub@a+2,w
  4014  0AC2  00C6               	movwf	___fladd@a+2
  4015  0AC3  0855               	movf	___flsub@a+1,w
  4016  0AC4  00C5               	movwf	___fladd@a+1
  4017  0AC5  0854               	movf	___flsub@a,w
  4018  0AC6  00C4               	movwf	___fladd@a
  4019  0AC7  3183  235E  318A   	fcall	___fladd
  4020  0ACA  0140               	movlb	0	; select bank0
  4021  0ACB  0843               	movf	?___fladd+3,w
  4022  0ACC  00D7               	movwf	?___flsub+3
  4023  0ACD  0842               	movf	?___fladd+2,w
  4024  0ACE  00D6               	movwf	?___flsub+2
  4025  0ACF  0841               	movf	?___fladd+1,w
  4026  0AD0  00D5               	movwf	?___flsub+1
  4027  0AD1  0840               	movf	?___fladd,w
  4028  0AD2  00D4               	movwf	?___flsub
  4029  0AD3                     l653:
  4030  0AD3  0008               	return
  4031  0AD4                     __end_of___flsub:
  4032                           
  4033                           	psect	text16
  4034  09BE                     __ptext16:	
  4035 ;; *************** function ___flneg *****************
  4036 ;; Defined at:
  4037 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  4038 ;; Parameters:    Size  Location     Type
  4039 ;;  f1              4    0[COMMON] long 
  4040 ;; Auto vars:     Size  Location     Type
  4041 ;;		None
  4042 ;; Return value:  Size  Location     Type
  4043 ;;                  4    0[COMMON] long 
  4044 ;; Registers used:
  4045 ;;		wreg
  4046 ;; Tracked objects:
  4047 ;;		On entry : 0/0
  4048 ;;		On exit  : 0/0
  4049 ;;		Unchanged: 0/0
  4050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4051 ;;      Params:         4       0       0       0       0       0       0       0
  4052 ;;      Locals:         0       0       0       0       0       0       0       0
  4053 ;;      Temps:          0       0       0       0       0       0       0       0
  4054 ;;      Totals:         4       0       0       0       0       0       0       0
  4055 ;;Total ram usage:        4 bytes
  4056 ;; Hardware stack levels used:    1
  4057 ;; This function calls:
  4058 ;;		Nothing
  4059 ;; This function is called by:
  4060 ;;		_ftoa
  4061 ;; This function uses a non-reentrant model
  4062 ;;
  4063                           
  4064                           
  4065                           ;psect for function ___flneg
  4066  09BE                     ___flneg:
  4067  09BE                     l2241:	
  4068                           ;incstack = 0
  4069                           ; Regs used in ___flneg: [wreg]
  4070                           
  4071  09BE  0873               	movf	___flneg@f1+3,w
  4072  09BF  0472               	iorwf	___flneg@f1+2,w
  4073  09C0  0471               	iorwf	___flneg@f1+1,w
  4074  09C1  0470               	iorwf	___flneg@f1,w
  4075  09C2  1903               	skipnz
  4076  09C3  29C5               	goto	u2341
  4077  09C4  29C6               	goto	u2340
  4078  09C5                     u2341:
  4079  09C5  29C8               	goto	l2245
  4080  09C6                     u2340:
  4081  09C6                     l2243:
  4082  09C6  3080               	movlw	128
  4083  09C7  06F3               	xorwf	___flneg@f1+3,f
  4084  09C8                     l2245:
  4085  09C8                     l496:
  4086  09C8  0008               	return
  4087  09C9                     __end_of___flneg:
  4088                           
  4089                           	psect	text17
  4090  009E                     __ptext17:	
  4091 ;; *************** function _LeerSensores *****************
  4092 ;; Defined at:
  4093 ;;		line 147 in file "Entrega2.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;		None
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;		None
  4098 ;; Return value:  Size  Location     Type
  4099 ;;                  1    wreg      void 
  4100 ;; Registers used:
  4101 ;;		wreg, status,2, status,0, pclath, cstack
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/0
  4104 ;;		On exit  : 0/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4107 ;;      Params:         0       0       0       0       0       0       0       0
  4108 ;;      Locals:         0       0       0       0       0       0       0       0
  4109 ;;      Temps:          0       4       0       0       0       0       0       0
  4110 ;;      Totals:         0       4       0       0       0       0       0       0
  4111 ;;Total ram usage:        4 bytes
  4112 ;; Hardware stack levels used:    1
  4113 ;; Hardware stack levels required when called:    2
  4114 ;; This function calls:
  4115 ;;		_LeerAdc
  4116 ;;		___fladd
  4117 ;;		___flmul
  4118 ;;		___xxtofl
  4119 ;; This function is called by:
  4120 ;;		_main
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124                           
  4125                           ;psect for function _LeerSensores
  4126  009E                     _LeerSensores:
  4127  009E                     l2673:	
  4128                           ;incstack = 0
  4129                           ; Regs used in _LeerSensores: [wreg+status,2+status,0+pclath+cstack]
  4130                           
  4131                           
  4132                           ;Entrega2.c: 152:     lecturaUv=CUV*((LeerAdc(AUV)))-1;
  4133  009E  30BF               	movlw	191
  4134  009F  0140               	movlb	0	; select bank0
  4135  00A0  00C3               	movwf	___fladd@b+3
  4136  00A1  3080               	movlw	128
  4137  00A2  00C2               	movwf	___fladd@b+2
  4138  00A3  3000               	movlw	0
  4139  00A4  00C1               	movwf	___fladd@b+1
  4140  00A5  3000               	movlw	0
  4141  00A6  00C0               	movwf	___fladd@b
  4142  00A7  303D               	movlw	61
  4143  00A8  00A9               	movwf	___flmul@b+3
  4144  00A9  301C               	movlw	28
  4145  00AA  00A8               	movwf	___flmul@b+2
  4146  00AB  30A7               	movlw	167
  4147  00AC  00A7               	movwf	___flmul@b+1
  4148  00AD  30F8               	movlw	248
  4149  00AE  00A6               	movwf	___flmul@b
  4150  00AF  3002               	movlw	2
  4151  00B0  318A  2294  3180   	fcall	_LeerAdc
  4152  00B3  0870               	movf	?_LeerAdc,w
  4153  00B4  0140               	movlb	0	; select bank0
  4154  00B5  00D4               	movwf	??_LeerSensores
  4155  00B6  0871               	movf	?_LeerAdc+1,w
  4156  00B7  00D5               	movwf	??_LeerSensores+1
  4157  00B8  01D6               	clrf	??_LeerSensores+2
  4158  00B9  01D7               	clrf	??_LeerSensores+3
  4159  00BA  0857               	movf	??_LeerSensores+3,w
  4160  00BB  00F8               	movwf	___xxtofl@val+3
  4161  00BC  0856               	movf	??_LeerSensores+2,w
  4162  00BD  00F7               	movwf	___xxtofl@val+2
  4163  00BE  0855               	movf	??_LeerSensores+1,w
  4164  00BF  00F6               	movwf	___xxtofl@val+1
  4165  00C0  0854               	movf	??_LeerSensores,w
  4166  00C1  00F5               	movwf	___xxtofl@val
  4167  00C2  3000               	movlw	0
  4168  00C3  318E  2697  3180   	fcall	___xxtofl
  4169  00C6  0878               	movf	?___xxtofl+3,w
  4170  00C7  0140               	movlb	0	; select bank0
  4171  00C8  00AD               	movwf	___flmul@a+3
  4172  00C9  0877               	movf	?___xxtofl+2,w
  4173  00CA  00AC               	movwf	___flmul@a+2
  4174  00CB  0876               	movf	?___xxtofl+1,w
  4175  00CC  00AB               	movwf	___flmul@a+1
  4176  00CD  0875               	movf	?___xxtofl,w
  4177  00CE  00AA               	movwf	___flmul@a
  4178  00CF  3185  2596  3180   	fcall	___flmul
  4179  00D2  0140               	movlb	0	; select bank0
  4180  00D3  0829               	movf	?___flmul+3,w
  4181  00D4  00C7               	movwf	___fladd@a+3
  4182  00D5  0828               	movf	?___flmul+2,w
  4183  00D6  00C6               	movwf	___fladd@a+2
  4184  00D7  0827               	movf	?___flmul+1,w
  4185  00D8  00C5               	movwf	___fladd@a+1
  4186  00D9  0826               	movf	?___flmul,w
  4187  00DA  00C4               	movwf	___fladd@a
  4188  00DB  3183  235E  3180   	fcall	___fladd
  4189  00DE  0140               	movlb	0	; select bank0
  4190  00DF  0843               	movf	?___fladd+3,w
  4191  00E0  0141               	movlb	1	; select bank1
  4192  00E1  00AB               	movwf	(_lecturaUv+3)^(0+128)
  4193  00E2  0140               	movlb	0	; select bank0
  4194  00E3  0842               	movf	?___fladd+2,w
  4195  00E4  0141               	movlb	1	; select bank1
  4196  00E5  00AA               	movwf	(_lecturaUv+2)^(0+128)
  4197  00E6  0140               	movlb	0	; select bank0
  4198  00E7  0841               	movf	?___fladd+1,w
  4199  00E8  0141               	movlb	1	; select bank1
  4200  00E9  00A9               	movwf	(_lecturaUv+1)^(0+128)
  4201  00EA  0140               	movlb	0	; select bank0
  4202  00EB  0840               	movf	?___fladd,w
  4203  00EC  0141               	movlb	1	; select bank1
  4204  00ED  00A8               	movwf	_lecturaUv^(0+128)
  4205                           
  4206                           ;Entrega2.c: 153:     lecturaHumedad=CHUM*(LeerAdc(ASH));
  4207  00EE  303B               	movlw	59
  4208  00EF  0140               	movlb	0	; select bank0
  4209  00F0  00A9               	movwf	___flmul@b+3
  4210  00F1  309E               	movlw	158
  4211  00F2  00A8               	movwf	___flmul@b+2
  4212  00F3  30C2               	movlw	194
  4213  00F4  00A7               	movwf	___flmul@b+1
  4214  00F5  307B               	movlw	123
  4215  00F6  00A6               	movwf	___flmul@b
  4216  00F7  3005               	movlw	5
  4217  00F8  318A  2294  3180   	fcall	_LeerAdc
  4218  00FB  0870               	movf	?_LeerAdc,w
  4219  00FC  0140               	movlb	0	; select bank0
  4220  00FD  00D4               	movwf	??_LeerSensores
  4221  00FE  0871               	movf	?_LeerAdc+1,w
  4222  00FF  00D5               	movwf	??_LeerSensores+1
  4223  0100  01D6               	clrf	??_LeerSensores+2
  4224  0101  01D7               	clrf	??_LeerSensores+3
  4225  0102  0857               	movf	??_LeerSensores+3,w
  4226  0103  00F8               	movwf	___xxtofl@val+3
  4227  0104  0856               	movf	??_LeerSensores+2,w
  4228  0105  00F7               	movwf	___xxtofl@val+2
  4229  0106  0855               	movf	??_LeerSensores+1,w
  4230  0107  00F6               	movwf	___xxtofl@val+1
  4231  0108  0854               	movf	??_LeerSensores,w
  4232  0109  00F5               	movwf	___xxtofl@val
  4233  010A  3000               	movlw	0
  4234  010B  318E  2697  3180   	fcall	___xxtofl
  4235  010E  0878               	movf	?___xxtofl+3,w
  4236  010F  0140               	movlb	0	; select bank0
  4237  0110  00AD               	movwf	___flmul@a+3
  4238  0111  0877               	movf	?___xxtofl+2,w
  4239  0112  00AC               	movwf	___flmul@a+2
  4240  0113  0876               	movf	?___xxtofl+1,w
  4241  0114  00AB               	movwf	___flmul@a+1
  4242  0115  0875               	movf	?___xxtofl,w
  4243  0116  00AA               	movwf	___flmul@a
  4244  0117  3185  2596  3180   	fcall	___flmul
  4245  011A  0140               	movlb	0	; select bank0
  4246  011B  0829               	movf	?___flmul+3,w
  4247  011C  0141               	movlb	1	; select bank1
  4248  011D  00A7               	movwf	(_lecturaHumedad+3)^(0+128)
  4249  011E  0140               	movlb	0	; select bank0
  4250  011F  0828               	movf	?___flmul+2,w
  4251  0120  0141               	movlb	1	; select bank1
  4252  0121  00A6               	movwf	(_lecturaHumedad+2)^(0+128)
  4253  0122  0140               	movlb	0	; select bank0
  4254  0123  0827               	movf	?___flmul+1,w
  4255  0124  0141               	movlb	1	; select bank1
  4256  0125  00A5               	movwf	(_lecturaHumedad+1)^(0+128)
  4257  0126  0140               	movlb	0	; select bank0
  4258  0127  0826               	movf	?___flmul,w
  4259  0128  0141               	movlb	1	; select bank1
  4260  0129  00A4               	movwf	_lecturaHumedad^(0+128)
  4261                           
  4262                           ;Entrega2.c: 154:     lecturaTemp=CTEMP*(LeerAdc(AST));
  4263  012A  303E               	movlw	62
  4264  012B  0140               	movlb	0	; select bank0
  4265  012C  00A9               	movwf	___flmul@b+3
  4266  012D  30F8               	movlw	248
  4267  012E  00A8               	movwf	___flmul@b+2
  4268  012F  300F               	movlw	15
  4269  0130  00A7               	movwf	___flmul@b+1
  4270  0131  30E0               	movlw	224
  4271  0132  00A6               	movwf	___flmul@b
  4272  0133  3001               	movlw	1
  4273  0134  318A  2294  3180   	fcall	_LeerAdc
  4274  0137  0870               	movf	?_LeerAdc,w
  4275  0138  0140               	movlb	0	; select bank0
  4276  0139  00D4               	movwf	??_LeerSensores
  4277  013A  0871               	movf	?_LeerAdc+1,w
  4278  013B  00D5               	movwf	??_LeerSensores+1
  4279  013C  01D6               	clrf	??_LeerSensores+2
  4280  013D  01D7               	clrf	??_LeerSensores+3
  4281  013E  0857               	movf	??_LeerSensores+3,w
  4282  013F  00F8               	movwf	___xxtofl@val+3
  4283  0140  0856               	movf	??_LeerSensores+2,w
  4284  0141  00F7               	movwf	___xxtofl@val+2
  4285  0142  0855               	movf	??_LeerSensores+1,w
  4286  0143  00F6               	movwf	___xxtofl@val+1
  4287  0144  0854               	movf	??_LeerSensores,w
  4288  0145  00F5               	movwf	___xxtofl@val
  4289  0146  3000               	movlw	0
  4290  0147  318E  2697  3180   	fcall	___xxtofl
  4291  014A  0878               	movf	?___xxtofl+3,w
  4292  014B  0140               	movlb	0	; select bank0
  4293  014C  00AD               	movwf	___flmul@a+3
  4294  014D  0877               	movf	?___xxtofl+2,w
  4295  014E  00AC               	movwf	___flmul@a+2
  4296  014F  0876               	movf	?___xxtofl+1,w
  4297  0150  00AB               	movwf	___flmul@a+1
  4298  0151  0875               	movf	?___xxtofl,w
  4299  0152  00AA               	movwf	___flmul@a
  4300  0153  3185  2596  3180   	fcall	___flmul
  4301  0156  0140               	movlb	0	; select bank0
  4302  0157  0829               	movf	?___flmul+3,w
  4303  0158  0141               	movlb	1	; select bank1
  4304  0159  00A3               	movwf	(_lecturaTemp+3)^(0+128)
  4305  015A  0140               	movlb	0	; select bank0
  4306  015B  0828               	movf	?___flmul+2,w
  4307  015C  0141               	movlb	1	; select bank1
  4308  015D  00A2               	movwf	(_lecturaTemp+2)^(0+128)
  4309  015E  0140               	movlb	0	; select bank0
  4310  015F  0827               	movf	?___flmul+1,w
  4311  0160  0141               	movlb	1	; select bank1
  4312  0161  00A1               	movwf	(_lecturaTemp+1)^(0+128)
  4313  0162  0140               	movlb	0	; select bank0
  4314  0163  0826               	movf	?___flmul,w
  4315  0164  0141               	movlb	1	; select bank1
  4316  0165  00A0               	movwf	_lecturaTemp^(0+128)
  4317  0166                     l95:
  4318  0166  0008               	return
  4319  0167                     __end_of_LeerSensores:
  4320                           
  4321                           	psect	text18
  4322  0E97                     __ptext18:	
  4323 ;; *************** function ___xxtofl *****************
  4324 ;; Defined at:
  4325 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  4326 ;; Parameters:    Size  Location     Type
  4327 ;;  sign            1    wreg     unsigned char 
  4328 ;;  val             4    5[COMMON] long 
  4329 ;; Auto vars:     Size  Location     Type
  4330 ;;  sign            1    0[BANK0 ] unsigned char 
  4331 ;;  arg             4    2[BANK0 ] unsigned long 
  4332 ;;  exp             1    1[BANK0 ] unsigned char 
  4333 ;; Return value:  Size  Location     Type
  4334 ;;                  4    5[COMMON] unsigned char 
  4335 ;; Registers used:
  4336 ;;		wreg, status,2, status,0
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4342 ;;      Params:         4       0       0       0       0       0       0       0
  4343 ;;      Locals:         0       6       0       0       0       0       0       0
  4344 ;;      Temps:          4       0       0       0       0       0       0       0
  4345 ;;      Totals:         8       6       0       0       0       0       0       0
  4346 ;;Total ram usage:       14 bytes
  4347 ;; Hardware stack levels used:    1
  4348 ;; This function calls:
  4349 ;;		Nothing
  4350 ;; This function is called by:
  4351 ;;		_LeerSensores
  4352 ;;		_ftoa
  4353 ;; This function uses a non-reentrant model
  4354 ;;
  4355                           
  4356                           
  4357                           ;psect for function ___xxtofl
  4358  0E97                     ___xxtofl:
  4359                           
  4360                           ;incstack = 0
  4361                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4362                           ;___xxtofl@sign stored from wreg
  4363  0E97  0140               	movlb	0	; select bank0
  4364  0E98  00A0               	movwf	___xxtofl@sign
  4365  0E99                     l2431:
  4366  0E99  0820               	movf	___xxtofl@sign,w
  4367  0E9A  1903               	btfsc	3,2
  4368  0E9B  2E9D               	goto	u2711
  4369  0E9C  2E9E               	goto	u2710
  4370  0E9D                     u2711:
  4371  0E9D  2EB2               	goto	l2437
  4372  0E9E                     u2710:
  4373  0E9E                     l2433:
  4374  0E9E  1FF8               	btfss	___xxtofl@val+3,7
  4375  0E9F  2EA1               	goto	u2721
  4376  0EA0  2EA2               	goto	u2720
  4377  0EA1                     u2721:
  4378  0EA1  2EB2               	goto	l2437
  4379  0EA2                     u2720:
  4380  0EA2                     l2435:
  4381  0EA2  0975               	comf	___xxtofl@val,w
  4382  0EA3  00A2               	movwf	___xxtofl@arg
  4383  0EA4  0976               	comf	___xxtofl@val+1,w
  4384  0EA5  00A3               	movwf	___xxtofl@arg+1
  4385  0EA6  0977               	comf	___xxtofl@val+2,w
  4386  0EA7  00A4               	movwf	___xxtofl@arg+2
  4387  0EA8  0978               	comf	___xxtofl@val+3,w
  4388  0EA9  00A5               	movwf	___xxtofl@arg+3
  4389  0EAA  0AA2               	incf	___xxtofl@arg,f
  4390  0EAB  1903               	skipnz
  4391  0EAC  0AA3               	incf	___xxtofl@arg+1,f
  4392  0EAD  1903               	skipnz
  4393  0EAE  0AA4               	incf	___xxtofl@arg+2,f
  4394  0EAF  1903               	skipnz
  4395  0EB0  0AA5               	incf	___xxtofl@arg+3,f
  4396  0EB1  2EBA               	goto	l747
  4397  0EB2                     l2437:
  4398  0EB2  0878               	movf	___xxtofl@val+3,w
  4399  0EB3  00A5               	movwf	___xxtofl@arg+3
  4400  0EB4  0877               	movf	___xxtofl@val+2,w
  4401  0EB5  00A4               	movwf	___xxtofl@arg+2
  4402  0EB6  0876               	movf	___xxtofl@val+1,w
  4403  0EB7  00A3               	movwf	___xxtofl@arg+1
  4404  0EB8  0875               	movf	___xxtofl@val,w
  4405  0EB9  00A2               	movwf	___xxtofl@arg
  4406  0EBA                     l747:
  4407  0EBA  0878               	movf	___xxtofl@val+3,w
  4408  0EBB  0477               	iorwf	___xxtofl@val+2,w
  4409  0EBC  0476               	iorwf	___xxtofl@val+1,w
  4410  0EBD  0475               	iorwf	___xxtofl@val,w
  4411  0EBE  1D03               	skipz
  4412  0EBF  2EC1               	goto	u2731
  4413  0EC0  2EC2               	goto	u2730
  4414  0EC1                     u2731:
  4415  0EC1  2ECB               	goto	l2443
  4416  0EC2                     u2730:
  4417  0EC2                     l2439:
  4418  0EC2  3000               	movlw	0
  4419  0EC3  00F8               	movwf	?___xxtofl+3
  4420  0EC4  3000               	movlw	0
  4421  0EC5  00F7               	movwf	?___xxtofl+2
  4422  0EC6  3000               	movlw	0
  4423  0EC7  00F6               	movwf	?___xxtofl+1
  4424  0EC8  3000               	movlw	0
  4425  0EC9  00F5               	movwf	?___xxtofl
  4426  0ECA  2F43               	goto	l749
  4427  0ECB                     l2443:
  4428  0ECB  3096               	movlw	150
  4429  0ECC  00F9               	movwf	??___xxtofl
  4430  0ECD  0879               	movf	??___xxtofl,w
  4431  0ECE  00A1               	movwf	___xxtofl@exp
  4432  0ECF  2EDB               	goto	l2447
  4433  0ED0                     l2445:
  4434  0ED0  3001               	movlw	1
  4435  0ED1  00F9               	movwf	??___xxtofl
  4436  0ED2  0879               	movf	??___xxtofl,w
  4437  0ED3  07A1               	addwf	___xxtofl@exp,f
  4438  0ED4  3001               	movlw	1
  4439  0ED5                     u2745:
  4440  0ED5  36A5               	lsrf	___xxtofl@arg+3,f
  4441  0ED6  0CA4               	rrf	___xxtofl@arg+2,f
  4442  0ED7  0CA3               	rrf	___xxtofl@arg+1,f
  4443  0ED8  0CA2               	rrf	___xxtofl@arg,f
  4444  0ED9  0B89               	decfsz	9,f
  4445  0EDA  2ED5               	goto	u2745
  4446  0EDB                     l2447:
  4447  0EDB  30FE               	movlw	254
  4448  0EDC  0525               	andwf	___xxtofl@arg+3,w
  4449  0EDD  1D03               	btfss	3,2
  4450  0EDE  2EE0               	goto	u2751
  4451  0EDF  2EE1               	goto	u2750
  4452  0EE0                     u2751:
  4453  0EE0  2ED0               	goto	l2445
  4454  0EE1                     u2750:
  4455  0EE1  2EF5               	goto	l753
  4456  0EE2                     l2449:
  4457  0EE2  3001               	movlw	1
  4458  0EE3  00F9               	movwf	??___xxtofl
  4459  0EE4  0879               	movf	??___xxtofl,w
  4460  0EE5  07A1               	addwf	___xxtofl@exp,f
  4461  0EE6                     l2451:
  4462  0EE6  3001               	movlw	1
  4463  0EE7  07A2               	addwf	___xxtofl@arg,f
  4464  0EE8  3000               	movlw	0
  4465  0EE9  3DA3               	addwfc	___xxtofl@arg+1,f
  4466  0EEA  3000               	movlw	0
  4467  0EEB  3DA4               	addwfc	___xxtofl@arg+2,f
  4468  0EEC  3000               	movlw	0
  4469  0EED  3DA5               	addwfc	___xxtofl@arg+3,f
  4470  0EEE                     l2453:
  4471  0EEE  3001               	movlw	1
  4472  0EEF                     u2765:
  4473  0EEF  36A5               	lsrf	___xxtofl@arg+3,f
  4474  0EF0  0CA4               	rrf	___xxtofl@arg+2,f
  4475  0EF1  0CA3               	rrf	___xxtofl@arg+1,f
  4476  0EF2  0CA2               	rrf	___xxtofl@arg,f
  4477  0EF3  0B89               	decfsz	9,f
  4478  0EF4  2EEF               	goto	u2765
  4479  0EF5                     l753:
  4480  0EF5  30FF               	movlw	255
  4481  0EF6  0525               	andwf	___xxtofl@arg+3,w
  4482  0EF7  1D03               	btfss	3,2
  4483  0EF8  2EFA               	goto	u2771
  4484  0EF9  2EFB               	goto	u2770
  4485  0EFA                     u2771:
  4486  0EFA  2EE2               	goto	l2449
  4487  0EFB                     u2770:
  4488  0EFB  2F05               	goto	l2457
  4489  0EFC                     l2455:
  4490  0EFC  3001               	movlw	1
  4491  0EFD  02A1               	subwf	___xxtofl@exp,f
  4492  0EFE  3001               	movlw	1
  4493  0EFF                     u2785:
  4494  0EFF  35A2               	lslf	___xxtofl@arg,f
  4495  0F00  0DA3               	rlf	___xxtofl@arg+1,f
  4496  0F01  0DA4               	rlf	___xxtofl@arg+2,f
  4497  0F02  0DA5               	rlf	___xxtofl@arg+3,f
  4498  0F03  0B89               	decfsz	9,f
  4499  0F04  2EFF               	goto	u2785
  4500  0F05                     l2457:
  4501  0F05  1BA4               	btfsc	___xxtofl@arg+2,7
  4502  0F06  2F08               	goto	u2791
  4503  0F07  2F09               	goto	u2790
  4504  0F08                     u2791:
  4505  0F08  2F0F               	goto	l760
  4506  0F09                     u2790:
  4507  0F09                     l2459:
  4508  0F09  3002               	movlw	2
  4509  0F0A  0221               	subwf	___xxtofl@exp,w
  4510  0F0B  1803               	skipnc
  4511  0F0C  2F0E               	goto	u2801
  4512  0F0D  2F0F               	goto	u2800
  4513  0F0E                     u2801:
  4514  0F0E  2EFC               	goto	l2455
  4515  0F0F                     u2800:
  4516  0F0F                     l760:
  4517  0F0F  1821               	btfsc	___xxtofl@exp,0
  4518  0F10  2F12               	goto	u2811
  4519  0F11  2F13               	goto	u2810
  4520  0F12                     u2811:
  4521  0F12  2F1B               	goto	l761
  4522  0F13                     u2810:
  4523  0F13                     l2461:
  4524  0F13  30FF               	movlw	255
  4525  0F14  05A2               	andwf	___xxtofl@arg,f
  4526  0F15  30FF               	movlw	255
  4527  0F16  05A3               	andwf	___xxtofl@arg+1,f
  4528  0F17  307F               	movlw	127
  4529  0F18  05A4               	andwf	___xxtofl@arg+2,f
  4530  0F19  30FF               	movlw	255
  4531  0F1A  05A5               	andwf	___xxtofl@arg+3,f
  4532  0F1B                     l761:
  4533  0F1B  1003               	clrc
  4534  0F1C  0CA1               	rrf	___xxtofl@exp,f
  4535  0F1D                     l2463:
  4536  0F1D  0821               	movf	___xxtofl@exp,w
  4537  0F1E  00F9               	movwf	??___xxtofl
  4538  0F1F  01FA               	clrf	??___xxtofl+1
  4539  0F20  01FB               	clrf	??___xxtofl+2
  4540  0F21  01FC               	clrf	??___xxtofl+3
  4541  0F22  3018               	movlw	24
  4542  0F23                     u2825:
  4543  0F23  35F9               	lslf	??___xxtofl,f
  4544  0F24  0DFA               	rlf	??___xxtofl+1,f
  4545  0F25  0DFB               	rlf	??___xxtofl+2,f
  4546  0F26  0DFC               	rlf	??___xxtofl+3,f
  4547  0F27                     u2820:
  4548  0F27  0B89               	decfsz	9,f
  4549  0F28  2F23               	goto	u2825
  4550  0F29  0879               	movf	??___xxtofl,w
  4551  0F2A  04A2               	iorwf	___xxtofl@arg,f
  4552  0F2B  087A               	movf	??___xxtofl+1,w
  4553  0F2C  04A3               	iorwf	___xxtofl@arg+1,f
  4554  0F2D  087B               	movf	??___xxtofl+2,w
  4555  0F2E  04A4               	iorwf	___xxtofl@arg+2,f
  4556  0F2F  087C               	movf	??___xxtofl+3,w
  4557  0F30  04A5               	iorwf	___xxtofl@arg+3,f
  4558  0F31                     l2465:
  4559  0F31  0820               	movf	___xxtofl@sign,w
  4560  0F32  1903               	btfsc	3,2
  4561  0F33  2F35               	goto	u2831
  4562  0F34  2F36               	goto	u2830
  4563  0F35                     u2831:
  4564  0F35  2F3B               	goto	l2471
  4565  0F36                     u2830:
  4566  0F36                     l2467:
  4567  0F36  1FF8               	btfss	___xxtofl@val+3,7
  4568  0F37  2F39               	goto	u2841
  4569  0F38  2F3A               	goto	u2840
  4570  0F39                     u2841:
  4571  0F39  2F3B               	goto	l2471
  4572  0F3A                     u2840:
  4573  0F3A                     l2469:
  4574  0F3A  17A5               	bsf	___xxtofl@arg+3,7
  4575  0F3B                     l2471:
  4576  0F3B  0825               	movf	___xxtofl@arg+3,w
  4577  0F3C  00F8               	movwf	?___xxtofl+3
  4578  0F3D  0824               	movf	___xxtofl@arg+2,w
  4579  0F3E  00F7               	movwf	?___xxtofl+2
  4580  0F3F  0823               	movf	___xxtofl@arg+1,w
  4581  0F40  00F6               	movwf	?___xxtofl+1
  4582  0F41  0822               	movf	___xxtofl@arg,w
  4583  0F42  00F5               	movwf	?___xxtofl
  4584  0F43                     l749:
  4585  0F43  0008               	return
  4586  0F44                     __end_of___xxtofl:
  4587                           
  4588                           	psect	text19
  4589  0596                     __ptext19:	
  4590 ;; *************** function ___flmul *****************
  4591 ;; Defined at:
  4592 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  4593 ;; Parameters:    Size  Location     Type
  4594 ;;  b               4    6[BANK0 ] unsigned char 
  4595 ;;  a               4   10[BANK0 ] unsigned char 
  4596 ;; Auto vars:     Size  Location     Type
  4597 ;;  prod            4   26[BANK0 ] struct .
  4598 ;;  grs             4   20[BANK0 ] unsigned long 
  4599 ;;  temp            2   30[BANK0 ] struct .
  4600 ;;  bexp            1   25[BANK0 ] unsigned char 
  4601 ;;  aexp            1   24[BANK0 ] unsigned char 
  4602 ;;  sign            1   19[BANK0 ] unsigned char 
  4603 ;; Return value:  Size  Location     Type
  4604 ;;                  4    6[BANK0 ] unsigned char 
  4605 ;; Registers used:
  4606 ;;		wreg, status,2, status,0, pclath, cstack
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4612 ;;      Params:         0       8       0       0       0       0       0       0
  4613 ;;      Locals:         0      13       0       0       0       0       0       0
  4614 ;;      Temps:          0       5       0       0       0       0       0       0
  4615 ;;      Totals:         0      26       0       0       0       0       0       0
  4616 ;;Total ram usage:       26 bytes
  4617 ;; Hardware stack levels used:    1
  4618 ;; Hardware stack levels required when called:    1
  4619 ;; This function calls:
  4620 ;;		__Umul8_16
  4621 ;; This function is called by:
  4622 ;;		_LeerSensores
  4623 ;;		_ftoa
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627                           
  4628                           ;psect for function ___flmul
  4629  0596                     ___flmul:
  4630  0596                     l2291:	
  4631                           ;incstack = 0
  4632                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  4633                           
  4634  0596  0140               	movlb	0	; select bank0
  4635  0597  0829               	movf	___flmul@b+3,w
  4636  0598  3980               	andlw	128
  4637  0599  00AE               	movwf	??___flmul
  4638  059A  082E               	movf	??___flmul,w
  4639  059B  00B3               	movwf	___flmul@sign
  4640  059C                     l2293:
  4641  059C  3529               	lslf	___flmul@b+3,w
  4642  059D  00AE               	movwf	??___flmul
  4643  059E  082E               	movf	??___flmul,w
  4644  059F  00B9               	movwf	___flmul@bexp
  4645  05A0                     l2295:
  4646  05A0  1FA8               	btfss	___flmul@b+2,7
  4647  05A1  2DA3               	goto	u2451
  4648  05A2  2DA4               	goto	u2450
  4649  05A3                     u2451:
  4650  05A3  2DA5               	goto	l2299
  4651  05A4                     u2450:
  4652  05A4                     l2297:
  4653  05A4  1439               	bsf	___flmul@bexp,0
  4654  05A5                     l2299:
  4655  05A5  0839               	movf	___flmul@bexp,w
  4656  05A6  1903               	btfsc	3,2
  4657  05A7  2DA9               	goto	u2461
  4658  05A8  2DAA               	goto	u2460
  4659  05A9                     u2461:
  4660  05A9  2DB9               	goto	l2307
  4661  05AA                     u2460:
  4662  05AA                     l2301:
  4663  05AA  0A39               	incf	___flmul@bexp,w
  4664  05AB  1D03               	btfss	3,2
  4665  05AC  2DAE               	goto	u2471
  4666  05AD  2DAF               	goto	u2470
  4667  05AE                     u2471:
  4668  05AE  2DB7               	goto	l2305
  4669  05AF                     u2470:
  4670  05AF                     l2303:
  4671  05AF  3000               	movlw	0
  4672  05B0  00A9               	movwf	___flmul@b+3
  4673  05B1  3000               	movlw	0
  4674  05B2  00A8               	movwf	___flmul@b+2
  4675  05B3  3000               	movlw	0
  4676  05B4  00A7               	movwf	___flmul@b+1
  4677  05B5  3000               	movlw	0
  4678  05B6  00A6               	movwf	___flmul@b
  4679  05B7                     l2305:
  4680  05B7  17A8               	bsf	___flmul@b+2,7
  4681  05B8  2DC1               	goto	l2309
  4682  05B9                     l2307:
  4683  05B9  3000               	movlw	0
  4684  05BA  00A9               	movwf	___flmul@b+3
  4685  05BB  3000               	movlw	0
  4686  05BC  00A8               	movwf	___flmul@b+2
  4687  05BD  3000               	movlw	0
  4688  05BE  00A7               	movwf	___flmul@b+1
  4689  05BF  3000               	movlw	0
  4690  05C0  00A6               	movwf	___flmul@b
  4691  05C1                     l2309:
  4692  05C1  082D               	movf	___flmul@a+3,w
  4693  05C2  3980               	andlw	128
  4694  05C3  00AE               	movwf	??___flmul
  4695  05C4  082E               	movf	??___flmul,w
  4696  05C5  06B3               	xorwf	___flmul@sign,f
  4697  05C6                     l2311:
  4698  05C6  352D               	lslf	___flmul@a+3,w
  4699  05C7  00AE               	movwf	??___flmul
  4700  05C8  082E               	movf	??___flmul,w
  4701  05C9  00B8               	movwf	___flmul@aexp
  4702  05CA                     l2313:
  4703  05CA  1FAC               	btfss	___flmul@a+2,7
  4704  05CB  2DCD               	goto	u2481
  4705  05CC  2DCE               	goto	u2480
  4706  05CD                     u2481:
  4707  05CD  2DCF               	goto	l2317
  4708  05CE                     u2480:
  4709  05CE                     l2315:
  4710  05CE  1438               	bsf	___flmul@aexp,0
  4711  05CF                     l2317:
  4712  05CF  0838               	movf	___flmul@aexp,w
  4713  05D0  1903               	btfsc	3,2
  4714  05D1  2DD3               	goto	u2491
  4715  05D2  2DD4               	goto	u2490
  4716  05D3                     u2491:
  4717  05D3  2DE3               	goto	l2325
  4718  05D4                     u2490:
  4719  05D4                     l2319:
  4720  05D4  0A38               	incf	___flmul@aexp,w
  4721  05D5  1D03               	btfss	3,2
  4722  05D6  2DD8               	goto	u2501
  4723  05D7  2DD9               	goto	u2500
  4724  05D8                     u2501:
  4725  05D8  2DE1               	goto	l2323
  4726  05D9                     u2500:
  4727  05D9                     l2321:
  4728  05D9  3000               	movlw	0
  4729  05DA  00AD               	movwf	___flmul@a+3
  4730  05DB  3000               	movlw	0
  4731  05DC  00AC               	movwf	___flmul@a+2
  4732  05DD  3000               	movlw	0
  4733  05DE  00AB               	movwf	___flmul@a+1
  4734  05DF  3000               	movlw	0
  4735  05E0  00AA               	movwf	___flmul@a
  4736  05E1                     l2323:
  4737  05E1  17AC               	bsf	___flmul@a+2,7
  4738  05E2  2DEB               	goto	l2327
  4739  05E3                     l2325:
  4740  05E3  3000               	movlw	0
  4741  05E4  00AD               	movwf	___flmul@a+3
  4742  05E5  3000               	movlw	0
  4743  05E6  00AC               	movwf	___flmul@a+2
  4744  05E7  3000               	movlw	0
  4745  05E8  00AB               	movwf	___flmul@a+1
  4746  05E9  3000               	movlw	0
  4747  05EA  00AA               	movwf	___flmul@a
  4748  05EB                     l2327:
  4749  05EB  0838               	movf	___flmul@aexp,w
  4750  05EC  1903               	btfsc	3,2
  4751  05ED  2DEF               	goto	u2511
  4752  05EE  2DF0               	goto	u2510
  4753  05EF                     u2511:
  4754  05EF  2DF5               	goto	l2331
  4755  05F0                     u2510:
  4756  05F0                     l2329:
  4757  05F0  0839               	movf	___flmul@bexp,w
  4758  05F1  1D03               	btfss	3,2
  4759  05F2  2DF4               	goto	u2521
  4760  05F3  2DF5               	goto	u2520
  4761  05F4                     u2521:
  4762  05F4  2DFE               	goto	l2335
  4763  05F5                     u2520:
  4764  05F5                     l2331:
  4765  05F5  3000               	movlw	0
  4766  05F6  00A9               	movwf	?___flmul+3
  4767  05F7  3000               	movlw	0
  4768  05F8  00A8               	movwf	?___flmul+2
  4769  05F9  3000               	movlw	0
  4770  05FA  00A7               	movwf	?___flmul+1
  4771  05FB  3000               	movlw	0
  4772  05FC  00A6               	movwf	?___flmul
  4773  05FD  2FEC               	goto	l703
  4774  05FE                     l2335:
  4775  05FE  0826               	movf	___flmul@b,w
  4776  05FF  00AE               	movwf	??___flmul
  4777  0600  082E               	movf	??___flmul,w
  4778  0601  00F0               	movwf	__Umul8_16@multiplicand
  4779  0602  082C               	movf	___flmul@a+2,w
  4780  0603  318A  22F5  3185   	fcall	__Umul8_16
  4781  0606  0871               	movf	?__Umul8_16+1,w
  4782  0607  0140               	movlb	0	; select bank0
  4783  0608  00BF               	movwf	___flmul@temp+1
  4784  0609  0870               	movf	?__Umul8_16,w
  4785  060A  00BE               	movwf	___flmul@temp
  4786  060B                     l2337:
  4787  060B  083E               	movf	___flmul@temp,w
  4788  060C  00AE               	movwf	??___flmul
  4789  060D  01AF               	clrf	??___flmul+1
  4790  060E  01B0               	clrf	??___flmul+2
  4791  060F  01B1               	clrf	??___flmul+3
  4792  0610  0831               	movf	??___flmul+3,w
  4793  0611  00B7               	movwf	___flmul@grs+3
  4794  0612  0830               	movf	??___flmul+2,w
  4795  0613  00B6               	movwf	___flmul@grs+2
  4796  0614  082F               	movf	??___flmul+1,w
  4797  0615  00B5               	movwf	___flmul@grs+1
  4798  0616  082E               	movf	??___flmul,w
  4799  0617  00B4               	movwf	___flmul@grs
  4800  0618                     l2339:
  4801  0618  083F               	movf	___flmul@temp+1,w
  4802  0619  00AE               	movwf	??___flmul
  4803  061A  01AF               	clrf	??___flmul+1
  4804  061B  01B0               	clrf	??___flmul+2
  4805  061C  01B1               	clrf	??___flmul+3
  4806  061D  0831               	movf	??___flmul+3,w
  4807  061E  00BD               	movwf	___flmul@prod+3
  4808  061F  0830               	movf	??___flmul+2,w
  4809  0620  00BC               	movwf	___flmul@prod+2
  4810  0621  082F               	movf	??___flmul+1,w
  4811  0622  00BB               	movwf	___flmul@prod+1
  4812  0623  082E               	movf	??___flmul,w
  4813  0624  00BA               	movwf	___flmul@prod
  4814  0625  0827               	movf	___flmul@b+1,w
  4815  0626  00AE               	movwf	??___flmul
  4816  0627  082E               	movf	??___flmul,w
  4817  0628  00F0               	movwf	__Umul8_16@multiplicand
  4818  0629  082B               	movf	___flmul@a+1,w
  4819  062A  318A  22F5  3185   	fcall	__Umul8_16
  4820  062D  0871               	movf	?__Umul8_16+1,w
  4821  062E  0140               	movlb	0	; select bank0
  4822  062F  00BF               	movwf	___flmul@temp+1
  4823  0630  0870               	movf	?__Umul8_16,w
  4824  0631  00BE               	movwf	___flmul@temp
  4825  0632                     l2341:
  4826  0632  083E               	movf	___flmul@temp,w
  4827  0633  00AE               	movwf	??___flmul
  4828  0634  01AF               	clrf	??___flmul+1
  4829  0635  01B0               	clrf	??___flmul+2
  4830  0636  01B1               	clrf	??___flmul+3
  4831  0637  082E               	movf	??___flmul,w
  4832  0638  07B4               	addwf	___flmul@grs,f
  4833  0639  082F               	movf	??___flmul+1,w
  4834  063A  3DB5               	addwfc	___flmul@grs+1,f
  4835  063B  0830               	movf	??___flmul+2,w
  4836  063C  3DB6               	addwfc	___flmul@grs+2,f
  4837  063D  0831               	movf	??___flmul+3,w
  4838  063E  3DB7               	addwfc	___flmul@grs+3,f
  4839  063F                     l2343:
  4840  063F  083F               	movf	___flmul@temp+1,w
  4841  0640  00AE               	movwf	??___flmul
  4842  0641  01AF               	clrf	??___flmul+1
  4843  0642  01B0               	clrf	??___flmul+2
  4844  0643  01B1               	clrf	??___flmul+3
  4845  0644  082E               	movf	??___flmul,w
  4846  0645  07BA               	addwf	___flmul@prod,f
  4847  0646  082F               	movf	??___flmul+1,w
  4848  0647  3DBB               	addwfc	___flmul@prod+1,f
  4849  0648  0830               	movf	??___flmul+2,w
  4850  0649  3DBC               	addwfc	___flmul@prod+2,f
  4851  064A  0831               	movf	??___flmul+3,w
  4852  064B  3DBD               	addwfc	___flmul@prod+3,f
  4853  064C  0828               	movf	___flmul@b+2,w
  4854  064D  00AE               	movwf	??___flmul
  4855  064E  082E               	movf	??___flmul,w
  4856  064F  00F0               	movwf	__Umul8_16@multiplicand
  4857  0650  082A               	movf	___flmul@a,w
  4858  0651  318A  22F5  3185   	fcall	__Umul8_16
  4859  0654  0871               	movf	?__Umul8_16+1,w
  4860  0655  0140               	movlb	0	; select bank0
  4861  0656  00BF               	movwf	___flmul@temp+1
  4862  0657  0870               	movf	?__Umul8_16,w
  4863  0658  00BE               	movwf	___flmul@temp
  4864  0659                     l2345:
  4865  0659  083E               	movf	___flmul@temp,w
  4866  065A  00AE               	movwf	??___flmul
  4867  065B  01AF               	clrf	??___flmul+1
  4868  065C  01B0               	clrf	??___flmul+2
  4869  065D  01B1               	clrf	??___flmul+3
  4870  065E  082E               	movf	??___flmul,w
  4871  065F  07B4               	addwf	___flmul@grs,f
  4872  0660  082F               	movf	??___flmul+1,w
  4873  0661  3DB5               	addwfc	___flmul@grs+1,f
  4874  0662  0830               	movf	??___flmul+2,w
  4875  0663  3DB6               	addwfc	___flmul@grs+2,f
  4876  0664  0831               	movf	??___flmul+3,w
  4877  0665  3DB7               	addwfc	___flmul@grs+3,f
  4878  0666                     l2347:
  4879  0666  083F               	movf	___flmul@temp+1,w
  4880  0667  00AE               	movwf	??___flmul
  4881  0668  01AF               	clrf	??___flmul+1
  4882  0669  01B0               	clrf	??___flmul+2
  4883  066A  01B1               	clrf	??___flmul+3
  4884  066B  082E               	movf	??___flmul,w
  4885  066C  07BA               	addwf	___flmul@prod,f
  4886  066D  082F               	movf	??___flmul+1,w
  4887  066E  3DBB               	addwfc	___flmul@prod+1,f
  4888  066F  0830               	movf	??___flmul+2,w
  4889  0670  3DBC               	addwfc	___flmul@prod+2,f
  4890  0671  0831               	movf	??___flmul+3,w
  4891  0672  3DBD               	addwfc	___flmul@prod+3,f
  4892  0673                     l2349:
  4893  0673  3008               	movlw	8
  4894  0674                     u2535:
  4895  0674  35B4               	lslf	___flmul@grs,f
  4896  0675  0DB5               	rlf	___flmul@grs+1,f
  4897  0676  0DB6               	rlf	___flmul@grs+2,f
  4898  0677  0DB7               	rlf	___flmul@grs+3,f
  4899  0678  0B89               	decfsz	9,f
  4900  0679  2E74               	goto	u2535
  4901  067A                     l2351:
  4902  067A  0827               	movf	___flmul@b+1,w
  4903  067B  00AE               	movwf	??___flmul
  4904  067C  082E               	movf	??___flmul,w
  4905  067D  00F0               	movwf	__Umul8_16@multiplicand
  4906  067E  082A               	movf	___flmul@a,w
  4907  067F  318A  22F5  3185   	fcall	__Umul8_16
  4908  0682  0871               	movf	?__Umul8_16+1,w
  4909  0683  0140               	movlb	0	; select bank0
  4910  0684  00BF               	movwf	___flmul@temp+1
  4911  0685  0870               	movf	?__Umul8_16,w
  4912  0686  00BE               	movwf	___flmul@temp
  4913  0687                     l2353:
  4914  0687  083E               	movf	___flmul@temp,w
  4915  0688  07B4               	addwf	___flmul@grs,f
  4916  0689  083F               	movf	___flmul@temp+1,w
  4917  068A  3DB5               	addwfc	___flmul@grs+1,f
  4918  068B  3000               	movlw	0
  4919  068C  3DB6               	addwfc	___flmul@grs+2,f
  4920  068D  3DB7               	addwfc	___flmul@grs+3,f
  4921  068E                     l2355:
  4922  068E  0826               	movf	___flmul@b,w
  4923  068F  00AE               	movwf	??___flmul
  4924  0690  082E               	movf	??___flmul,w
  4925  0691  00F0               	movwf	__Umul8_16@multiplicand
  4926  0692  082B               	movf	___flmul@a+1,w
  4927  0693  318A  22F5  3185   	fcall	__Umul8_16
  4928  0696  0871               	movf	?__Umul8_16+1,w
  4929  0697  0140               	movlb	0	; select bank0
  4930  0698  00BF               	movwf	___flmul@temp+1
  4931  0699  0870               	movf	?__Umul8_16,w
  4932  069A  00BE               	movwf	___flmul@temp
  4933  069B                     l2357:
  4934  069B  083E               	movf	___flmul@temp,w
  4935  069C  07B4               	addwf	___flmul@grs,f
  4936  069D  083F               	movf	___flmul@temp+1,w
  4937  069E  3DB5               	addwfc	___flmul@grs+1,f
  4938  069F  3000               	movlw	0
  4939  06A0  3DB6               	addwfc	___flmul@grs+2,f
  4940  06A1  3DB7               	addwfc	___flmul@grs+3,f
  4941  06A2                     l2359:
  4942  06A2  3008               	movlw	8
  4943  06A3                     u2545:
  4944  06A3  35B4               	lslf	___flmul@grs,f
  4945  06A4  0DB5               	rlf	___flmul@grs+1,f
  4946  06A5  0DB6               	rlf	___flmul@grs+2,f
  4947  06A6  0DB7               	rlf	___flmul@grs+3,f
  4948  06A7  0B89               	decfsz	9,f
  4949  06A8  2EA3               	goto	u2545
  4950  06A9  0826               	movf	___flmul@b,w
  4951  06AA  00AE               	movwf	??___flmul
  4952  06AB  082E               	movf	??___flmul,w
  4953  06AC  00F0               	movwf	__Umul8_16@multiplicand
  4954  06AD  082A               	movf	___flmul@a,w
  4955  06AE  318A  22F5  3185   	fcall	__Umul8_16
  4956  06B1  0871               	movf	?__Umul8_16+1,w
  4957  06B2  0140               	movlb	0	; select bank0
  4958  06B3  00BF               	movwf	___flmul@temp+1
  4959  06B4  0870               	movf	?__Umul8_16,w
  4960  06B5  00BE               	movwf	___flmul@temp
  4961  06B6                     l2361:
  4962  06B6  083E               	movf	___flmul@temp,w
  4963  06B7  07B4               	addwf	___flmul@grs,f
  4964  06B8  083F               	movf	___flmul@temp+1,w
  4965  06B9  3DB5               	addwfc	___flmul@grs+1,f
  4966  06BA  3000               	movlw	0
  4967  06BB  3DB6               	addwfc	___flmul@grs+2,f
  4968  06BC  3DB7               	addwfc	___flmul@grs+3,f
  4969  06BD                     l2363:
  4970  06BD  0827               	movf	___flmul@b+1,w
  4971  06BE  00AE               	movwf	??___flmul
  4972  06BF  082E               	movf	??___flmul,w
  4973  06C0  00F0               	movwf	__Umul8_16@multiplicand
  4974  06C1  082C               	movf	___flmul@a+2,w
  4975  06C2  318A  22F5  3185   	fcall	__Umul8_16
  4976  06C5  0871               	movf	?__Umul8_16+1,w
  4977  06C6  0140               	movlb	0	; select bank0
  4978  06C7  00BF               	movwf	___flmul@temp+1
  4979  06C8  0870               	movf	?__Umul8_16,w
  4980  06C9  00BE               	movwf	___flmul@temp
  4981  06CA  083E               	movf	___flmul@temp,w
  4982  06CB  07BA               	addwf	___flmul@prod,f
  4983  06CC  083F               	movf	___flmul@temp+1,w
  4984  06CD  3DBB               	addwfc	___flmul@prod+1,f
  4985  06CE  3000               	movlw	0
  4986  06CF  3DBC               	addwfc	___flmul@prod+2,f
  4987  06D0  3DBD               	addwfc	___flmul@prod+3,f
  4988  06D1                     l2365:
  4989  06D1  0828               	movf	___flmul@b+2,w
  4990  06D2  00AE               	movwf	??___flmul
  4991  06D3  082E               	movf	??___flmul,w
  4992  06D4  00F0               	movwf	__Umul8_16@multiplicand
  4993  06D5  082B               	movf	___flmul@a+1,w
  4994  06D6  318A  22F5  3185   	fcall	__Umul8_16
  4995  06D9  0871               	movf	?__Umul8_16+1,w
  4996  06DA  0140               	movlb	0	; select bank0
  4997  06DB  00BF               	movwf	___flmul@temp+1
  4998  06DC  0870               	movf	?__Umul8_16,w
  4999  06DD  00BE               	movwf	___flmul@temp
  5000  06DE                     l2367:
  5001  06DE  083E               	movf	___flmul@temp,w
  5002  06DF  07BA               	addwf	___flmul@prod,f
  5003  06E0  083F               	movf	___flmul@temp+1,w
  5004  06E1  3DBB               	addwfc	___flmul@prod+1,f
  5005  06E2  3000               	movlw	0
  5006  06E3  3DBC               	addwfc	___flmul@prod+2,f
  5007  06E4  3DBD               	addwfc	___flmul@prod+3,f
  5008  06E5  0828               	movf	___flmul@b+2,w
  5009  06E6  00AE               	movwf	??___flmul
  5010  06E7  082E               	movf	??___flmul,w
  5011  06E8  00F0               	movwf	__Umul8_16@multiplicand
  5012  06E9  082C               	movf	___flmul@a+2,w
  5013  06EA  318A  22F5  3185   	fcall	__Umul8_16
  5014  06ED  0871               	movf	?__Umul8_16+1,w
  5015  06EE  0140               	movlb	0	; select bank0
  5016  06EF  00BF               	movwf	___flmul@temp+1
  5017  06F0  0870               	movf	?__Umul8_16,w
  5018  06F1  00BE               	movwf	___flmul@temp
  5019  06F2                     l2369:
  5020  06F2  083E               	movf	___flmul@temp,w
  5021  06F3  00AE               	movwf	??___flmul
  5022  06F4  083F               	movf	___flmul@temp+1,w
  5023  06F5  00AF               	movwf	??___flmul+1
  5024  06F6  01B0               	clrf	??___flmul+2
  5025  06F7  01B1               	clrf	??___flmul+3
  5026  06F8  3008               	movlw	8
  5027  06F9                     u2555:
  5028  06F9  35AE               	lslf	??___flmul,f
  5029  06FA  0DAF               	rlf	??___flmul+1,f
  5030  06FB  0DB0               	rlf	??___flmul+2,f
  5031  06FC  0DB1               	rlf	??___flmul+3,f
  5032  06FD                     u2550:
  5033  06FD  0B89               	decfsz	9,f
  5034  06FE  2EF9               	goto	u2555
  5035  06FF  082E               	movf	??___flmul,w
  5036  0700  07BA               	addwf	___flmul@prod,f
  5037  0701  082F               	movf	??___flmul+1,w
  5038  0702  3DBB               	addwfc	___flmul@prod+1,f
  5039  0703  0830               	movf	??___flmul+2,w
  5040  0704  3DBC               	addwfc	___flmul@prod+2,f
  5041  0705  0831               	movf	??___flmul+3,w
  5042  0706  3DBD               	addwfc	___flmul@prod+3,f
  5043  0707                     l2371:
  5044  0707  0834               	movf	___flmul@grs,w
  5045  0708  00AE               	movwf	??___flmul
  5046  0709  0835               	movf	___flmul@grs+1,w
  5047  070A  00AF               	movwf	??___flmul+1
  5048  070B  0836               	movf	___flmul@grs+2,w
  5049  070C  00B0               	movwf	??___flmul+2
  5050  070D  0837               	movf	___flmul@grs+3,w
  5051  070E  00B1               	movwf	??___flmul+3
  5052  070F  3018               	movlw	24
  5053  0710                     u2565:
  5054  0710  36B1               	lsrf	??___flmul+3,f
  5055  0711  0CB0               	rrf	??___flmul+2,f
  5056  0712  0CAF               	rrf	??___flmul+1,f
  5057  0713  0CAE               	rrf	??___flmul,f
  5058  0714                     u2560:
  5059  0714  0B89               	decfsz	9,f
  5060  0715  2F10               	goto	u2565
  5061  0716  082E               	movf	??___flmul,w
  5062  0717  07BA               	addwf	___flmul@prod,f
  5063  0718  082F               	movf	??___flmul+1,w
  5064  0719  3DBB               	addwfc	___flmul@prod+1,f
  5065  071A  0830               	movf	??___flmul+2,w
  5066  071B  3DBC               	addwfc	___flmul@prod+2,f
  5067  071C  0831               	movf	??___flmul+3,w
  5068  071D  3DBD               	addwfc	___flmul@prod+3,f
  5069  071E                     l2373:
  5070  071E  3008               	movlw	8
  5071  071F                     u2575:
  5072  071F  35B4               	lslf	___flmul@grs,f
  5073  0720  0DB5               	rlf	___flmul@grs+1,f
  5074  0721  0DB6               	rlf	___flmul@grs+2,f
  5075  0722  0DB7               	rlf	___flmul@grs+3,f
  5076  0723  0B89               	decfsz	9,f
  5077  0724  2F1F               	goto	u2575
  5078  0725                     l2375:
  5079  0725  0839               	movf	___flmul@bexp,w
  5080  0726  0738               	addwf	___flmul@aexp,w
  5081  0727  00AE               	movwf	??___flmul
  5082  0728  01AF               	clrf	??___flmul+1
  5083  0729  0DAF               	rlf	??___flmul+1,f
  5084  072A  082E               	movf	??___flmul,w
  5085  072B  3E82               	addlw	130
  5086  072C  00BE               	movwf	___flmul@temp
  5087  072D  30FF               	movlw	255
  5088  072E  3D2F               	addwfc	??___flmul+1,w
  5089  072F  00BF               	movwf	___flmul@temp+1
  5090  0730  2F48               	goto	l2387
  5091  0731                     l2377:
  5092  0731  3001               	movlw	1
  5093  0732                     u2585:
  5094  0732  35BA               	lslf	___flmul@prod,f
  5095  0733  0DBB               	rlf	___flmul@prod+1,f
  5096  0734  0DBC               	rlf	___flmul@prod+2,f
  5097  0735  0DBD               	rlf	___flmul@prod+3,f
  5098  0736  0B89               	decfsz	9,f
  5099  0737  2F32               	goto	u2585
  5100  0738                     l2379:
  5101  0738  1FB7               	btfss	___flmul@grs+3,7
  5102  0739  2F3B               	goto	u2591
  5103  073A  2F3C               	goto	u2590
  5104  073B                     u2591:
  5105  073B  2F3D               	goto	l2383
  5106  073C                     u2590:
  5107  073C                     l2381:
  5108  073C  143A               	bsf	___flmul@prod,0
  5109  073D                     l2383:
  5110  073D  3001               	movlw	1
  5111  073E                     u2605:
  5112  073E  35B4               	lslf	___flmul@grs,f
  5113  073F  0DB5               	rlf	___flmul@grs+1,f
  5114  0740  0DB6               	rlf	___flmul@grs+2,f
  5115  0741  0DB7               	rlf	___flmul@grs+3,f
  5116  0742  0B89               	decfsz	9,f
  5117  0743  2F3E               	goto	u2605
  5118  0744                     l2385:
  5119  0744  30FF               	movlw	255
  5120  0745  07BE               	addwf	___flmul@temp,f
  5121  0746  30FF               	movlw	255
  5122  0747  3DBF               	addwfc	___flmul@temp+1,f
  5123  0748                     l2387:
  5124  0748  1FBC               	btfss	___flmul@prod+2,7
  5125  0749  2F4B               	goto	u2611
  5126  074A  2F4C               	goto	u2610
  5127  074B                     u2611:
  5128  074B  2F31               	goto	l2377
  5129  074C                     u2610:
  5130  074C                     l2389:
  5131  074C  01B8               	clrf	___flmul@aexp
  5132  074D                     l2391:
  5133  074D  1FB7               	btfss	___flmul@grs+3,7
  5134  074E  2F50               	goto	u2621
  5135  074F  2F51               	goto	u2620
  5136  0750                     u2621:
  5137  0750  2F6D               	goto	l2399
  5138  0751                     u2620:
  5139  0751                     l2393:
  5140  0751  30FF               	movlw	255
  5141  0752  0534               	andwf	___flmul@grs,w
  5142  0753  00AE               	movwf	??___flmul
  5143  0754  30FF               	movlw	255
  5144  0755  0535               	andwf	___flmul@grs+1,w
  5145  0756  00AF               	movwf	??___flmul+1
  5146  0757  30FF               	movlw	255
  5147  0758  0536               	andwf	___flmul@grs+2,w
  5148  0759  00B0               	movwf	??___flmul+2
  5149  075A  307F               	movlw	127
  5150  075B  0537               	andwf	___flmul@grs+3,w
  5151  075C  00B1               	movwf	??___flmul+3
  5152  075D  0831               	movf	??___flmul+3,w
  5153  075E  0430               	iorwf	??___flmul+2,w
  5154  075F  042F               	iorwf	??___flmul+1,w
  5155  0760  042E               	iorwf	??___flmul,w
  5156  0761  1903               	skipnz
  5157  0762  2F64               	goto	u2631
  5158  0763  2F65               	goto	u2630
  5159  0764                     u2631:
  5160  0764  2F68               	goto	l709
  5161  0765                     u2630:
  5162  0765                     l2395:
  5163  0765  01B8               	clrf	___flmul@aexp
  5164  0766  0AB8               	incf	___flmul@aexp,f
  5165  0767  2F6D               	goto	l2399
  5166  0768                     l709:
  5167  0768  1C3A               	btfss	___flmul@prod,0
  5168  0769  2F6B               	goto	u2641
  5169  076A  2F6C               	goto	u2640
  5170  076B                     u2641:
  5171  076B  2F6D               	goto	l2399
  5172  076C                     u2640:
  5173  076C  2F65               	goto	l2395
  5174  076D                     l2399:
  5175  076D  0838               	movf	___flmul@aexp,w
  5176  076E  1903               	btfsc	3,2
  5177  076F  2F71               	goto	u2651
  5178  0770  2F72               	goto	u2650
  5179  0771                     u2651:
  5180  0771  2F9A               	goto	l2409
  5181  0772                     u2650:
  5182  0772                     l2401:
  5183  0772  3001               	movlw	1
  5184  0773  07BA               	addwf	___flmul@prod,f
  5185  0774  3000               	movlw	0
  5186  0775  3DBB               	addwfc	___flmul@prod+1,f
  5187  0776  3000               	movlw	0
  5188  0777  3DBC               	addwfc	___flmul@prod+2,f
  5189  0778  3000               	movlw	0
  5190  0779  3DBD               	addwfc	___flmul@prod+3,f
  5191  077A                     l2403:
  5192  077A  1C3D               	btfss	___flmul@prod+3,0
  5193  077B  2F7D               	goto	u2661
  5194  077C  2F7E               	goto	u2660
  5195  077D                     u2661:
  5196  077D  2F9A               	goto	l2409
  5197  077E                     u2660:
  5198  077E                     l2405:
  5199  077E  083A               	movf	___flmul@prod,w
  5200  077F  00AE               	movwf	??___flmul
  5201  0780  083B               	movf	___flmul@prod+1,w
  5202  0781  00AF               	movwf	??___flmul+1
  5203  0782  083C               	movf	___flmul@prod+2,w
  5204  0783  00B0               	movwf	??___flmul+2
  5205  0784  083D               	movf	___flmul@prod+3,w
  5206  0785  00B1               	movwf	??___flmul+3
  5207  0786  3001               	movlw	1
  5208  0787  00B2               	movwf	??___flmul+4
  5209  0788                     u2675:
  5210  0788  37B1               	asrf	??___flmul+3,f
  5211  0789  0CB0               	rrf	??___flmul+2,f
  5212  078A  0CAF               	rrf	??___flmul+1,f
  5213  078B  0CAE               	rrf	??___flmul,f
  5214  078C                     u2670:
  5215  078C  0BB2               	decfsz	??___flmul+4,f
  5216  078D  2F88               	goto	u2675
  5217  078E  0831               	movf	??___flmul+3,w
  5218  078F  00BD               	movwf	___flmul@prod+3
  5219  0790  0830               	movf	??___flmul+2,w
  5220  0791  00BC               	movwf	___flmul@prod+2
  5221  0792  082F               	movf	??___flmul+1,w
  5222  0793  00BB               	movwf	___flmul@prod+1
  5223  0794  082E               	movf	??___flmul,w
  5224  0795  00BA               	movwf	___flmul@prod
  5225  0796                     l2407:
  5226  0796  3001               	movlw	1
  5227  0797  07BE               	addwf	___flmul@temp,f
  5228  0798  3000               	movlw	0
  5229  0799  3DBF               	addwfc	___flmul@temp+1,f
  5230  079A                     l2409:
  5231  079A  083F               	movf	___flmul@temp+1,w
  5232  079B  3A80               	xorlw	128
  5233  079C  00AE               	movwf	??___flmul
  5234  079D  3080               	movlw	128
  5235  079E  022E               	subwf	??___flmul,w
  5236  079F  1D03               	skipz
  5237  07A0  2FA3               	goto	u2685
  5238  07A1  30FF               	movlw	255
  5239  07A2  023E               	subwf	___flmul@temp,w
  5240  07A3                     u2685:
  5241  07A3  1C03               	skipc
  5242  07A4  2FA6               	goto	u2681
  5243  07A5  2FA7               	goto	u2680
  5244  07A6                     u2681:
  5245  07A6  2FB1               	goto	l2413
  5246  07A7                     u2680:
  5247  07A7                     l2411:
  5248  07A7  307F               	movlw	127
  5249  07A8  0140               	movlb	0	; select bank0
  5250  07A9  00BD               	movwf	___flmul@prod+3
  5251  07AA  3080               	movlw	128
  5252  07AB  00BC               	movwf	___flmul@prod+2
  5253  07AC  3000               	movlw	0
  5254  07AD  00BB               	movwf	___flmul@prod+1
  5255  07AE  3000               	movlw	0
  5256  07AF  00BA               	movwf	___flmul@prod
  5257  07B0  2FE0               	goto	l715
  5258  07B1                     l2413:
  5259  07B1  0140               	movlb	0	; select bank0
  5260  07B2  083F               	movf	___flmul@temp+1,w
  5261  07B3  3A80               	xorlw	128
  5262  07B4  00AE               	movwf	??___flmul
  5263  07B5  3080               	movlw	128
  5264  07B6  022E               	subwf	??___flmul,w
  5265  07B7  1D03               	skipz
  5266  07B8  2FBB               	goto	u2695
  5267  07B9  3001               	movlw	1
  5268  07BA  023E               	subwf	___flmul@temp,w
  5269  07BB                     u2695:
  5270  07BB  1803               	skipnc
  5271  07BC  2FBE               	goto	u2691
  5272  07BD  2FBF               	goto	u2690
  5273  07BE                     u2691:
  5274  07BE  2FCA               	goto	l2419
  5275  07BF                     u2690:
  5276  07BF                     l2415:
  5277  07BF  3000               	movlw	0
  5278  07C0  0140               	movlb	0	; select bank0
  5279  07C1  00BD               	movwf	___flmul@prod+3
  5280  07C2  3000               	movlw	0
  5281  07C3  00BC               	movwf	___flmul@prod+2
  5282  07C4  3000               	movlw	0
  5283  07C5  00BB               	movwf	___flmul@prod+1
  5284  07C6  3000               	movlw	0
  5285  07C7  00BA               	movwf	___flmul@prod
  5286  07C8                     l2417:
  5287  07C8  01B3               	clrf	___flmul@sign
  5288  07C9  2FE0               	goto	l715
  5289  07CA                     l2419:
  5290  07CA  0140               	movlb	0	; select bank0
  5291  07CB  083E               	movf	___flmul@temp,w
  5292  07CC  00AE               	movwf	??___flmul
  5293  07CD  082E               	movf	??___flmul,w
  5294  07CE  00B9               	movwf	___flmul@bexp
  5295  07CF  30FF               	movlw	255
  5296  07D0  05BA               	andwf	___flmul@prod,f
  5297  07D1  30FF               	movlw	255
  5298  07D2  05BB               	andwf	___flmul@prod+1,f
  5299  07D3  307F               	movlw	127
  5300  07D4  05BC               	andwf	___flmul@prod+2,f
  5301  07D5  3000               	movlw	0
  5302  07D6  05BD               	andwf	___flmul@prod+3,f
  5303  07D7                     l2421:
  5304  07D7  1C39               	btfss	___flmul@bexp,0
  5305  07D8  2FDA               	goto	u2701
  5306  07D9  2FDB               	goto	u2700
  5307  07DA                     u2701:
  5308  07DA  2FDC               	goto	l2425
  5309  07DB                     u2700:
  5310  07DB                     l2423:
  5311  07DB  17BC               	bsf	___flmul@prod+2,7
  5312  07DC                     l2425:
  5313  07DC  3639               	lsrf	___flmul@bexp,w
  5314  07DD  00AE               	movwf	??___flmul
  5315  07DE  082E               	movf	??___flmul,w
  5316  07DF  00BD               	movwf	___flmul@prod+3
  5317  07E0                     l715:
  5318  07E0  0833               	movf	___flmul@sign,w
  5319  07E1  00AE               	movwf	??___flmul
  5320  07E2  082E               	movf	??___flmul,w
  5321  07E3  04BD               	iorwf	___flmul@prod+3,f
  5322  07E4                     l2427:
  5323  07E4  083D               	movf	___flmul@prod+3,w
  5324  07E5  00A9               	movwf	?___flmul+3
  5325  07E6  083C               	movf	___flmul@prod+2,w
  5326  07E7  00A8               	movwf	?___flmul+2
  5327  07E8  083B               	movf	___flmul@prod+1,w
  5328  07E9  00A7               	movwf	?___flmul+1
  5329  07EA  083A               	movf	___flmul@prod,w
  5330  07EB  00A6               	movwf	?___flmul
  5331  07EC                     l703:
  5332  07EC  0008               	return
  5333  07ED                     __end_of___flmul:
  5334                           
  5335                           	psect	text20
  5336  0AF5                     __ptext20:	
  5337 ;; *************** function __Umul8_16 *****************
  5338 ;; Defined at:
  5339 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;  multiplier      1    wreg     unsigned char 
  5342 ;;  multiplicand    1    0[COMMON] unsigned char 
  5343 ;; Auto vars:     Size  Location     Type
  5344 ;;  multiplier      1    8[COMMON] unsigned char 
  5345 ;;  word_mpld       2    6[COMMON] unsigned int 
  5346 ;;  product         2    4[COMMON] unsigned int 
  5347 ;; Return value:  Size  Location     Type
  5348 ;;                  2    0[COMMON] unsigned int 
  5349 ;; Registers used:
  5350 ;;		wreg, status,2, status,0
  5351 ;; Tracked objects:
  5352 ;;		On entry : 0/0
  5353 ;;		On exit  : 0/0
  5354 ;;		Unchanged: 0/0
  5355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5356 ;;      Params:         2       0       0       0       0       0       0       0
  5357 ;;      Locals:         5       0       0       0       0       0       0       0
  5358 ;;      Temps:          2       0       0       0       0       0       0       0
  5359 ;;      Totals:         9       0       0       0       0       0       0       0
  5360 ;;Total ram usage:        9 bytes
  5361 ;; Hardware stack levels used:    1
  5362 ;; This function calls:
  5363 ;;		Nothing
  5364 ;; This function is called by:
  5365 ;;		___flmul
  5366 ;; This function uses a non-reentrant model
  5367 ;;
  5368                           
  5369                           
  5370                           ;psect for function __Umul8_16
  5371  0AF5                     __Umul8_16:
  5372                           
  5373                           ;incstack = 0
  5374                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5375                           ;__Umul8_16@multiplier stored from wreg
  5376  0AF5  00F8               	movwf	__Umul8_16@multiplier
  5377  0AF6                     l2171:
  5378  0AF6  01F4               	clrf	__Umul8_16@product
  5379  0AF7  01F5               	clrf	__Umul8_16@product+1
  5380  0AF8                     l2173:
  5381  0AF8  0870               	movf	__Umul8_16@multiplicand,w
  5382  0AF9  00F2               	movwf	??__Umul8_16
  5383  0AFA  01F3               	clrf	??__Umul8_16+1
  5384  0AFB  0872               	movf	??__Umul8_16,w
  5385  0AFC  00F6               	movwf	__Umul8_16@word_mpld
  5386  0AFD  0873               	movf	??__Umul8_16+1,w
  5387  0AFE  00F7               	movwf	__Umul8_16@word_mpld+1
  5388  0AFF                     l2175:
  5389  0AFF  1C78               	btfss	__Umul8_16@multiplier,0
  5390  0B00  2B02               	goto	u2231
  5391  0B01  2B03               	goto	u2230
  5392  0B02                     u2231:
  5393  0B02  2B07               	goto	l722
  5394  0B03                     u2230:
  5395  0B03                     l2177:
  5396  0B03  0876               	movf	__Umul8_16@word_mpld,w
  5397  0B04  07F4               	addwf	__Umul8_16@product,f
  5398  0B05  0877               	movf	__Umul8_16@word_mpld+1,w
  5399  0B06  3DF5               	addwfc	__Umul8_16@product+1,f
  5400  0B07                     l722:
  5401  0B07  3001               	movlw	1
  5402  0B08                     u2245:
  5403  0B08  35F6               	lslf	__Umul8_16@word_mpld,f
  5404  0B09  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5405  0B0A  0B89               	decfsz	9,f
  5406  0B0B  2B08               	goto	u2245
  5407  0B0C  1003               	clrc
  5408  0B0D  0CF8               	rrf	__Umul8_16@multiplier,f
  5409  0B0E                     l2179:
  5410  0B0E  0878               	movf	__Umul8_16@multiplier,w
  5411  0B0F  1D03               	btfss	3,2
  5412  0B10  2B12               	goto	u2251
  5413  0B11  2B13               	goto	u2250
  5414  0B12                     u2251:
  5415  0B12  2AFF               	goto	l2175
  5416  0B13                     u2250:
  5417  0B13                     l2181:
  5418  0B13  0875               	movf	__Umul8_16@product+1,w
  5419  0B14  00F1               	movwf	?__Umul8_16+1
  5420  0B15  0874               	movf	__Umul8_16@product,w
  5421  0B16  00F0               	movwf	?__Umul8_16
  5422  0B17                     l724:
  5423  0B17  0008               	return
  5424  0B18                     __end_of__Umul8_16:
  5425                           
  5426                           	psect	text21
  5427  035E                     __ptext21:	
  5428 ;; *************** function ___fladd *****************
  5429 ;; Defined at:
  5430 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  5431 ;; Parameters:    Size  Location     Type
  5432 ;;  b               4   32[BANK0 ] unsigned int 
  5433 ;;  a               4   36[BANK0 ] unsigned int 
  5434 ;; Auto vars:     Size  Location     Type
  5435 ;;  grs             1   51[BANK0 ] unsigned char 
  5436 ;;  bexp            1   50[BANK0 ] unsigned char 
  5437 ;;  aexp            1   49[BANK0 ] unsigned char 
  5438 ;;  signs           1   48[BANK0 ] unsigned char 
  5439 ;; Return value:  Size  Location     Type
  5440 ;;                  4   32[BANK0 ] unsigned char 
  5441 ;; Registers used:
  5442 ;;		wreg, status,2, status,0
  5443 ;; Tracked objects:
  5444 ;;		On entry : 0/0
  5445 ;;		On exit  : 0/0
  5446 ;;		Unchanged: 0/0
  5447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5448 ;;      Params:         0       8       0       0       0       0       0       0
  5449 ;;      Locals:         0       4       0       0       0       0       0       0
  5450 ;;      Temps:          0       8       0       0       0       0       0       0
  5451 ;;      Totals:         0      20       0       0       0       0       0       0
  5452 ;;Total ram usage:       20 bytes
  5453 ;; Hardware stack levels used:    1
  5454 ;; This function calls:
  5455 ;;		Nothing
  5456 ;; This function is called by:
  5457 ;;		_LeerSensores
  5458 ;;		___flsub
  5459 ;; This function uses a non-reentrant model
  5460 ;;
  5461                           
  5462                           
  5463                           ;psect for function ___fladd
  5464  035E                     ___fladd:
  5465  035E                     l1977:	
  5466                           ;incstack = 0
  5467                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  5468                           
  5469  035E  0140               	movlb	0	; select bank0
  5470  035F  0843               	movf	___fladd@b+3,w
  5471  0360  3980               	andlw	128
  5472  0361  00C8               	movwf	??___fladd
  5473  0362  0848               	movf	??___fladd,w
  5474  0363  00D0               	movwf	___fladd@signs
  5475  0364                     l1979:
  5476  0364  3543               	lslf	___fladd@b+3,w
  5477  0365  00C8               	movwf	??___fladd
  5478  0366  0848               	movf	??___fladd,w
  5479  0367  00D2               	movwf	___fladd@bexp
  5480  0368                     l1981:
  5481  0368  1FC2               	btfss	___fladd@b+2,7
  5482  0369  2B6B               	goto	u1801
  5483  036A  2B6C               	goto	u1800
  5484  036B                     u1801:
  5485  036B  2B6D               	goto	l1985
  5486  036C                     u1800:
  5487  036C                     l1983:
  5488  036C  1452               	bsf	___fladd@bexp,0
  5489  036D                     l1985:
  5490  036D  0852               	movf	___fladd@bexp,w
  5491  036E  1903               	btfsc	3,2
  5492  036F  2B71               	goto	u1811
  5493  0370  2B72               	goto	u1810
  5494  0371                     u1811:
  5495  0371  2B82               	goto	l1995
  5496  0372                     u1810:
  5497  0372                     l1987:
  5498  0372  0A52               	incf	___fladd@bexp,w
  5499  0373  1D03               	btfss	3,2
  5500  0374  2B76               	goto	u1821
  5501  0375  2B77               	goto	u1820
  5502  0376                     u1821:
  5503  0376  2B7F               	goto	l1991
  5504  0377                     u1820:
  5505  0377                     l1989:
  5506  0377  3000               	movlw	0
  5507  0378  00C3               	movwf	___fladd@b+3
  5508  0379  3000               	movlw	0
  5509  037A  00C2               	movwf	___fladd@b+2
  5510  037B  3000               	movlw	0
  5511  037C  00C1               	movwf	___fladd@b+1
  5512  037D  3000               	movlw	0
  5513  037E  00C0               	movwf	___fladd@b
  5514  037F                     l1991:
  5515  037F  17C2               	bsf	___fladd@b+2,7
  5516  0380                     l1993:
  5517  0380  01C3               	clrf	___fladd@b+3
  5518  0381  2B8A               	goto	l1997
  5519  0382                     l1995:
  5520  0382  3000               	movlw	0
  5521  0383  00C3               	movwf	___fladd@b+3
  5522  0384  3000               	movlw	0
  5523  0385  00C2               	movwf	___fladd@b+2
  5524  0386  3000               	movlw	0
  5525  0387  00C1               	movwf	___fladd@b+1
  5526  0388  3000               	movlw	0
  5527  0389  00C0               	movwf	___fladd@b
  5528  038A                     l1997:
  5529  038A  0847               	movf	___fladd@a+3,w
  5530  038B  3980               	andlw	128
  5531  038C  00C8               	movwf	??___fladd
  5532  038D  0848               	movf	??___fladd,w
  5533  038E  00D1               	movwf	___fladd@aexp
  5534  038F                     l1999:
  5535  038F  0851               	movf	___fladd@aexp,w
  5536  0390  0650               	xorwf	___fladd@signs,w
  5537  0391  1903               	skipnz
  5538  0392  2B94               	goto	u1831
  5539  0393  2B95               	goto	u1830
  5540  0394                     u1831:
  5541  0394  2B96               	goto	l2003
  5542  0395                     u1830:
  5543  0395                     l2001:
  5544  0395  1750               	bsf	___fladd@signs,6
  5545  0396                     l2003:
  5546  0396  3547               	lslf	___fladd@a+3,w
  5547  0397  00C8               	movwf	??___fladd
  5548  0398  0848               	movf	??___fladd,w
  5549  0399  00D1               	movwf	___fladd@aexp
  5550  039A                     l2005:
  5551  039A  1FC6               	btfss	___fladd@a+2,7
  5552  039B  2B9D               	goto	u1841
  5553  039C  2B9E               	goto	u1840
  5554  039D                     u1841:
  5555  039D  2B9F               	goto	l2009
  5556  039E                     u1840:
  5557  039E                     l2007:
  5558  039E  1451               	bsf	___fladd@aexp,0
  5559  039F                     l2009:
  5560  039F  0851               	movf	___fladd@aexp,w
  5561  03A0  1903               	btfsc	3,2
  5562  03A1  2BA3               	goto	u1851
  5563  03A2  2BA4               	goto	u1850
  5564  03A3                     u1851:
  5565  03A3  2BB4               	goto	l2019
  5566  03A4                     u1850:
  5567  03A4                     l2011:
  5568  03A4  0A51               	incf	___fladd@aexp,w
  5569  03A5  1D03               	btfss	3,2
  5570  03A6  2BA8               	goto	u1861
  5571  03A7  2BA9               	goto	u1860
  5572  03A8                     u1861:
  5573  03A8  2BB1               	goto	l2015
  5574  03A9                     u1860:
  5575  03A9                     l2013:
  5576  03A9  3000               	movlw	0
  5577  03AA  00C7               	movwf	___fladd@a+3
  5578  03AB  3000               	movlw	0
  5579  03AC  00C6               	movwf	___fladd@a+2
  5580  03AD  3000               	movlw	0
  5581  03AE  00C5               	movwf	___fladd@a+1
  5582  03AF  3000               	movlw	0
  5583  03B0  00C4               	movwf	___fladd@a
  5584  03B1                     l2015:
  5585  03B1  17C6               	bsf	___fladd@a+2,7
  5586  03B2                     l2017:
  5587  03B2  01C7               	clrf	___fladd@a+3
  5588  03B3  2BBC               	goto	l607
  5589  03B4                     l2019:
  5590  03B4  3000               	movlw	0
  5591  03B5  00C7               	movwf	___fladd@a+3
  5592  03B6  3000               	movlw	0
  5593  03B7  00C6               	movwf	___fladd@a+2
  5594  03B8  3000               	movlw	0
  5595  03B9  00C5               	movwf	___fladd@a+1
  5596  03BA  3000               	movlw	0
  5597  03BB  00C4               	movwf	___fladd@a
  5598  03BC                     l607:
  5599  03BC  0852               	movf	___fladd@bexp,w
  5600  03BD  0251               	subwf	___fladd@aexp,w
  5601  03BE  1803               	skipnc
  5602  03BF  2BC1               	goto	u1871
  5603  03C0  2BC2               	goto	u1870
  5604  03C1                     u1871:
  5605  03C1  2C06               	goto	l2055
  5606  03C2                     u1870:
  5607  03C2                     l2021:
  5608  03C2  1F50               	btfss	___fladd@signs,6
  5609  03C3  2BC5               	goto	u1881
  5610  03C4  2BC6               	goto	u1880
  5611  03C5                     u1881:
  5612  03C5  2BCA               	goto	l2025
  5613  03C6                     u1880:
  5614  03C6                     l2023:
  5615  03C6  3080               	movlw	128
  5616  03C7  00C8               	movwf	??___fladd
  5617  03C8  0848               	movf	??___fladd,w
  5618  03C9  06D0               	xorwf	___fladd@signs,f
  5619  03CA                     l2025:
  5620  03CA  0852               	movf	___fladd@bexp,w
  5621  03CB  00C8               	movwf	??___fladd
  5622  03CC  0848               	movf	??___fladd,w
  5623  03CD  00D3               	movwf	___fladd@grs
  5624  03CE                     l2027:
  5625  03CE  0851               	movf	___fladd@aexp,w
  5626  03CF  00C8               	movwf	??___fladd
  5627  03D0  0848               	movf	??___fladd,w
  5628  03D1  00D2               	movwf	___fladd@bexp
  5629  03D2                     l2029:
  5630  03D2  0853               	movf	___fladd@grs,w
  5631  03D3  00C8               	movwf	??___fladd
  5632  03D4  0848               	movf	??___fladd,w
  5633  03D5  00D1               	movwf	___fladd@aexp
  5634  03D6                     l2031:
  5635  03D6  0840               	movf	___fladd@b,w
  5636  03D7  00C8               	movwf	??___fladd
  5637  03D8  0848               	movf	??___fladd,w
  5638  03D9  00D3               	movwf	___fladd@grs
  5639  03DA                     l2033:
  5640  03DA  0844               	movf	___fladd@a,w
  5641  03DB  00C8               	movwf	??___fladd
  5642  03DC  0848               	movf	??___fladd,w
  5643  03DD  00C0               	movwf	___fladd@b
  5644  03DE                     l2035:
  5645  03DE  0853               	movf	___fladd@grs,w
  5646  03DF  00C8               	movwf	??___fladd
  5647  03E0  0848               	movf	??___fladd,w
  5648  03E1  00C4               	movwf	___fladd@a
  5649  03E2                     l2037:
  5650  03E2  0841               	movf	___fladd@b+1,w
  5651  03E3  00C8               	movwf	??___fladd
  5652  03E4  0848               	movf	??___fladd,w
  5653  03E5  00D3               	movwf	___fladd@grs
  5654  03E6                     l2039:
  5655  03E6  0845               	movf	___fladd@a+1,w
  5656  03E7  00C8               	movwf	??___fladd
  5657  03E8  0848               	movf	??___fladd,w
  5658  03E9  00C1               	movwf	___fladd@b+1
  5659  03EA                     l2041:
  5660  03EA  0853               	movf	___fladd@grs,w
  5661  03EB  00C8               	movwf	??___fladd
  5662  03EC  0848               	movf	??___fladd,w
  5663  03ED  00C5               	movwf	___fladd@a+1
  5664  03EE                     l2043:
  5665  03EE  0842               	movf	___fladd@b+2,w
  5666  03EF  00C8               	movwf	??___fladd
  5667  03F0  0848               	movf	??___fladd,w
  5668  03F1  00D3               	movwf	___fladd@grs
  5669  03F2                     l2045:
  5670  03F2  0846               	movf	___fladd@a+2,w
  5671  03F3  00C8               	movwf	??___fladd
  5672  03F4  0848               	movf	??___fladd,w
  5673  03F5  00C2               	movwf	___fladd@b+2
  5674  03F6                     l2047:
  5675  03F6  0853               	movf	___fladd@grs,w
  5676  03F7  00C8               	movwf	??___fladd
  5677  03F8  0848               	movf	??___fladd,w
  5678  03F9  00C6               	movwf	___fladd@a+2
  5679  03FA                     l2049:
  5680  03FA  0843               	movf	___fladd@b+3,w
  5681  03FB  00C8               	movwf	??___fladd
  5682  03FC  0848               	movf	??___fladd,w
  5683  03FD  00D3               	movwf	___fladd@grs
  5684  03FE                     l2051:
  5685  03FE  0847               	movf	___fladd@a+3,w
  5686  03FF  00C8               	movwf	??___fladd
  5687  0400  0848               	movf	??___fladd,w
  5688  0401  00C3               	movwf	___fladd@b+3
  5689  0402                     l2053:
  5690  0402  0853               	movf	___fladd@grs,w
  5691  0403  00C8               	movwf	??___fladd
  5692  0404  0848               	movf	??___fladd,w
  5693  0405  00C7               	movwf	___fladd@a+3
  5694  0406                     l2055:
  5695  0406  01D3               	clrf	___fladd@grs
  5696  0407                     l2057:
  5697  0407  0851               	movf	___fladd@aexp,w
  5698  0408  00C8               	movwf	??___fladd
  5699  0409  01C9               	clrf	??___fladd+1
  5700  040A  0849               	movf	??___fladd+1,w
  5701  040B  00CB               	movwf	??___fladd+3
  5702  040C  0852               	movf	___fladd@bexp,w
  5703  040D  0248               	subwf	??___fladd,w
  5704  040E  00CA               	movwf	??___fladd+2
  5705  040F  1C03               	skipc
  5706  0410  03CB               	decf	??___fladd+3,f
  5707  0411  084B               	movf	??___fladd+3,w
  5708  0412  3A80               	xorlw	128
  5709  0413  00CC               	movwf	??___fladd+4
  5710  0414  3080               	movlw	128
  5711  0415  024C               	subwf	??___fladd+4,w
  5712  0416  1D03               	skipz
  5713  0417  2C1A               	goto	u1895
  5714  0418  301A               	movlw	26
  5715  0419  024A               	subwf	??___fladd+2,w
  5716  041A                     u1895:
  5717  041A  1C03               	skipc
  5718  041B  2C1D               	goto	u1891
  5719  041C  2C1E               	goto	u1890
  5720  041D                     u1891:
  5721  041D  2C56               	goto	l2073
  5722  041E                     u1890:
  5723  041E                     l2059:
  5724  041E  0140               	movlb	0	; select bank0
  5725  041F  0843               	movf	___fladd@b+3,w
  5726  0420  0442               	iorwf	___fladd@b+2,w
  5727  0421  0441               	iorwf	___fladd@b+1,w
  5728  0422  0440               	iorwf	___fladd@b,w
  5729  0423  1D03               	skipz
  5730  0424  2C26               	goto	u1901
  5731  0425  2C28               	goto	u1900
  5732  0426                     u1901:
  5733  0426  3001               	movlw	1
  5734  0427  2C29               	goto	u1910
  5735  0428                     u1900:
  5736  0428  3000               	movlw	0
  5737  0429                     u1910:
  5738  0429  00C8               	movwf	??___fladd
  5739  042A  0848               	movf	??___fladd,w
  5740  042B  00D3               	movwf	___fladd@grs
  5741  042C  3000               	movlw	0
  5742  042D  00C3               	movwf	___fladd@b+3
  5743  042E  3000               	movlw	0
  5744  042F  00C2               	movwf	___fladd@b+2
  5745  0430  3000               	movlw	0
  5746  0431  00C1               	movwf	___fladd@b+1
  5747  0432  3000               	movlw	0
  5748  0433  00C0               	movwf	___fladd@b
  5749  0434  0851               	movf	___fladd@aexp,w
  5750  0435  00C8               	movwf	??___fladd
  5751  0436  0848               	movf	??___fladd,w
  5752  0437  00D2               	movwf	___fladd@bexp
  5753  0438  2C5D               	goto	l611
  5754  0439                     l613:
  5755  0439  1C53               	btfss	___fladd@grs,0
  5756  043A  2C3C               	goto	u1921
  5757  043B  2C3D               	goto	u1920
  5758  043C                     u1921:
  5759  043C  2C43               	goto	l2063
  5760  043D                     u1920:
  5761  043D                     l2061:
  5762  043D  3653               	lsrf	___fladd@grs,w
  5763  043E  3801               	iorlw	1
  5764  043F  00C8               	movwf	??___fladd
  5765  0440  0848               	movf	??___fladd,w
  5766  0441  00D3               	movwf	___fladd@grs
  5767  0442  2C45               	goto	l2065
  5768  0443                     l2063:
  5769  0443  1003               	clrc
  5770  0444  0CD3               	rrf	___fladd@grs,f
  5771  0445                     l2065:
  5772  0445  1C40               	btfss	___fladd@b,0
  5773  0446  2C48               	goto	u1931
  5774  0447  2C49               	goto	u1930
  5775  0448                     u1931:
  5776  0448  2C4A               	goto	l2069
  5777  0449                     u1930:
  5778  0449                     l2067:
  5779  0449  17D3               	bsf	___fladd@grs,7
  5780  044A                     l2069:
  5781  044A  3001               	movlw	1
  5782  044B  00C8               	movwf	??___fladd
  5783  044C                     u1945:
  5784  044C  37C3               	asrf	___fladd@b+3,f
  5785  044D  0CC2               	rrf	___fladd@b+2,f
  5786  044E  0CC1               	rrf	___fladd@b+1,f
  5787  044F  0CC0               	rrf	___fladd@b,f
  5788  0450  0BC8               	decfsz	??___fladd& (0+127),f
  5789  0451  2C4C               	goto	u1945
  5790  0452                     l2071:
  5791  0452  3001               	movlw	1
  5792  0453  00C8               	movwf	??___fladd
  5793  0454  0848               	movf	??___fladd,w
  5794  0455  07D2               	addwf	___fladd@bexp,f
  5795  0456                     l2073:
  5796  0456  0140               	movlb	0	; select bank0
  5797  0457  0851               	movf	___fladd@aexp,w
  5798  0458  0252               	subwf	___fladd@bexp,w
  5799  0459  1C03               	skipc
  5800  045A  2C5C               	goto	u1951
  5801  045B  2C5D               	goto	u1950
  5802  045C                     u1951:
  5803  045C  2C39               	goto	l613
  5804  045D                     u1950:
  5805  045D                     l611:
  5806  045D  1B50               	btfsc	___fladd@signs,6
  5807  045E  2C60               	goto	u1961
  5808  045F  2C61               	goto	u1960
  5809  0460                     u1961:
  5810  0460  2C99               	goto	l2099
  5811  0461                     u1960:
  5812  0461                     l2075:
  5813  0461  0852               	movf	___fladd@bexp,w
  5814  0462  1D03               	btfss	3,2
  5815  0463  2C65               	goto	u1971
  5816  0464  2C66               	goto	u1970
  5817  0465                     u1971:
  5818  0465  2C6F               	goto	l2081
  5819  0466                     u1970:
  5820  0466                     l2077:
  5821  0466  3000               	movlw	0
  5822  0467  00C3               	movwf	?___fladd+3
  5823  0468  3000               	movlw	0
  5824  0469  00C2               	movwf	?___fladd+2
  5825  046A  3000               	movlw	0
  5826  046B  00C1               	movwf	?___fladd+1
  5827  046C  3000               	movlw	0
  5828  046D  00C0               	movwf	?___fladd
  5829  046E  2D95               	goto	l620
  5830  046F                     l2081:
  5831  046F  0844               	movf	___fladd@a,w
  5832  0470  07C0               	addwf	___fladd@b,f
  5833  0471  0845               	movf	___fladd@a+1,w
  5834  0472  3DC1               	addwfc	___fladd@b+1,f
  5835  0473  0846               	movf	___fladd@a+2,w
  5836  0474  3DC2               	addwfc	___fladd@b+2,f
  5837  0475  0847               	movf	___fladd@a+3,w
  5838  0476  3DC3               	addwfc	___fladd@b+3,f
  5839  0477                     l2083:
  5840  0477  1C43               	btfss	___fladd@b+3,0
  5841  0478  2C7A               	goto	u1981
  5842  0479  2C7B               	goto	u1980
  5843  047A                     u1981:
  5844  047A  2D25               	goto	l2133
  5845  047B                     u1980:
  5846  047B                     l2085:
  5847  047B  1C53               	btfss	___fladd@grs,0
  5848  047C  2C7E               	goto	u1991
  5849  047D  2C7F               	goto	u1990
  5850  047E                     u1991:
  5851  047E  2C85               	goto	l2089
  5852  047F                     u1990:
  5853  047F                     l2087:
  5854  047F  3653               	lsrf	___fladd@grs,w
  5855  0480  3801               	iorlw	1
  5856  0481  00C8               	movwf	??___fladd
  5857  0482  0848               	movf	??___fladd,w
  5858  0483  00D3               	movwf	___fladd@grs
  5859  0484  2C87               	goto	l2091
  5860  0485                     l2089:
  5861  0485  1003               	clrc
  5862  0486  0CD3               	rrf	___fladd@grs,f
  5863  0487                     l2091:
  5864  0487  1C40               	btfss	___fladd@b,0
  5865  0488  2C8A               	goto	u2001
  5866  0489  2C8B               	goto	u2000
  5867  048A                     u2001:
  5868  048A  2C8C               	goto	l2095
  5869  048B                     u2000:
  5870  048B                     l2093:
  5871  048B  17D3               	bsf	___fladd@grs,7
  5872  048C                     l2095:
  5873  048C  3001               	movlw	1
  5874  048D  00C8               	movwf	??___fladd
  5875  048E                     u2015:
  5876  048E  37C3               	asrf	___fladd@b+3,f
  5877  048F  0CC2               	rrf	___fladd@b+2,f
  5878  0490  0CC1               	rrf	___fladd@b+1,f
  5879  0491  0CC0               	rrf	___fladd@b,f
  5880  0492  0BC8               	decfsz	??___fladd& (0+127),f
  5881  0493  2C8E               	goto	u2015
  5882  0494                     l2097:
  5883  0494  3001               	movlw	1
  5884  0495  00C8               	movwf	??___fladd
  5885  0496  0848               	movf	??___fladd,w
  5886  0497  07D2               	addwf	___fladd@bexp,f
  5887  0498  2D25               	goto	l2133
  5888  0499                     l2099:
  5889  0499  0843               	movf	___fladd@b+3,w
  5890  049A  3A80               	xorlw	128
  5891  049B  00C8               	movwf	??___fladd
  5892  049C  0847               	movf	___fladd@a+3,w
  5893  049D  3A80               	xorlw	128
  5894  049E  0248               	subwf	??___fladd,w
  5895  049F  1D03               	skipz
  5896  04A0  2CAB               	goto	u2023
  5897  04A1  0846               	movf	___fladd@a+2,w
  5898  04A2  0242               	subwf	___fladd@b+2,w
  5899  04A3  1D03               	skipz
  5900  04A4  2CAB               	goto	u2023
  5901  04A5  0845               	movf	___fladd@a+1,w
  5902  04A6  0241               	subwf	___fladd@b+1,w
  5903  04A7  1D03               	skipz
  5904  04A8  2CAB               	goto	u2023
  5905  04A9  0844               	movf	___fladd@a,w
  5906  04AA  0240               	subwf	___fladd@b,w
  5907  04AB                     u2023:
  5908  04AB  1803               	skipnc
  5909  04AC  2CAE               	goto	u2021
  5910  04AD  2CAF               	goto	u2020
  5911  04AE                     u2021:
  5912  04AE  2CE7               	goto	l2109
  5913  04AF                     u2020:
  5914  04AF                     l2101:
  5915  04AF  30FF               	movlw	255
  5916  04B0  00C8               	movwf	??___fladd
  5917  04B1  30FF               	movlw	255
  5918  04B2  00C9               	movwf	??___fladd+1
  5919  04B3  30FF               	movlw	255
  5920  04B4  00CA               	movwf	??___fladd+2
  5921  04B5  30FF               	movlw	255
  5922  04B6  00CB               	movwf	??___fladd+3
  5923  04B7  0840               	movf	___fladd@b,w
  5924  04B8  0244               	subwf	___fladd@a,w
  5925  04B9  00CC               	movwf	??___fladd+4
  5926  04BA  0841               	movf	___fladd@b+1,w
  5927  04BB  3B45               	subwfb	___fladd@a+1,w
  5928  04BC  00CD               	movwf	??___fladd+5
  5929  04BD  0842               	movf	___fladd@b+2,w
  5930  04BE  3B46               	subwfb	___fladd@a+2,w
  5931  04BF  00CE               	movwf	??___fladd+6
  5932  04C0  0843               	movf	___fladd@b+3,w
  5933  04C1  3B47               	subwfb	___fladd@a+3,w
  5934  04C2  00CF               	movwf	??___fladd+7
  5935  04C3  084C               	movf	??___fladd+4,w
  5936  04C4  07C8               	addwf	??___fladd,f
  5937  04C5  084D               	movf	??___fladd+5,w
  5938  04C6  3DC9               	addwfc	??___fladd+1,f
  5939  04C7  084E               	movf	??___fladd+6,w
  5940  04C8  3DCA               	addwfc	??___fladd+2,f
  5941  04C9  084F               	movf	??___fladd+7,w
  5942  04CA  3DCB               	addwfc	??___fladd+3,f
  5943  04CB  084B               	movf	??___fladd+3,w
  5944  04CC  00C3               	movwf	___fladd@b+3
  5945  04CD  084A               	movf	??___fladd+2,w
  5946  04CE  00C2               	movwf	___fladd@b+2
  5947  04CF  0849               	movf	??___fladd+1,w
  5948  04D0  00C1               	movwf	___fladd@b+1
  5949  04D1  0848               	movf	??___fladd,w
  5950  04D2  00C0               	movwf	___fladd@b
  5951  04D3                     l2103:
  5952  04D3  3080               	movlw	128
  5953  04D4  00C8               	movwf	??___fladd
  5954  04D5  0848               	movf	??___fladd,w
  5955  04D6  06D0               	xorwf	___fladd@signs,f
  5956  04D7  09D3               	comf	___fladd@grs,f
  5957  04D8  0AD3               	incf	___fladd@grs,f
  5958  04D9                     l2105:
  5959  04D9  0853               	movf	___fladd@grs,w
  5960  04DA  1D03               	btfss	3,2
  5961  04DB  2CDD               	goto	u2031
  5962  04DC  2CDE               	goto	u2030
  5963  04DD                     u2031:
  5964  04DD  2CEF               	goto	l628
  5965  04DE                     u2030:
  5966  04DE                     l2107:
  5967  04DE  3001               	movlw	1
  5968  04DF  07C0               	addwf	___fladd@b,f
  5969  04E0  3000               	movlw	0
  5970  04E1  3DC1               	addwfc	___fladd@b+1,f
  5971  04E2  3000               	movlw	0
  5972  04E3  3DC2               	addwfc	___fladd@b+2,f
  5973  04E4  3000               	movlw	0
  5974  04E5  3DC3               	addwfc	___fladd@b+3,f
  5975  04E6  2CEF               	goto	l628
  5976  04E7                     l2109:
  5977  04E7  0844               	movf	___fladd@a,w
  5978  04E8  02C0               	subwf	___fladd@b,f
  5979  04E9  0845               	movf	___fladd@a+1,w
  5980  04EA  3BC1               	subwfb	___fladd@b+1,f
  5981  04EB  0846               	movf	___fladd@a+2,w
  5982  04EC  3BC2               	subwfb	___fladd@b+2,f
  5983  04ED  0847               	movf	___fladd@a+3,w
  5984  04EE  3BC3               	subwfb	___fladd@b+3,f
  5985  04EF                     l628:
  5986  04EF  0843               	movf	___fladd@b+3,w
  5987  04F0  0442               	iorwf	___fladd@b+2,w
  5988  04F1  0441               	iorwf	___fladd@b+1,w
  5989  04F2  0440               	iorwf	___fladd@b,w
  5990  04F3  1D03               	skipz
  5991  04F4  2CF6               	goto	u2041
  5992  04F5  2CF7               	goto	u2040
  5993  04F6                     u2041:
  5994  04F6  2D21               	goto	l2131
  5995  04F7                     u2040:
  5996  04F7                     l2111:
  5997  04F7  0853               	movf	___fladd@grs,w
  5998  04F8  1D03               	btfss	3,2
  5999  04F9  2CFB               	goto	u2051
  6000  04FA  2CFC               	goto	u2050
  6001  04FB                     u2051:
  6002  04FB  2D21               	goto	l2131
  6003  04FC                     u2050:
  6004  04FC                     l2113:
  6005  04FC  3000               	movlw	0
  6006  04FD  00C3               	movwf	?___fladd+3
  6007  04FE  3000               	movlw	0
  6008  04FF  00C2               	movwf	?___fladd+2
  6009  0500  3000               	movlw	0
  6010  0501  00C1               	movwf	?___fladd+1
  6011  0502  3000               	movlw	0
  6012  0503  00C0               	movwf	?___fladd
  6013  0504  2D95               	goto	l620
  6014  0505                     l2117:
  6015  0505  3001               	movlw	1
  6016  0506                     u2065:
  6017  0506  35C0               	lslf	___fladd@b,f
  6018  0507  0DC1               	rlf	___fladd@b+1,f
  6019  0508  0DC2               	rlf	___fladd@b+2,f
  6020  0509  0DC3               	rlf	___fladd@b+3,f
  6021  050A  0B89               	decfsz	9,f
  6022  050B  2D06               	goto	u2065
  6023  050C                     l2119:
  6024  050C  1FD3               	btfss	___fladd@grs,7
  6025  050D  2D0F               	goto	u2071
  6026  050E  2D10               	goto	u2070
  6027  050F                     u2071:
  6028  050F  2D11               	goto	l632
  6029  0510                     u2070:
  6030  0510                     l2121:
  6031  0510  1440               	bsf	___fladd@b,0
  6032  0511                     l632:
  6033  0511  1C53               	btfss	___fladd@grs,0
  6034  0512  2D14               	goto	u2081
  6035  0513  2D15               	goto	u2080
  6036  0514                     u2081:
  6037  0514  2D18               	goto	l2125
  6038  0515                     u2080:
  6039  0515                     l2123:
  6040  0515  1403               	setc
  6041  0516  0DD3               	rlf	___fladd@grs,f
  6042  0517  2D1A               	goto	l2127
  6043  0518                     l2125:
  6044  0518  1003               	clrc
  6045  0519  0DD3               	rlf	___fladd@grs,f
  6046  051A                     l2127:
  6047  051A  0852               	movf	___fladd@bexp,w
  6048  051B  1903               	btfsc	3,2
  6049  051C  2D1E               	goto	u2091
  6050  051D  2D1F               	goto	u2090
  6051  051E                     u2091:
  6052  051E  2D21               	goto	l2131
  6053  051F                     u2090:
  6054  051F                     l2129:
  6055  051F  3001               	movlw	1
  6056  0520  02D2               	subwf	___fladd@bexp,f
  6057  0521                     l2131:
  6058  0521  1FC2               	btfss	___fladd@b+2,7
  6059  0522  2D24               	goto	u2101
  6060  0523  2D25               	goto	u2100
  6061  0524                     u2101:
  6062  0524  2D05               	goto	l2117
  6063  0525                     u2100:
  6064  0525                     l2133:
  6065  0525  01D1               	clrf	___fladd@aexp
  6066  0526                     l2135:
  6067  0526  1FD3               	btfss	___fladd@grs,7
  6068  0527  2D29               	goto	u2111
  6069  0528  2D2A               	goto	u2110
  6070  0529                     u2111:
  6071  0529  2D38               	goto	l2143
  6072  052A                     u2110:
  6073  052A                     l2137:
  6074  052A  0853               	movf	___fladd@grs,w
  6075  052B  397F               	andlw	127
  6076  052C  1903               	btfsc	3,2
  6077  052D  2D2F               	goto	u2121
  6078  052E  2D30               	goto	u2120
  6079  052F                     u2121:
  6080  052F  2D33               	goto	l638
  6081  0530                     u2120:
  6082  0530                     l2139:
  6083  0530  01D1               	clrf	___fladd@aexp
  6084  0531  0AD1               	incf	___fladd@aexp,f
  6085  0532  2D38               	goto	l2143
  6086  0533                     l638:
  6087  0533  1C40               	btfss	___fladd@b,0
  6088  0534  2D36               	goto	u2131
  6089  0535  2D37               	goto	u2130
  6090  0536                     u2131:
  6091  0536  2D38               	goto	l2143
  6092  0537                     u2130:
  6093  0537  2D30               	goto	l2139
  6094  0538                     l2143:
  6095  0538  0851               	movf	___fladd@aexp,w
  6096  0539  1903               	btfsc	3,2
  6097  053A  2D3C               	goto	u2141
  6098  053B  2D3D               	goto	u2140
  6099  053C                     u2141:
  6100  053C  2D6A               	goto	l641
  6101  053D                     u2140:
  6102  053D                     l2145:
  6103  053D  3001               	movlw	1
  6104  053E  07C0               	addwf	___fladd@b,f
  6105  053F  3000               	movlw	0
  6106  0540  3DC1               	addwfc	___fladd@b+1,f
  6107  0541  3000               	movlw	0
  6108  0542  3DC2               	addwfc	___fladd@b+2,f
  6109  0543  3000               	movlw	0
  6110  0544  3DC3               	addwfc	___fladd@b+3,f
  6111  0545                     l2147:
  6112  0545  1C43               	btfss	___fladd@b+3,0
  6113  0546  2D48               	goto	u2151
  6114  0547  2D49               	goto	u2150
  6115  0548                     u2151:
  6116  0548  2D6A               	goto	l641
  6117  0549                     u2150:
  6118  0549                     l2149:
  6119  0549  0840               	movf	___fladd@b,w
  6120  054A  00C8               	movwf	??___fladd
  6121  054B  0841               	movf	___fladd@b+1,w
  6122  054C  00C9               	movwf	??___fladd+1
  6123  054D  0842               	movf	___fladd@b+2,w
  6124  054E  00CA               	movwf	??___fladd+2
  6125  054F  0843               	movf	___fladd@b+3,w
  6126  0550  00CB               	movwf	??___fladd+3
  6127  0551  3001               	movlw	1
  6128  0552  00CC               	movwf	??___fladd+4
  6129  0553                     u2165:
  6130  0553  37CB               	asrf	??___fladd+3,f
  6131  0554  0CCA               	rrf	??___fladd+2,f
  6132  0555  0CC9               	rrf	??___fladd+1,f
  6133  0556  0CC8               	rrf	??___fladd,f
  6134  0557                     u2160:
  6135  0557  0BCC               	decfsz	??___fladd+4,f
  6136  0558  2D53               	goto	u2165
  6137  0559  084B               	movf	??___fladd+3,w
  6138  055A  00C3               	movwf	___fladd@b+3
  6139  055B  084A               	movf	??___fladd+2,w
  6140  055C  00C2               	movwf	___fladd@b+2
  6141  055D  0849               	movf	??___fladd+1,w
  6142  055E  00C1               	movwf	___fladd@b+1
  6143  055F  0848               	movf	??___fladd,w
  6144  0560  00C0               	movwf	___fladd@b
  6145  0561  0A52               	incf	___fladd@bexp,w
  6146  0562  1903               	btfsc	3,2
  6147  0563  2D65               	goto	u2171
  6148  0564  2D66               	goto	u2170
  6149  0565                     u2171:
  6150  0565  2D6A               	goto	l641
  6151  0566                     u2170:
  6152  0566                     l2151:
  6153  0566  3001               	movlw	1
  6154  0567  00C8               	movwf	??___fladd
  6155  0568  0848               	movf	??___fladd,w
  6156  0569  07D2               	addwf	___fladd@bexp,f
  6157  056A                     l641:
  6158  056A  0A52               	incf	___fladd@bexp,w
  6159  056B  1903               	btfsc	3,2
  6160  056C  2D6E               	goto	u2181
  6161  056D  2D6F               	goto	u2180
  6162  056E                     u2181:
  6163  056E  2D74               	goto	l2155
  6164  056F                     u2180:
  6165  056F                     l2153:
  6166  056F  0852               	movf	___fladd@bexp,w
  6167  0570  1D03               	btfss	3,2
  6168  0571  2D73               	goto	u2191
  6169  0572  2D74               	goto	u2190
  6170  0573                     u2191:
  6171  0573  2D82               	goto	l2161
  6172  0574                     u2190:
  6173  0574                     l2155:
  6174  0574  3000               	movlw	0
  6175  0575  00C3               	movwf	___fladd@b+3
  6176  0576  3000               	movlw	0
  6177  0577  00C2               	movwf	___fladd@b+2
  6178  0578  3000               	movlw	0
  6179  0579  00C1               	movwf	___fladd@b+1
  6180  057A  3000               	movlw	0
  6181  057B  00C0               	movwf	___fladd@b
  6182  057C                     l2157:
  6183  057C  0852               	movf	___fladd@bexp,w
  6184  057D  1D03               	btfss	3,2
  6185  057E  2D80               	goto	u2201
  6186  057F  2D81               	goto	u2200
  6187  0580                     u2201:
  6188  0580  2D82               	goto	l2161
  6189  0581                     u2200:
  6190  0581                     l2159:
  6191  0581  01D0               	clrf	___fladd@signs
  6192  0582                     l2161:
  6193  0582  1C52               	btfss	___fladd@bexp,0
  6194  0583  2D85               	goto	u2211
  6195  0584  2D86               	goto	u2210
  6196  0585                     u2211:
  6197  0585  2D88               	goto	l2165
  6198  0586                     u2210:
  6199  0586                     l2163:
  6200  0586  17C2               	bsf	___fladd@b+2,7
  6201  0587  2D8C               	goto	l649
  6202  0588                     l2165:
  6203  0588  307F               	movlw	127
  6204  0589  00C8               	movwf	??___fladd
  6205  058A  0848               	movf	??___fladd,w
  6206  058B  05C2               	andwf	___fladd@b+2,f
  6207  058C                     l649:
  6208  058C  3652               	lsrf	___fladd@bexp,w
  6209  058D  00C8               	movwf	??___fladd
  6210  058E  0848               	movf	??___fladd,w
  6211  058F  00C3               	movwf	___fladd@b+3
  6212  0590                     l2167:
  6213  0590  1FD0               	btfss	___fladd@signs,7
  6214  0591  2D93               	goto	u2221
  6215  0592  2D94               	goto	u2220
  6216  0593                     u2221:
  6217  0593  2D95               	goto	l650
  6218  0594                     u2220:
  6219  0594                     l2169:
  6220  0594  17C3               	bsf	___fladd@b+3,7
  6221  0595                     l650:
  6222  0595                     l620:
  6223  0595  0008               	return
  6224  0596                     __end_of___fladd:
  6225                           
  6226                           	psect	text22
  6227  0A94                     __ptext22:	
  6228 ;; *************** function _LeerAdc *****************
  6229 ;; Defined at:
  6230 ;;		line 91 in file "Entrega2.c"
  6231 ;; Parameters:    Size  Location     Type
  6232 ;;  canal           1    wreg     unsigned char 
  6233 ;; Auto vars:     Size  Location     Type
  6234 ;;  canal           1    4[COMMON] unsigned char 
  6235 ;; Return value:  Size  Location     Type
  6236 ;;                  2    0[COMMON] unsigned int 
  6237 ;; Registers used:
  6238 ;;		wreg, status,2, status,0
  6239 ;; Tracked objects:
  6240 ;;		On entry : 0/0
  6241 ;;		On exit  : 0/0
  6242 ;;		Unchanged: 0/0
  6243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6244 ;;      Params:         2       0       0       0       0       0       0       0
  6245 ;;      Locals:         1       0       0       0       0       0       0       0
  6246 ;;      Temps:          2       0       0       0       0       0       0       0
  6247 ;;      Totals:         5       0       0       0       0       0       0       0
  6248 ;;Total ram usage:        5 bytes
  6249 ;; Hardware stack levels used:    1
  6250 ;; This function calls:
  6251 ;;		Nothing
  6252 ;; This function is called by:
  6253 ;;		_LeerSensores
  6254 ;; This function uses a non-reentrant model
  6255 ;;
  6256                           
  6257                           
  6258                           ;psect for function _LeerAdc
  6259  0A94                     _LeerAdc:
  6260                           
  6261                           ;incstack = 0
  6262                           ; Regs used in _LeerAdc: [wreg+status,2+status,0]
  6263                           ;LeerAdc@canal stored from wreg
  6264  0A94  00F4               	movwf	LeerAdc@canal
  6265  0A95                     l2583:
  6266                           
  6267                           ;Entrega2.c: 91: unsigned int LeerAdc(unsigned char canal);Entrega2.c: 92: {;Entrega2.c:
      +                           93:     ADCON0 &=0X3;
  6268  0A95  3003               	movlw	3
  6269  0A96  00F2               	movwf	??_LeerAdc
  6270  0A97  0872               	movf	??_LeerAdc,w
  6271  0A98  0141               	movlb	1	; select bank1
  6272  0A99  059D               	andwf	29,f	;volatile
  6273                           
  6274                           ;Entrega2.c: 95:     ADCON0 |=canal<<2;
  6275  0A9A  0874               	movf	LeerAdc@canal,w	;volatile
  6276  0A9B  00F2               	movwf	??_LeerAdc
  6277  0A9C  3001               	movlw	1
  6278  0A9D                     u3025:
  6279  0A9D  35F2               	lslf	??_LeerAdc,f
  6280  0A9E  3EFF               	addlw	-1
  6281  0A9F  1D03               	skipz
  6282  0AA0  2A9D               	goto	u3025
  6283  0AA1  3572               	lslf	??_LeerAdc,w
  6284  0AA2  00F3               	movwf	??_LeerAdc+1
  6285  0AA3  0873               	movf	??_LeerAdc+1,w
  6286  0AA4  049D               	iorwf	29,f	;volatile
  6287  0AA5                     l2585:
  6288                           
  6289                           ;Entrega2.c: 97:     _delay((unsigned long)((20)*(32000000/4000000.0)));
  6290  0AA5  3035               	movlw	53
  6291  0AA6                     u3277:
  6292  0AA6  0B89               	decfsz	9,f
  6293  0AA7  2AA6               	goto	u3277
  6294  0AA8  0000               	nop
  6295  0AA9                     l2587:
  6296                           
  6297                           ;Entrega2.c: 100:     ADCON0 |=1<<1;
  6298  0AA9  0141               	movlb	1	; select bank1
  6299  0AAA  149D               	bsf	29,1	;volatile
  6300  0AAB                     l80:	
  6301                           ;Entrega2.c: 101:     while(ADCON0 & 0x2);
  6302                           
  6303  0AAB  189D               	btfsc	29,1	;volatile
  6304  0AAC  2AAE               	goto	u3031
  6305  0AAD  2AAF               	goto	u3030
  6306  0AAE                     u3031:
  6307  0AAE  2AAB               	goto	l80
  6308  0AAF                     u3030:
  6309  0AAF                     l2589:
  6310                           
  6311                           ;Entrega2.c: 103:     return ((ADRESH<<8)+ADRESL);
  6312  0AAF  081C               	movf	28,w	;volatile
  6313  0AB0  00F1               	movwf	?_LeerAdc+1
  6314  0AB1  081B               	movf	27,w	;volatile
  6315  0AB2  00F0               	movwf	?_LeerAdc
  6316  0AB3                     l83:
  6317  0AB3  0008               	return
  6318  0AB4                     __end_of_LeerAdc:
  6319                           
  6320                           	psect	text23
  6321  09B8                     __ptext23:	
  6322 ;; *************** function _Iniciar_ADC *****************
  6323 ;; Defined at:
  6324 ;;		line 86 in file "Entrega2.c"
  6325 ;; Parameters:    Size  Location     Type
  6326 ;;		None
  6327 ;; Auto vars:     Size  Location     Type
  6328 ;;		None
  6329 ;; Return value:  Size  Location     Type
  6330 ;;                  1    wreg      void 
  6331 ;; Registers used:
  6332 ;;		wreg
  6333 ;; Tracked objects:
  6334 ;;		On entry : 0/0
  6335 ;;		On exit  : 0/0
  6336 ;;		Unchanged: 0/0
  6337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6338 ;;      Params:         0       0       0       0       0       0       0       0
  6339 ;;      Locals:         0       0       0       0       0       0       0       0
  6340 ;;      Temps:          0       0       0       0       0       0       0       0
  6341 ;;      Totals:         0       0       0       0       0       0       0       0
  6342 ;;Total ram usage:        0 bytes
  6343 ;; Hardware stack levels used:    1
  6344 ;; This function calls:
  6345 ;;		Nothing
  6346 ;; This function is called by:
  6347 ;;		_main
  6348 ;; This function uses a non-reentrant model
  6349 ;;
  6350                           
  6351                           
  6352                           ;psect for function _Iniciar_ADC
  6353  09B8                     _Iniciar_ADC:
  6354  09B8                     l1683:	
  6355                           ;incstack = 0
  6356                           ; Regs used in _Iniciar_ADC: [wreg]
  6357                           
  6358                           
  6359                           ;Entrega2.c: 88:     ADCON0 = 0b00000001;
  6360  09B8  3001               	movlw	1
  6361  09B9  0141               	movlb	1	; select bank1
  6362  09BA  009D               	movwf	29	;volatile
  6363                           
  6364                           ;Entrega2.c: 89:     ADCON1 = 0b11100000;
  6365  09BB  30E0               	movlw	224
  6366  09BC  009E               	movwf	30	;volatile
  6367  09BD                     l77:
  6368  09BD  0008               	return
  6369  09BE                     __end_of_Iniciar_ADC:
  6370                           
  6371                           	psect	text24
  6372  0C5E                     __ptext24:	
  6373 ;; *************** function _CondicionesDeRiego *****************
  6374 ;; Defined at:
  6375 ;;		line 191 in file "Entrega2.c"
  6376 ;; Parameters:    Size  Location     Type
  6377 ;;		None
  6378 ;; Auto vars:     Size  Location     Type
  6379 ;;		None
  6380 ;; Return value:  Size  Location     Type
  6381 ;;                  1    wreg      void 
  6382 ;; Registers used:
  6383 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6384 ;; Tracked objects:
  6385 ;;		On entry : 0/0
  6386 ;;		On exit  : 0/0
  6387 ;;		Unchanged: 0/0
  6388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6389 ;;      Params:         0       0       0       0       0       0       0       0
  6390 ;;      Locals:         0       0       0       0       0       0       0       0
  6391 ;;      Temps:          1       0       0       0       0       0       0       0
  6392 ;;      Totals:         1       0       0       0       0       0       0       0
  6393 ;;Total ram usage:        1 bytes
  6394 ;; Hardware stack levels used:    1
  6395 ;; Hardware stack levels required when called:    6
  6396 ;; This function calls:
  6397 ;;		_LCD_Set_Cursor
  6398 ;;		_LCD_Write_String
  6399 ;;		___flge
  6400 ;; This function is called by:
  6401 ;;		_main
  6402 ;; This function uses a non-reentrant model
  6403 ;;
  6404                           
  6405                           
  6406                           ;psect for function _CondicionesDeRiego
  6407  0C5E                     _CondicionesDeRiego:
  6408  0C5E                     l2705:	
  6409                           ;incstack = 0
  6410                           ; Regs used in _CondicionesDeRiego: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6411                           
  6412                           
  6413                           ;Entrega2.c: 193:     if( (lecturaTemp>=MAXTEMP) && (lecturaHumedad>=MINHUM) )
  6414  0C5E  0141               	movlb	1	; select bank1
  6415  0C5F  0823               	movf	(_lecturaTemp+3)^(0+128),w
  6416  0C60  00F3               	movwf	___flge@ff1+3
  6417  0C61  0822               	movf	(_lecturaTemp+2)^(0+128),w
  6418  0C62  00F2               	movwf	___flge@ff1+2
  6419  0C63  0821               	movf	(_lecturaTemp+1)^(0+128),w
  6420  0C64  00F1               	movwf	___flge@ff1+1
  6421  0C65  0820               	movf	_lecturaTemp^(0+128),w
  6422  0C66  00F0               	movwf	___flge@ff1
  6423  0C67  3041               	movlw	65
  6424  0C68  00F7               	movwf	___flge@ff2+3
  6425  0C69  30D0               	movlw	208
  6426  0C6A  00F6               	movwf	___flge@ff2+2
  6427  0C6B  3000               	movlw	0
  6428  0C6C  00F5               	movwf	___flge@ff2+1
  6429  0C6D  3000               	movlw	0
  6430  0C6E  00F4               	movwf	___flge@ff2
  6431  0C6F  318E  260D  318C   	fcall	___flge
  6432  0C72  1C03               	btfss	3,0
  6433  0C73  2C75               	goto	u3121
  6434  0C74  2C76               	goto	u3120
  6435  0C75                     u3121:
  6436  0C75  2CA3               	goto	l109
  6437  0C76                     u3120:
  6438  0C76                     l2707:
  6439  0C76  0141               	movlb	1	; select bank1
  6440  0C77  0827               	movf	(_lecturaHumedad+3)^(0+128),w
  6441  0C78  00F3               	movwf	___flge@ff1+3
  6442  0C79  0826               	movf	(_lecturaHumedad+2)^(0+128),w
  6443  0C7A  00F2               	movwf	___flge@ff1+2
  6444  0C7B  0825               	movf	(_lecturaHumedad+1)^(0+128),w
  6445  0C7C  00F1               	movwf	___flge@ff1+1
  6446  0C7D  0824               	movf	_lecturaHumedad^(0+128),w
  6447  0C7E  00F0               	movwf	___flge@ff1
  6448  0C7F  3040               	movlw	64
  6449  0C80  00F7               	movwf	___flge@ff2+3
  6450  0C81  3000               	movlw	0
  6451  0C82  00F6               	movwf	___flge@ff2+2
  6452  0C83  3000               	movlw	0
  6453  0C84  00F5               	movwf	___flge@ff2+1
  6454  0C85  3000               	movlw	0
  6455  0C86  00F4               	movwf	___flge@ff2
  6456  0C87  318E  260D  318C   	fcall	___flge
  6457  0C8A  1C03               	btfss	3,0
  6458  0C8B  2C8D               	goto	u3131
  6459  0C8C  2C8E               	goto	u3130
  6460  0C8D                     u3131:
  6461  0C8D  2CA3               	goto	l109
  6462  0C8E                     u3130:
  6463  0C8E                     l2709:
  6464                           
  6465                           ;Entrega2.c: 194:     {;Entrega2.c: 196:         PORTC&=~PIN_BOM;
  6466  0C8E  30FD               	movlw	253
  6467  0C8F  00FC               	movwf	??_CondicionesDeRiego
  6468  0C90  087C               	movf	??_CondicionesDeRiego,w
  6469  0C91  0140               	movlb	0	; select bank0
  6470  0C92  058E               	andwf	14,f	;volatile
  6471  0C93                     l2711:
  6472                           
  6473                           ;Entrega2.c: 197:         LCD_Set_Cursor(2, 8);
  6474  0C93  3008               	movlw	8
  6475  0C94  00FC               	movwf	??_CondicionesDeRiego
  6476  0C95  087C               	movf	??_CondicionesDeRiego,w
  6477  0C96  00F6               	movwf	LCD_Set_Cursor@COL
  6478  0C97  3002               	movlw	2
  6479  0C98  318B  233C  318C   	fcall	_LCD_Set_Cursor
  6480  0C9B                     l2713:
  6481                           
  6482                           ;Entrega2.c: 198:         LCD_Write_String("Regando ");
  6483  0C9B  3035               	movlw	low (STR_6| (0+32768))
  6484  0C9C  00F6               	movwf	LCD_Write_String@Str
  6485  0C9D  3088               	movlw	high (STR_6| (0+32768))
  6486  0C9E  00F7               	movwf	LCD_Write_String@Str+1
  6487  0C9F  318A  2258  318C   	fcall	_LCD_Write_String
  6488                           
  6489                           ;Entrega2.c: 200:     }
  6490  0CA2  2CB4               	goto	l111
  6491  0CA3                     l109:	
  6492                           ;Entrega2.c: 201:     else
  6493                           
  6494                           
  6495                           ;Entrega2.c: 202:     {;Entrega2.c: 203:         PORTC|=PIN_BOM;
  6496  0CA3  0140               	movlb	0	; select bank0
  6497  0CA4  148E               	bsf	14,1	;volatile
  6498  0CA5                     l2715:
  6499                           
  6500                           ;Entrega2.c: 204:         LCD_Set_Cursor(2, 8);
  6501  0CA5  3008               	movlw	8
  6502  0CA6  00FC               	movwf	??_CondicionesDeRiego
  6503  0CA7  087C               	movf	??_CondicionesDeRiego,w
  6504  0CA8  00F6               	movwf	LCD_Set_Cursor@COL
  6505  0CA9  3002               	movlw	2
  6506  0CAA  318B  233C  318C   	fcall	_LCD_Set_Cursor
  6507                           
  6508                           ;Entrega2.c: 205:         LCD_Write_String("Suelo Ok");
  6509  0CAD  303E               	movlw	low (STR_7| (0+32768))
  6510  0CAE  00F6               	movwf	LCD_Write_String@Str
  6511  0CAF  3088               	movlw	high (STR_7| (0+32768))
  6512  0CB0  00F7               	movwf	LCD_Write_String@Str+1
  6513  0CB1  318A  2258  318C   	fcall	_LCD_Write_String
  6514  0CB4                     l111:
  6515  0CB4  0008               	return
  6516  0CB5                     __end_of_CondicionesDeRiego:
  6517                           
  6518                           	psect	text25
  6519  0E0D                     __ptext25:	
  6520 ;; *************** function ___flge *****************
  6521 ;; Defined at:
  6522 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  6523 ;; Parameters:    Size  Location     Type
  6524 ;;  ff1             4    0[COMMON] void 
  6525 ;;  ff2             4    4[COMMON] void 
  6526 ;; Auto vars:     Size  Location     Type
  6527 ;;		None
  6528 ;; Return value:  Size  Location     Type
  6529 ;;		None               void
  6530 ;; Registers used:
  6531 ;;		wreg, status,2, status,0
  6532 ;; Tracked objects:
  6533 ;;		On entry : 0/0
  6534 ;;		On exit  : 0/0
  6535 ;;		Unchanged: 0/0
  6536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6537 ;;      Params:         8       0       0       0       0       0       0       0
  6538 ;;      Locals:         0       0       0       0       0       0       0       0
  6539 ;;      Temps:          4       0       0       0       0       0       0       0
  6540 ;;      Totals:        12       0       0       0       0       0       0       0
  6541 ;;Total ram usage:       12 bytes
  6542 ;; Hardware stack levels used:    1
  6543 ;; This function calls:
  6544 ;;		Nothing
  6545 ;; This function is called by:
  6546 ;;		_CondicionesDeRiego
  6547 ;;		_ftoa
  6548 ;; This function uses a non-reentrant model
  6549 ;;
  6550                           
  6551                           
  6552                           ;psect for function ___flge
  6553  0E0D                     ___flge:
  6554  0E0D                     l2221:	
  6555                           ;incstack = 0
  6556                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6557                           
  6558  0E0D  3000               	movlw	0
  6559  0E0E  0570               	andwf	___flge@ff1,w
  6560  0E0F  00F8               	movwf	??___flge
  6561  0E10  3000               	movlw	0
  6562  0E11  0571               	andwf	___flge@ff1+1,w
  6563  0E12  00F9               	movwf	??___flge+1
  6564  0E13  3080               	movlw	128
  6565  0E14  0572               	andwf	___flge@ff1+2,w
  6566  0E15  00FA               	movwf	??___flge+2
  6567  0E16  307F               	movlw	127
  6568  0E17  0573               	andwf	___flge@ff1+3,w
  6569  0E18  00FB               	movwf	??___flge+3
  6570  0E19  087B               	movf	??___flge+3,w
  6571  0E1A  047A               	iorwf	??___flge+2,w
  6572  0E1B  0479               	iorwf	??___flge+1,w
  6573  0E1C  0478               	iorwf	??___flge,w
  6574  0E1D  1D03               	skipz
  6575  0E1E  2E20               	goto	u2291
  6576  0E1F  2E21               	goto	u2290
  6577  0E20                     u2291:
  6578  0E20  2E29               	goto	l488
  6579  0E21                     u2290:
  6580  0E21                     l2223:
  6581  0E21  3000               	movlw	0
  6582  0E22  00F3               	movwf	___flge@ff1+3
  6583  0E23  3000               	movlw	0
  6584  0E24  00F2               	movwf	___flge@ff1+2
  6585  0E25  3000               	movlw	0
  6586  0E26  00F1               	movwf	___flge@ff1+1
  6587  0E27  3000               	movlw	0
  6588  0E28  00F0               	movwf	___flge@ff1
  6589  0E29                     l488:
  6590  0E29  3000               	movlw	0
  6591  0E2A  0574               	andwf	___flge@ff2,w
  6592  0E2B  00F8               	movwf	??___flge
  6593  0E2C  3000               	movlw	0
  6594  0E2D  0575               	andwf	___flge@ff2+1,w
  6595  0E2E  00F9               	movwf	??___flge+1
  6596  0E2F  3080               	movlw	128
  6597  0E30  0576               	andwf	___flge@ff2+2,w
  6598  0E31  00FA               	movwf	??___flge+2
  6599  0E32  307F               	movlw	127
  6600  0E33  0577               	andwf	___flge@ff2+3,w
  6601  0E34  00FB               	movwf	??___flge+3
  6602  0E35  087B               	movf	??___flge+3,w
  6603  0E36  047A               	iorwf	??___flge+2,w
  6604  0E37  0479               	iorwf	??___flge+1,w
  6605  0E38  0478               	iorwf	??___flge,w
  6606  0E39  1D03               	skipz
  6607  0E3A  2E3C               	goto	u2301
  6608  0E3B  2E3D               	goto	u2300
  6609  0E3C                     u2301:
  6610  0E3C  2E45               	goto	l2227
  6611  0E3D                     u2300:
  6612  0E3D                     l2225:
  6613  0E3D  3000               	movlw	0
  6614  0E3E  00F7               	movwf	___flge@ff2+3
  6615  0E3F  3000               	movlw	0
  6616  0E40  00F6               	movwf	___flge@ff2+2
  6617  0E41  3000               	movlw	0
  6618  0E42  00F5               	movwf	___flge@ff2+1
  6619  0E43  3000               	movlw	0
  6620  0E44  00F4               	movwf	___flge@ff2
  6621  0E45                     l2227:
  6622  0E45  1FF3               	btfss	___flge@ff1+3,7
  6623  0E46  2E48               	goto	u2311
  6624  0E47  2E49               	goto	u2310
  6625  0E48                     u2311:
  6626  0E48  2E61               	goto	l2231
  6627  0E49                     u2310:
  6628  0E49                     l2229:
  6629  0E49  3000               	movlw	0
  6630  0E4A  00F8               	movwf	??___flge
  6631  0E4B  3000               	movlw	0
  6632  0E4C  00F9               	movwf	??___flge+1
  6633  0E4D  3000               	movlw	0
  6634  0E4E  00FA               	movwf	??___flge+2
  6635  0E4F  3080               	movlw	128
  6636  0E50  00FB               	movwf	??___flge+3
  6637  0E51  0870               	movf	___flge@ff1,w
  6638  0E52  02F8               	subwf	??___flge,f
  6639  0E53  0871               	movf	___flge@ff1+1,w
  6640  0E54  3BF9               	subwfb	??___flge+1,f
  6641  0E55  0872               	movf	___flge@ff1+2,w
  6642  0E56  3BFA               	subwfb	??___flge+2,f
  6643  0E57  0873               	movf	___flge@ff1+3,w
  6644  0E58  3BFB               	subwfb	??___flge+3,f
  6645  0E59  087B               	movf	??___flge+3,w
  6646  0E5A  00F3               	movwf	___flge@ff1+3
  6647  0E5B  087A               	movf	??___flge+2,w
  6648  0E5C  00F2               	movwf	___flge@ff1+2
  6649  0E5D  0879               	movf	??___flge+1,w
  6650  0E5E  00F1               	movwf	___flge@ff1+1
  6651  0E5F  0878               	movf	??___flge,w
  6652  0E60  00F0               	movwf	___flge@ff1
  6653  0E61                     l2231:
  6654  0E61  1FF7               	btfss	___flge@ff2+3,7
  6655  0E62  2E64               	goto	u2321
  6656  0E63  2E65               	goto	u2320
  6657  0E64                     u2321:
  6658  0E64  2E7D               	goto	l491
  6659  0E65                     u2320:
  6660  0E65                     l2233:
  6661  0E65  3000               	movlw	0
  6662  0E66  00F8               	movwf	??___flge
  6663  0E67  3000               	movlw	0
  6664  0E68  00F9               	movwf	??___flge+1
  6665  0E69  3000               	movlw	0
  6666  0E6A  00FA               	movwf	??___flge+2
  6667  0E6B  3080               	movlw	128
  6668  0E6C  00FB               	movwf	??___flge+3
  6669  0E6D  0874               	movf	___flge@ff2,w
  6670  0E6E  02F8               	subwf	??___flge,f
  6671  0E6F  0875               	movf	___flge@ff2+1,w
  6672  0E70  3BF9               	subwfb	??___flge+1,f
  6673  0E71  0876               	movf	___flge@ff2+2,w
  6674  0E72  3BFA               	subwfb	??___flge+2,f
  6675  0E73  0877               	movf	___flge@ff2+3,w
  6676  0E74  3BFB               	subwfb	??___flge+3,f
  6677  0E75  087B               	movf	??___flge+3,w
  6678  0E76  00F7               	movwf	___flge@ff2+3
  6679  0E77  087A               	movf	??___flge+2,w
  6680  0E78  00F6               	movwf	___flge@ff2+2
  6681  0E79  0879               	movf	??___flge+1,w
  6682  0E7A  00F5               	movwf	___flge@ff2+1
  6683  0E7B  0878               	movf	??___flge,w
  6684  0E7C  00F4               	movwf	___flge@ff2
  6685  0E7D                     l491:
  6686  0E7D  3080               	movlw	128
  6687  0E7E  06F3               	xorwf	___flge@ff1+3,f
  6688  0E7F  3080               	movlw	128
  6689  0E80  06F7               	xorwf	___flge@ff2+3,f
  6690  0E81  0877               	movf	___flge@ff2+3,w
  6691  0E82  0273               	subwf	___flge@ff1+3,w
  6692  0E83  1D03               	skipz
  6693  0E84  2E8F               	goto	u2335
  6694  0E85  0876               	movf	___flge@ff2+2,w
  6695  0E86  0272               	subwf	___flge@ff1+2,w
  6696  0E87  1D03               	skipz
  6697  0E88  2E8F               	goto	u2335
  6698  0E89  0875               	movf	___flge@ff2+1,w
  6699  0E8A  0271               	subwf	___flge@ff1+1,w
  6700  0E8B  1D03               	skipz
  6701  0E8C  2E8F               	goto	u2335
  6702  0E8D  0874               	movf	___flge@ff2,w
  6703  0E8E  0270               	subwf	___flge@ff1,w
  6704  0E8F                     u2335:
  6705  0E8F  1803               	skipnc
  6706  0E90  2E92               	goto	u2331
  6707  0E91  2E93               	goto	u2330
  6708  0E92                     u2331:
  6709  0E92  2E95               	goto	l2237
  6710  0E93                     u2330:
  6711  0E93                     l2235:
  6712  0E93  1003               	clrc
  6713  0E94  2E96               	goto	l492
  6714  0E95                     l2237:
  6715  0E95  1403               	setc
  6716  0E96                     l492:
  6717  0E96  0008               	return
  6718  0E97                     __end_of___flge:
  6719                           
  6720                           	psect	text26
  6721  0A58                     __ptext26:	
  6722 ;; *************** function _LCD_Write_String *****************
  6723 ;; Defined at:
  6724 ;;		line 161 in file "I2C_LCD.c"
  6725 ;; Parameters:    Size  Location     Type
  6726 ;;  Str             2    6[COMMON] PTR unsigned char 
  6727 ;;		 -> NULL(0), ftoa@buf(17), STR_7(9), STR_6(9), 
  6728 ;;		 -> STR_5(9), STR_4(9), STR_3(3), STR_2(3), 
  6729 ;;		 -> STR_1(4), 
  6730 ;; Auto vars:     Size  Location     Type
  6731 ;;  i               2    9[COMMON] int 
  6732 ;; Return value:  Size  Location     Type
  6733 ;;                  1    wreg      void 
  6734 ;; Registers used:
  6735 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6736 ;; Tracked objects:
  6737 ;;		On entry : 0/0
  6738 ;;		On exit  : 0/0
  6739 ;;		Unchanged: 0/0
  6740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6741 ;;      Params:         2       0       0       0       0       0       0       0
  6742 ;;      Locals:         2       0       0       0       0       0       0       0
  6743 ;;      Temps:          1       0       0       0       0       0       0       0
  6744 ;;      Totals:         5       0       0       0       0       0       0       0
  6745 ;;Total ram usage:        5 bytes
  6746 ;; Hardware stack levels used:    1
  6747 ;; Hardware stack levels required when called:    5
  6748 ;; This function calls:
  6749 ;;		_LCD_Write_Char
  6750 ;; This function is called by:
  6751 ;;		_PutVariables
  6752 ;;		_PutTexto
  6753 ;;		_TanqueLLeno
  6754 ;;		_TanqueVacio
  6755 ;;		_CondicionesDeRiego
  6756 ;; This function uses a non-reentrant model
  6757 ;;
  6758                           
  6759                           
  6760                           ;psect for function _LCD_Write_String
  6761  0A58                     _LCD_Write_String:
  6762  0A58                     l2213:	
  6763                           ;incstack = 0
  6764                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6765                           
  6766                           
  6767                           ;I2C_LCD.c: 161: void LCD_Write_String(char* Str);I2C_LCD.c: 162: {;I2C_LCD.c: 163:     
      +                          for(int i=0; Str[i]!='\0'; i++)
  6768  0A58  01F9               	clrf	LCD_Write_String@i
  6769  0A59  01FA               	clrf	LCD_Write_String@i+1
  6770  0A5A  2A69               	goto	l2219
  6771  0A5B                     l2215:
  6772                           
  6773                           ;I2C_LCD.c: 164:        LCD_Write_Char(Str[i]);
  6774  0A5B  0876               	movf	LCD_Write_String@Str,w
  6775  0A5C  0779               	addwf	LCD_Write_String@i,w
  6776  0A5D  0084               	movwf	4
  6777  0A5E  0877               	movf	LCD_Write_String@Str+1,w
  6778  0A5F  3D7A               	addwfc	LCD_Write_String@i+1,w
  6779  0A60  0085               	movwf	5
  6780  0A61  0800               	movf	0,w	;code access
  6781  0A62  318A  2242  318A   	fcall	_LCD_Write_Char
  6782  0A65                     l2217:
  6783  0A65  3001               	movlw	1
  6784  0A66  07F9               	addwf	LCD_Write_String@i,f
  6785  0A67  3000               	movlw	0
  6786  0A68  3DFA               	addwfc	LCD_Write_String@i+1,f
  6787  0A69                     l2219:
  6788  0A69  0876               	movf	LCD_Write_String@Str,w
  6789  0A6A  0779               	addwf	LCD_Write_String@i,w
  6790  0A6B  0084               	movwf	4
  6791  0A6C  0877               	movf	LCD_Write_String@Str+1,w
  6792  0A6D  3D7A               	addwfc	LCD_Write_String@i+1,w
  6793  0A6E  0085               	movwf	5
  6794  0A6F  0012               	moviw fsr0++
  6795  0A70  1D03               	btfss	3,2
  6796  0A71  2A73               	goto	u2281
  6797  0A72  2A74               	goto	u2280
  6798  0A73                     u2281:
  6799  0A73  2A5B               	goto	l2215
  6800  0A74                     u2280:
  6801  0A74                     l222:
  6802  0A74  0008               	return
  6803  0A75                     __end_of_LCD_Write_String:
  6804                           
  6805                           	psect	text27
  6806  0A42                     __ptext27:	
  6807 ;; *************** function _LCD_Write_Char *****************
  6808 ;; Defined at:
  6809 ;;		line 154 in file "I2C_LCD.c"
  6810 ;; Parameters:    Size  Location     Type
  6811 ;;  Data            1    wreg     unsigned char 
  6812 ;; Auto vars:     Size  Location     Type
  6813 ;;  Data            1    5[COMMON] unsigned char 
  6814 ;; Return value:  Size  Location     Type
  6815 ;;                  1    wreg      void 
  6816 ;; Registers used:
  6817 ;;		wreg, status,2, status,0, pclath, cstack
  6818 ;; Tracked objects:
  6819 ;;		On entry : 0/0
  6820 ;;		On exit  : 0/0
  6821 ;;		Unchanged: 0/0
  6822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6823 ;;      Params:         0       0       0       0       0       0       0       0
  6824 ;;      Locals:         1       0       0       0       0       0       0       0
  6825 ;;      Temps:          1       0       0       0       0       0       0       0
  6826 ;;      Totals:         2       0       0       0       0       0       0       0
  6827 ;;Total ram usage:        2 bytes
  6828 ;; Hardware stack levels used:    1
  6829 ;; Hardware stack levels required when called:    4
  6830 ;; This function calls:
  6831 ;;		_LCD_Write_4Bit
  6832 ;; This function is called by:
  6833 ;;		_LCD_Write_String
  6834 ;; This function uses a non-reentrant model
  6835 ;;
  6836                           
  6837                           
  6838                           ;psect for function _LCD_Write_Char
  6839  0A42                     _LCD_Write_Char:
  6840                           
  6841                           ;incstack = 0
  6842                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  6843                           ;LCD_Write_Char@Data stored from wreg
  6844  0A42  00F5               	movwf	LCD_Write_Char@Data
  6845  0A43                     l1915:
  6846                           
  6847                           ;I2C_LCD.c: 154: void LCD_Write_Char(char Data);I2C_LCD.c: 155: {;I2C_LCD.c: 156:   RS =
      +                           1;
  6848  0A43  0141               	movlb	1	; select bank1
  6849  0A44  01AD               	clrf	_RS^(0+128)
  6850  0A45  0AAD               	incf	_RS^(0+128),f
  6851  0A46                     l1917:
  6852                           
  6853                           ;I2C_LCD.c: 157:   LCD_Write_4Bit(Data & 0xF0);
  6854  0A46  0875               	movf	LCD_Write_Char@Data,w
  6855  0A47  39F0               	andlw	240
  6856  0A48  318A  2218  318A   	fcall	_LCD_Write_4Bit
  6857                           
  6858                           ;I2C_LCD.c: 158:   LCD_Write_4Bit((Data << 4) & 0xF0);
  6859  0A4B  0875               	movf	LCD_Write_Char@Data,w
  6860  0A4C  00F4               	movwf	??_LCD_Write_Char
  6861  0A4D  3003               	movlw	3
  6862  0A4E                     u1625:
  6863  0A4E  35F4               	lslf	??_LCD_Write_Char,f
  6864  0A4F  3EFF               	addlw	-1
  6865  0A50  1D03               	skipz
  6866  0A51  2A4E               	goto	u1625
  6867  0A52  3574               	lslf	??_LCD_Write_Char,w
  6868  0A53  39F0               	andlw	240
  6869  0A54  318A  2218  318A   	fcall	_LCD_Write_4Bit
  6870  0A57                     l216:
  6871  0A57  0008               	return
  6872  0A58                     __end_of_LCD_Write_Char:
  6873                           
  6874                           	psect	text28
  6875  0B3C                     __ptext28:	
  6876 ;; *************** function _LCD_Set_Cursor *****************
  6877 ;; Defined at:
  6878 ;;		line 167 in file "I2C_LCD.c"
  6879 ;; Parameters:    Size  Location     Type
  6880 ;;  ROW             1    wreg     unsigned char 
  6881 ;;  COL             1    6[COMMON] unsigned char 
  6882 ;; Auto vars:     Size  Location     Type
  6883 ;;  ROW             1    9[COMMON] unsigned char 
  6884 ;; Return value:  Size  Location     Type
  6885 ;;                  1    wreg      void 
  6886 ;; Registers used:
  6887 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6888 ;; Tracked objects:
  6889 ;;		On entry : 0/0
  6890 ;;		On exit  : 0/0
  6891 ;;		Unchanged: 0/0
  6892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6893 ;;      Params:         1       0       0       0       0       0       0       0
  6894 ;;      Locals:         1       0       0       0       0       0       0       0
  6895 ;;      Temps:          2       0       0       0       0       0       0       0
  6896 ;;      Totals:         4       0       0       0       0       0       0       0
  6897 ;;Total ram usage:        4 bytes
  6898 ;; Hardware stack levels used:    1
  6899 ;; Hardware stack levels required when called:    5
  6900 ;; This function calls:
  6901 ;;		_LCD_CMD
  6902 ;; This function is called by:
  6903 ;;		_PutVariables
  6904 ;;		_PutTexto
  6905 ;;		_TanqueLLeno
  6906 ;;		_TanqueVacio
  6907 ;;		_CondicionesDeRiego
  6908 ;; This function uses a non-reentrant model
  6909 ;;
  6910                           
  6911                           
  6912                           ;psect for function _LCD_Set_Cursor
  6913  0B3C                     _LCD_Set_Cursor:
  6914                           
  6915                           ;incstack = 0
  6916                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6917                           ;LCD_Set_Cursor@ROW stored from wreg
  6918  0B3C  00F9               	movwf	LCD_Set_Cursor@ROW
  6919  0B3D                     l2197:
  6920                           
  6921                           ;I2C_LCD.c: 167: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);I2C_LCD.c: 16
      +                          8: {;I2C_LCD.c: 169:   switch(ROW)
  6922  0B3D  2B56               	goto	l2207
  6923  0B3E                     l2199:
  6924                           
  6925                           ;I2C_LCD.c: 172:       LCD_CMD(0xC0 + COL-1);
  6926  0B3E  0876               	movf	LCD_Set_Cursor@COL,w
  6927  0B3F  3EBF               	addlw	191
  6928  0B40  318A  222D  318B   	fcall	_LCD_CMD
  6929                           
  6930                           ;I2C_LCD.c: 173:       break;
  6931  0B43  2B69               	goto	l231
  6932  0B44                     l2201:
  6933                           
  6934                           ;I2C_LCD.c: 175:       LCD_CMD(0x94 + COL-1);
  6935  0B44  0876               	movf	LCD_Set_Cursor@COL,w
  6936  0B45  3E93               	addlw	147
  6937  0B46  318A  222D  318B   	fcall	_LCD_CMD
  6938                           
  6939                           ;I2C_LCD.c: 176:       break;
  6940  0B49  2B69               	goto	l231
  6941  0B4A                     l2203:
  6942                           
  6943                           ;I2C_LCD.c: 178:       LCD_CMD(0xD4 + COL-1);
  6944  0B4A  0876               	movf	LCD_Set_Cursor@COL,w
  6945  0B4B  3ED3               	addlw	211
  6946  0B4C  318A  222D  318B   	fcall	_LCD_CMD
  6947                           
  6948                           ;I2C_LCD.c: 179:       break;
  6949  0B4F  2B69               	goto	l231
  6950  0B50                     l2205:
  6951                           
  6952                           ;I2C_LCD.c: 182:       LCD_CMD(0x80 + COL-1);
  6953  0B50  0876               	movf	LCD_Set_Cursor@COL,w
  6954  0B51  3E7F               	addlw	127
  6955  0B52  318A  222D  318B   	fcall	_LCD_CMD
  6956                           
  6957                           ;I2C_LCD.c: 183:   }
  6958  0B55  2B69               	goto	l231
  6959  0B56                     l2207:
  6960  0B56  0879               	movf	LCD_Set_Cursor@ROW,w
  6961  0B57  00F7               	movwf	??_LCD_Set_Cursor
  6962  0B58  01F8               	clrf	??_LCD_Set_Cursor+1
  6963                           
  6964                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6965                           ; Switch size 1, requested type "simple"
  6966                           ; Number of cases is 1, Range of values is 0 to 0
  6967                           ; switch strategies available:
  6968                           ; Name         Instructions Cycles
  6969                           ; simple_byte            4     3 (average)
  6970                           ; direct_byte            8     6 (fixed)
  6971                           ; jumptable            260     6 (fixed)
  6972                           ;	Chosen strategy is simple_byte
  6973  0B59  0878               	movf	??_LCD_Set_Cursor+1,w
  6974  0B5A  3A00               	xorlw	0	; case 0
  6975  0B5B  1903               	skipnz
  6976  0B5C  2B5E               	goto	l2837
  6977  0B5D  2B50               	goto	l2205
  6978  0B5E                     l2837:
  6979                           
  6980                           ; Switch size 1, requested type "simple"
  6981                           ; Number of cases is 3, Range of values is 2 to 4
  6982                           ; switch strategies available:
  6983                           ; Name         Instructions Cycles
  6984                           ; simple_byte           10     6 (average)
  6985                           ; direct_byte           15     9 (fixed)
  6986                           ; jumptable            263     9 (fixed)
  6987                           ;	Chosen strategy is simple_byte
  6988  0B5E  0877               	movf	??_LCD_Set_Cursor,w
  6989  0B5F  3A02               	xorlw	2	; case 2
  6990  0B60  1903               	skipnz
  6991  0B61  2B3E               	goto	l2199
  6992  0B62  3A01               	xorlw	1	; case 3
  6993  0B63  1903               	skipnz
  6994  0B64  2B44               	goto	l2201
  6995  0B65  3A07               	xorlw	7	; case 4
  6996  0B66  1903               	skipnz
  6997  0B67  2B4A               	goto	l2203
  6998  0B68  2B50               	goto	l2205
  6999  0B69                     l231:
  7000  0B69  0008               	return
  7001  0B6A                     __end_of_LCD_Set_Cursor:
  7002                           
  7003                           	psect	text29
  7004  0A2D                     __ptext29:	
  7005 ;; *************** function _LCD_CMD *****************
  7006 ;; Defined at:
  7007 ;;		line 147 in file "I2C_LCD.c"
  7008 ;; Parameters:    Size  Location     Type
  7009 ;;  CMD             1    wreg     unsigned char 
  7010 ;; Auto vars:     Size  Location     Type
  7011 ;;  CMD             1    5[COMMON] unsigned char 
  7012 ;; Return value:  Size  Location     Type
  7013 ;;                  1    wreg      void 
  7014 ;; Registers used:
  7015 ;;		wreg, status,2, status,0, pclath, cstack
  7016 ;; Tracked objects:
  7017 ;;		On entry : 0/0
  7018 ;;		On exit  : 0/0
  7019 ;;		Unchanged: 0/0
  7020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7021 ;;      Params:         0       0       0       0       0       0       0       0
  7022 ;;      Locals:         1       0       0       0       0       0       0       0
  7023 ;;      Temps:          1       0       0       0       0       0       0       0
  7024 ;;      Totals:         2       0       0       0       0       0       0       0
  7025 ;;Total ram usage:        2 bytes
  7026 ;; Hardware stack levels used:    1
  7027 ;; Hardware stack levels required when called:    4
  7028 ;; This function calls:
  7029 ;;		_LCD_Write_4Bit
  7030 ;; This function is called by:
  7031 ;;		_LCD_Init
  7032 ;;		_LCD_Set_Cursor
  7033 ;;		_LCD_SL
  7034 ;;		_LCD_SR
  7035 ;;		_LCD_Clear
  7036 ;; This function uses a non-reentrant model
  7037 ;;
  7038                           
  7039                           
  7040                           ;psect for function _LCD_CMD
  7041  0A2D                     _LCD_CMD:
  7042                           
  7043                           ;incstack = 0
  7044                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  7045                           ;LCD_CMD@CMD stored from wreg
  7046  0A2D  00F5               	movwf	LCD_CMD@CMD
  7047  0A2E                     l1909:
  7048                           
  7049                           ;I2C_LCD.c: 147: void LCD_CMD(unsigned char CMD);I2C_LCD.c: 148: {;I2C_LCD.c: 149:   RS 
      +                          = 0;
  7050  0A2E  0141               	movlb	1	; select bank1
  7051  0A2F  01AD               	clrf	_RS^(0+128)
  7052  0A30                     l1911:
  7053                           
  7054                           ;I2C_LCD.c: 150:   LCD_Write_4Bit(CMD & 0xF0);
  7055  0A30  0875               	movf	LCD_CMD@CMD,w
  7056  0A31  39F0               	andlw	240
  7057  0A32  318A  2218  318A   	fcall	_LCD_Write_4Bit
  7058  0A35                     l1913:
  7059                           
  7060                           ;I2C_LCD.c: 151:   LCD_Write_4Bit((CMD << 4) & 0xF0);
  7061  0A35  0875               	movf	LCD_CMD@CMD,w
  7062  0A36  00F4               	movwf	??_LCD_CMD
  7063  0A37  3003               	movlw	3
  7064  0A38                     u1615:
  7065  0A38  35F4               	lslf	??_LCD_CMD,f
  7066  0A39  3EFF               	addlw	-1
  7067  0A3A  1D03               	skipz
  7068  0A3B  2A38               	goto	u1615
  7069  0A3C  3574               	lslf	??_LCD_CMD,w
  7070  0A3D  39F0               	andlw	240
  7071  0A3E  318A  2218  318A   	fcall	_LCD_Write_4Bit
  7072  0A41                     l213:
  7073  0A41  0008               	return
  7074  0A42                     __end_of_LCD_CMD:
  7075                           
  7076                           	psect	text30
  7077  0A18                     __ptext30:	
  7078 ;; *************** function _LCD_Write_4Bit *****************
  7079 ;; Defined at:
  7080 ;;		line 138 in file "I2C_LCD.c"
  7081 ;; Parameters:    Size  Location     Type
  7082 ;;  Nibble          1    wreg     unsigned char 
  7083 ;; Auto vars:     Size  Location     Type
  7084 ;;  Nibble          1    3[COMMON] unsigned char 
  7085 ;; Return value:  Size  Location     Type
  7086 ;;                  1    wreg      void 
  7087 ;; Registers used:
  7088 ;;		wreg, status,2, status,0, pclath, cstack
  7089 ;; Tracked objects:
  7090 ;;		On entry : 0/0
  7091 ;;		On exit  : 0/0
  7092 ;;		Unchanged: 0/0
  7093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7094 ;;      Params:         0       0       0       0       0       0       0       0
  7095 ;;      Locals:         1       0       0       0       0       0       0       0
  7096 ;;      Temps:          1       0       0       0       0       0       0       0
  7097 ;;      Totals:         2       0       0       0       0       0       0       0
  7098 ;;Total ram usage:        2 bytes
  7099 ;; Hardware stack levels used:    1
  7100 ;; Hardware stack levels required when called:    3
  7101 ;; This function calls:
  7102 ;;		_IO_Expander_Write
  7103 ;; This function is called by:
  7104 ;;		_LCD_CMD
  7105 ;;		_LCD_Write_Char
  7106 ;; This function uses a non-reentrant model
  7107 ;;
  7108                           
  7109                           
  7110                           ;psect for function _LCD_Write_4Bit
  7111  0A18                     _LCD_Write_4Bit:
  7112                           
  7113                           ;incstack = 0
  7114                           ; Regs used in _LCD_Write_4Bit: [wreg+status,2+status,0+pclath+cstack]
  7115                           ;LCD_Write_4Bit@Nibble stored from wreg
  7116  0A18  00F3               	movwf	LCD_Write_4Bit@Nibble
  7117  0A19                     l1903:
  7118                           
  7119                           ;I2C_LCD.c: 138: void LCD_Write_4Bit(unsigned char Nibble);I2C_LCD.c: 139: {;I2C_LCD.c: 
      +                          141:   Nibble |= RS;
  7120  0A19  0141               	movlb	1	; select bank1
  7121  0A1A  082D               	movf	_RS^(0+128),w
  7122  0A1B  00F2               	movwf	??_LCD_Write_4Bit
  7123  0A1C  0872               	movf	??_LCD_Write_4Bit,w
  7124  0A1D  04F3               	iorwf	LCD_Write_4Bit@Nibble,f
  7125  0A1E                     l1905:
  7126                           
  7127                           ;I2C_LCD.c: 142:   IO_Expander_Write(Nibble | 0x04);
  7128  0A1E  0873               	movf	LCD_Write_4Bit@Nibble,w
  7129  0A1F  3804               	iorlw	4
  7130  0A20  318A  2205  318A   	fcall	_IO_Expander_Write
  7131  0A23                     l1907:
  7132                           
  7133                           ;I2C_LCD.c: 143:   IO_Expander_Write(Nibble & 0xFB);
  7134  0A23  0873               	movf	LCD_Write_4Bit@Nibble,w
  7135  0A24  39FB               	andlw	251
  7136  0A25  318A  2205  318A   	fcall	_IO_Expander_Write
  7137                           
  7138                           ;I2C_LCD.c: 144:   _delay((unsigned long)((50)*(32000000/4000000.0)));
  7139  0A28  3085               	movlw	133
  7140  0A29                     u3287:
  7141  0A29  0B89               	decfsz	9,f
  7142  0A2A  2A29               	goto	u3287
  7143  0A2B  0000               	nop
  7144  0A2C                     l210:
  7145  0A2C  0008               	return
  7146  0A2D                     __end_of_LCD_Write_4Bit:
  7147                           
  7148                           	psect	text31
  7149  0A05                     __ptext31:	
  7150 ;; *************** function _IO_Expander_Write *****************
  7151 ;; Defined at:
  7152 ;;		line 130 in file "I2C_LCD.c"
  7153 ;; Parameters:    Size  Location     Type
  7154 ;;  Data            1    wreg     unsigned char 
  7155 ;; Auto vars:     Size  Location     Type
  7156 ;;  Data            1    1[COMMON] unsigned char 
  7157 ;; Return value:  Size  Location     Type
  7158 ;;                  1    wreg      void 
  7159 ;; Registers used:
  7160 ;;		wreg, status,2, status,0, pclath, cstack
  7161 ;; Tracked objects:
  7162 ;;		On entry : 0/0
  7163 ;;		On exit  : 0/0
  7164 ;;		Unchanged: 0/0
  7165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7166 ;;      Params:         0       0       0       0       0       0       0       0
  7167 ;;      Locals:         1       0       0       0       0       0       0       0
  7168 ;;      Temps:          0       0       0       0       0       0       0       0
  7169 ;;      Totals:         1       0       0       0       0       0       0       0
  7170 ;;Total ram usage:        1 bytes
  7171 ;; Hardware stack levels used:    1
  7172 ;; Hardware stack levels required when called:    2
  7173 ;; This function calls:
  7174 ;;		_I2C_Master_Start
  7175 ;;		_I2C_Master_Stop
  7176 ;;		_I2C_Master_Write
  7177 ;; This function is called by:
  7178 ;;		_LCD_Init
  7179 ;;		_LCD_Write_4Bit
  7180 ;;		_Backlight
  7181 ;;		_noBacklight
  7182 ;; This function uses a non-reentrant model
  7183 ;;
  7184                           
  7185                           
  7186                           ;psect for function _IO_Expander_Write
  7187  0A05                     _IO_Expander_Write:
  7188                           
  7189                           ;incstack = 0
  7190                           ; Regs used in _IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
  7191                           ;IO_Expander_Write@Data stored from wreg
  7192  0A05  00F1               	movwf	IO_Expander_Write@Data
  7193  0A06                     l1901:
  7194                           
  7195                           ;I2C_LCD.c: 130: void IO_Expander_Write(unsigned char Data);I2C_LCD.c: 131: {;I2C_LCD.c:
      +                           132:   I2C_Master_Start();
  7196  0A06  3189  21AC  318A   	fcall	_I2C_Master_Start
  7197                           
  7198                           ;I2C_LCD.c: 133:   I2C_Master_Write(i2c_add);
  7199  0A09  0141               	movlb	1	; select bank1
  7200  0A0A  082C               	movf	_i2c_add^(0+128),w
  7201  0A0B  3189  21F2  318A   	fcall	_I2C_Master_Write
  7202                           
  7203                           ;I2C_LCD.c: 134:   I2C_Master_Write(Data | BackLight_State);
  7204  0A0E  0871               	movf	IO_Expander_Write@Data,w
  7205  0A0F  0141               	movlb	1	; select bank1
  7206  0A10  0442               	iorwf	_BackLight_State^(0+128),w
  7207  0A11  3189  21F2  318A   	fcall	_I2C_Master_Write
  7208                           
  7209                           ;I2C_LCD.c: 135:   I2C_Master_Stop();
  7210  0A14  3189  21B2  318A   	fcall	_I2C_Master_Stop
  7211  0A17                     l207:
  7212  0A17  0008               	return
  7213  0A18                     __end_of_IO_Expander_Write:
  7214                           
  7215                           	psect	text32
  7216  09F2                     __ptext32:	
  7217 ;; *************** function _I2C_Master_Write *****************
  7218 ;; Defined at:
  7219 ;;		line 77 in file "I2C_LCD.c"
  7220 ;; Parameters:    Size  Location     Type
  7221 ;;  data            1    wreg     unsigned char 
  7222 ;; Auto vars:     Size  Location     Type
  7223 ;;  data            1    0[COMMON] unsigned char 
  7224 ;; Return value:  Size  Location     Type
  7225 ;;                  1    wreg      unsigned char 
  7226 ;; Registers used:
  7227 ;;		wreg, status,2, status,0, pclath, cstack
  7228 ;; Tracked objects:
  7229 ;;		On entry : 0/0
  7230 ;;		On exit  : 0/0
  7231 ;;		Unchanged: 0/0
  7232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7233 ;;      Params:         0       0       0       0       0       0       0       0
  7234 ;;      Locals:         1       0       0       0       0       0       0       0
  7235 ;;      Temps:          0       0       0       0       0       0       0       0
  7236 ;;      Totals:         1       0       0       0       0       0       0       0
  7237 ;;Total ram usage:        1 bytes
  7238 ;; Hardware stack levels used:    1
  7239 ;; Hardware stack levels required when called:    1
  7240 ;; This function calls:
  7241 ;;		_I2C_Master_Wait
  7242 ;; This function is called by:
  7243 ;;		_IO_Expander_Write
  7244 ;; This function uses a non-reentrant model
  7245 ;;
  7246                           
  7247                           
  7248                           ;psect for function _I2C_Master_Write
  7249  09F2                     _I2C_Master_Write:
  7250                           
  7251                           ;incstack = 0
  7252                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  7253                           ;I2C_Master_Write@data stored from wreg
  7254  09F2  00F0               	movwf	I2C_Master_Write@data
  7255  09F3                     l1889:
  7256                           
  7257                           ;I2C_LCD.c: 77: unsigned char I2C_Master_Write(unsigned char data);I2C_LCD.c: 78: {;I2C_
      +                          LCD.c: 79:     I2C_Master_Wait();
  7258  09F3  3189  21D4  3189   	fcall	_I2C_Master_Wait
  7259  09F6                     l1891:
  7260                           
  7261                           ;I2C_LCD.c: 80:     PIR1bits.SSP1IF = 0;
  7262  09F6  014E               	movlb	14	; select bank14
  7263  09F7  108D               	bcf	13,1	;volatile
  7264  09F8                     l1893:
  7265                           
  7266                           ;I2C_LCD.c: 81:     PIR1bits.BCL1IF = 0;
  7267  09F8  110D               	bcf	13,2	;volatile
  7268  09F9                     l1895:
  7269                           
  7270                           ;I2C_LCD.c: 82:     SSP1BUF = data;
  7271  09F9  0870               	movf	I2C_Master_Write@data,w
  7272  09FA  0143               	movlb	3	; select bank3
  7273  09FB  008C               	movwf	12	;volatile
  7274  09FC                     l192:	
  7275                           ;I2C_LCD.c: 84:     while(!PIR1bits.SSP1IF);
  7276                           
  7277  09FC  014E               	movlb	14	; select bank14
  7278  09FD  1C8D               	btfss	13,1	;volatile
  7279  09FE  2A00               	goto	u1601
  7280  09FF  2A01               	goto	u1600
  7281  0A00                     u1601:
  7282  0A00  29FC               	goto	l192
  7283  0A01                     u1600:
  7284  0A01                     l194:
  7285                           
  7286                           ;I2C_LCD.c: 85:  PIR1bits.SSP1IF = 0;
  7287  0A01  108D               	bcf	13,1	;volatile
  7288  0A02                     l1897:
  7289                           
  7290                           ;I2C_LCD.c: 86:     return SSP1CON2bits.ACKSTAT;;	Return value of _I2C_Master_Write is n
      +                          ever used
  7291  0A02  0143               	movlb	3	; select bank3
  7292  0A03  0811               	movf	17,w	;volatile
  7293  0A04                     l195:
  7294  0A04  0008               	return
  7295  0A05                     __end_of_I2C_Master_Write:
  7296                           
  7297                           	psect	text33
  7298  09B2                     __ptext33:	
  7299 ;; *************** function _I2C_Master_Stop *****************
  7300 ;; Defined at:
  7301 ;;		line 57 in file "I2C_LCD.c"
  7302 ;; Parameters:    Size  Location     Type
  7303 ;;		None
  7304 ;; Auto vars:     Size  Location     Type
  7305 ;;		None
  7306 ;; Return value:  Size  Location     Type
  7307 ;;                  1    wreg      void 
  7308 ;; Registers used:
  7309 ;;		wreg, status,2, status,0, pclath, cstack
  7310 ;; Tracked objects:
  7311 ;;		On entry : 0/0
  7312 ;;		On exit  : 0/0
  7313 ;;		Unchanged: 0/0
  7314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7315 ;;      Params:         0       0       0       0       0       0       0       0
  7316 ;;      Locals:         0       0       0       0       0       0       0       0
  7317 ;;      Temps:          0       0       0       0       0       0       0       0
  7318 ;;      Totals:         0       0       0       0       0       0       0       0
  7319 ;;Total ram usage:        0 bytes
  7320 ;; Hardware stack levels used:    1
  7321 ;; Hardware stack levels required when called:    1
  7322 ;; This function calls:
  7323 ;;		_I2C_Master_Wait
  7324 ;; This function is called by:
  7325 ;;		_LCD_Init
  7326 ;;		_IO_Expander_Write
  7327 ;; This function uses a non-reentrant model
  7328 ;;
  7329                           
  7330                           
  7331                           ;psect for function _I2C_Master_Stop
  7332  09B2                     _I2C_Master_Stop:
  7333  09B2                     l1885:	
  7334                           ;incstack = 0
  7335                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  7336                           
  7337                           
  7338                           ;I2C_LCD.c: 59:     I2C_Master_Wait();
  7339  09B2  3189  21D4  3189   	fcall	_I2C_Master_Wait
  7340  09B5                     l1887:
  7341                           
  7342                           ;I2C_LCD.c: 60:     SSP1CON2bits.PEN = 1;
  7343  09B5  0143               	movlb	3	; select bank3
  7344  09B6  1511               	bsf	17,2	;volatile
  7345  09B7                     l183:
  7346  09B7  0008               	return
  7347  09B8                     __end_of_I2C_Master_Stop:
  7348                           
  7349                           	psect	text34
  7350  09AC                     __ptext34:	
  7351 ;; *************** function _I2C_Master_Start *****************
  7352 ;; Defined at:
  7353 ;;		line 45 in file "I2C_LCD.c"
  7354 ;; Parameters:    Size  Location     Type
  7355 ;;		None
  7356 ;; Auto vars:     Size  Location     Type
  7357 ;;		None
  7358 ;; Return value:  Size  Location     Type
  7359 ;;                  1    wreg      void 
  7360 ;; Registers used:
  7361 ;;		wreg, status,2, status,0, pclath, cstack
  7362 ;; Tracked objects:
  7363 ;;		On entry : 0/0
  7364 ;;		On exit  : 0/0
  7365 ;;		Unchanged: 0/0
  7366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7367 ;;      Params:         0       0       0       0       0       0       0       0
  7368 ;;      Locals:         0       0       0       0       0       0       0       0
  7369 ;;      Temps:          0       0       0       0       0       0       0       0
  7370 ;;      Totals:         0       0       0       0       0       0       0       0
  7371 ;;Total ram usage:        0 bytes
  7372 ;; Hardware stack levels used:    1
  7373 ;; Hardware stack levels required when called:    1
  7374 ;; This function calls:
  7375 ;;		_I2C_Master_Wait
  7376 ;; This function is called by:
  7377 ;;		_LCD_Init
  7378 ;;		_IO_Expander_Write
  7379 ;; This function uses a non-reentrant model
  7380 ;;
  7381                           
  7382                           
  7383                           ;psect for function _I2C_Master_Start
  7384  09AC                     _I2C_Master_Start:
  7385  09AC                     l1881:	
  7386                           ;incstack = 0
  7387                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  7388                           
  7389                           
  7390                           ;I2C_LCD.c: 47:     I2C_Master_Wait();
  7391  09AC  3189  21D4  3189   	fcall	_I2C_Master_Wait
  7392  09AF                     l1883:
  7393                           
  7394                           ;I2C_LCD.c: 48:     SSP1CON2bits.SEN = 1;
  7395  09AF  0143               	movlb	3	; select bank3
  7396  09B0  1411               	bsf	17,0	;volatile
  7397  09B1                     l177:
  7398  09B1  0008               	return
  7399  09B2                     __end_of_I2C_Master_Start:
  7400                           
  7401                           	psect	text35
  7402  09D4                     __ptext35:	
  7403 ;; *************** function _I2C_Master_Wait *****************
  7404 ;; Defined at:
  7405 ;;		line 40 in file "I2C_LCD.c"
  7406 ;; Parameters:    Size  Location     Type
  7407 ;;		None
  7408 ;; Auto vars:     Size  Location     Type
  7409 ;;		None
  7410 ;; Return value:  Size  Location     Type
  7411 ;;                  1    wreg      void 
  7412 ;; Registers used:
  7413 ;;		wreg, status,2
  7414 ;; Tracked objects:
  7415 ;;		On entry : 0/0
  7416 ;;		On exit  : 0/0
  7417 ;;		Unchanged: 0/0
  7418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7419 ;;      Params:         0       0       0       0       0       0       0       0
  7420 ;;      Locals:         0       0       0       0       0       0       0       0
  7421 ;;      Temps:          0       0       0       0       0       0       0       0
  7422 ;;      Totals:         0       0       0       0       0       0       0       0
  7423 ;;Total ram usage:        0 bytes
  7424 ;; Hardware stack levels used:    1
  7425 ;; This function calls:
  7426 ;;		Nothing
  7427 ;; This function is called by:
  7428 ;;		_I2C_Master_Start
  7429 ;;		_I2C_Master_Stop
  7430 ;;		_I2C_Master_Write
  7431 ;;		_I2C_Master_RepeatedStart
  7432 ;;		_I2C_ACK
  7433 ;;		_I2C_NACK
  7434 ;;		_I2C_Read_Byte
  7435 ;; This function uses a non-reentrant model
  7436 ;;
  7437                           
  7438                           
  7439                           ;psect for function _I2C_Master_Wait
  7440  09D4                     _I2C_Master_Wait:
  7441  09D4                     l1877:	
  7442                           ;incstack = 0
  7443                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  7444                           
  7445  09D4                     l171:	
  7446                           ;I2C_LCD.c: 42:     while ((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
  7447                           
  7448  09D4  0143               	movlb	3	; select bank3
  7449  09D5  190F               	btfsc	15,2	;volatile
  7450  09D6  29D8               	goto	u1581
  7451  09D7  29D9               	goto	u1580
  7452  09D8                     u1581:
  7453  09D8  29D4               	goto	l171
  7454  09D9                     u1580:
  7455  09D9                     l1879:
  7456  09D9  0811               	movf	17,w	;volatile
  7457  09DA  391F               	andlw	31
  7458  09DB  1D03               	btfss	3,2
  7459  09DC  29DE               	goto	u1591
  7460  09DD  29DF               	goto	u1590
  7461  09DE                     u1591:
  7462  09DE  29D4               	goto	l171
  7463  09DF                     u1590:
  7464  09DF                     l174:
  7465  09DF  0008               	return
  7466  09E0                     __end_of_I2C_Master_Wait:
  7467  007E                     btemp	set	126	;btemp
  7468  007E                     wtemp0	set	126
  7469                           
  7470                           	psect	config
  7471                           
  7472                           ;Config register CONFIG1 @ 0x8007
  7473                           ;	External Oscillator Mode Selection bits
  7474                           ;	FEXTOSC = OFF, Oscillator not enabled
  7475                           ;	Power-up Default Value for COSC bits
  7476                           ;	RSTOSC = HFINTOSC_32MHZ, HFINTOSC (32 MHz)
  7477                           ;	Clock Out Enable bit
  7478                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  7479                           ;	VDD Range Analog Calibration Selection bit
  7480                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  7481  8007                     	org	32775
  7482  8007  3FCD               	dw	16333
  7483                           
  7484                           ;Config register CONFIG2 @ 0x8008
  7485                           ;	Master Clear Enable bit
  7486                           ;	MCLRE = INTMCLR, If LVP = 0, MCLR pin is port defined function; If LVP = 1, RA3 pin fu
      +                          nction is MCLR
  7487                           ;	Power-up Timer Selection bits
  7488                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  7489                           ;	WDT Operating Mode bits
  7490                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  7491                           ;	Brown-out Reset Enable bits
  7492                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  7493                           ;	Brown-out Reset Voltage Selection bit
  7494                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  7495                           ;	PPSLOCKED One-Way Set Enable bit
  7496                           ;	PPS1WAY = ON, The PPSLOCKED bit can be cleared and set only once in software
  7497                           ;	Stack Overflow/Underflow Reset Enable bit
  7498                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  7499  8008                     	org	32776
  7500  8008  3FE6               	dw	16358
  7501                           
  7502                           ;Config register CONFIG4 @ 0x800A
  7503                           ;	Boot Block Size Selection bits
  7504                           ;	BBSIZE = BB512, 512 words boot block size
  7505                           ;	Boot Block Enable bit
  7506                           ;	BBEN = OFF, Boot Block is disabled
  7507                           ;	SAF Enable bit
  7508                           ;	SAFEN = OFF, SAF is disabled
  7509                           ;	Application Block Write Protection bit
  7510                           ;	WRTAPP = OFF, Application Block is not write-protected
  7511                           ;	Boot Block Write Protection bit
  7512                           ;	WRTB = OFF, Boot Block is not write-protected
  7513                           ;	Configuration Registers Write Protection bit
  7514                           ;	WRTC = OFF, Configuration Registers are not write-protected
  7515                           ;	Storage Area Flash (SAF) Write Protection bit
  7516                           ;	WRTSAF = OFF, SAF is not write-protected
  7517                           ;	Low Voltage Programming Enable bit
  7518                           ;	LVP = OFF, High Voltage on MCLR/Vpp must be used for programming
  7519  800A                     	org	32778
  7520  800A  1FFF               	dw	8191
  7521                           
  7522                           ;Config register CONFIG5 @ 0x800B
  7523                           ;	User Program Flash Memory Code Protection bit
  7524                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  7525  800B                     	org	32779
  7526  800B  3FFF               	dw	16383

Data Sizes:
    Strings     57
    Constant    64
    Data        1
    BSS         36
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      80
    BANK1            80      0      35
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    ftoa@status	PTR int  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    ftoa@cp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    LCD_Write_String@Str	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK1[17]), STR_7(CODE[9]), STR_6(CODE[9]), 
		 -> STR_5(CODE[9]), STR_4(CODE[9]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> STR_1(CODE[4]), 

    texH	PTR unsigned char  size(1) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK1[17]), 

    texT	PTR unsigned char  size(1) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK1[17]), 

    sp__ftoa	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    status	PTR int  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    texuv	PTR unsigned char  size(1) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK1[17]), 


Critical Paths under _main in COMMON

    _inicio->_PutTexto
    _PutTexto->_LCD_Write_String
    _LCD_Init->_LCD_CMD
    _TanqueVacio->_LCD_Write_String
    _TanqueLLeno->_LCD_Write_String
    _sprintf->___lldiv
    ___llmod->___lldiv
    ___flsub->___xxtofl
    _LeerSensores->___xxtofl
    ___xxtofl->_LeerAdc
    ___flmul->___xxtofl
    ___fladd->___xxtofl
    _CondicionesDeRiego->___flge
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write

Critical Paths under _main in BANK0

    _main->_PutVariables
    _PutVariables->_ftoa
    _ftoa->___flsub
    _sprintf->___llmod
    ___fltol->___flmul
    ___flsub->___fladd
    _LeerSensores->___fladd
    ___flmul->___xxtofl
    ___fladd->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   26112
                                             76 BANK0      2     2      0
                 _CondicionesDeRiego
                        _Iniciar_ADC
                       _LeerSensores
                       _PutVariables
                        _TanqueLLeno
                        _TanqueVacio
                             _inicio
 ---------------------------------------------------------------------------------
 (1) _inicio                                               0     0      0    2109
                    _I2C_Master_Init
                           _LCD_Init
                           _PutTexto
 ---------------------------------------------------------------------------------
 (2) _PutTexto                                             1     1      0    1910
                                             11 COMMON     1     1      0
                     _LCD_Set_Cursor
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             3     3      0     199
                                              6 COMMON     3     3      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TanqueVacio                                          1     1      0    1910
                                             11 COMMON     1     1      0
                     _LCD_Set_Cursor
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (1) _TanqueLLeno                                          2     2      0    1910
                                             11 COMMON     2     2      0
                     _LCD_Set_Cursor
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (1) _PutVariables                                         1     1      0   11826
                                             75 BANK0      1     1      0
                     _LCD_Set_Cursor
                   _LCD_Write_String
                               _ftoa
 ---------------------------------------------------------------------------------
 (2) _ftoa                                                15    10      5    9916
                                             60 BANK0     15    10      5
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             36    26     10    2110
                                             10 BANK0     28    18     10
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___llmod                                             10     2      8     311
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     381
                                             32 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2485
                                             52 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _LeerSensores                                         4     4      0    5809
                                             52 BANK0      4     4      0
                            _LeerAdc
                            ___fladd
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     626
                                              5 COMMON     8     4      4
                                              0 BANK0      6     6      0
                            _LeerAdc (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    2873
                                              6 BANK0     26    18      8
                            _LeerAdc (ARG)
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2288
                                             32 BANK0     20    12      8
                            _LeerAdc (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _LeerAdc                                              5     3      2      22
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Iniciar_ADC                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CondicionesDeRiego                                   1     1      0    2548
                                             12 COMMON     1     1      0
                     _LCD_Set_Cursor
                   _LCD_Write_String
                             ___flge
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     638
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_String                                     5     3      2     983
                                              6 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_Char                                       2     2      0     133
                                              4 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (3) _LCD_Set_Cursor                                       4     3      1     927
                                              6 COMMON     4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (4) _LCD_CMD                                              2     2      0     133
                                              4 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (5) _LCD_Write_4Bit                                       2     2      0      89
                                              2 COMMON     2     2      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (6) _IO_Expander_Write                                    1     1      0      44
                                              1 COMMON     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (7) _I2C_Master_Write                                     1     1      0      22
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (7) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (7) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (8) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CondicionesDeRiego
     _LCD_Set_Cursor
       _LCD_CMD
         _LCD_Write_4Bit
           _IO_Expander_Write
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Write_4Bit
           _IO_Expander_Write
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
     ___flge
   _Iniciar_ADC
   _LeerSensores
     _LeerAdc
     ___fladd
       _LeerAdc (ARG)
       ___flmul (ARG)
         _LeerAdc (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _LeerAdc (ARG)
       ___xxtofl (ARG)
         _LeerAdc (ARG)
     ___flmul
       _LeerAdc (ARG)
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
         _LeerAdc (ARG)
     ___xxtofl
       _LeerAdc (ARG)
   _PutVariables
     _LCD_Set_Cursor
       _LCD_CMD
         _LCD_Write_4Bit
           _IO_Expander_Write
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Write_4Bit
           _IO_Expander_Write
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
     _ftoa
       ___flge
       ___flmul
         _LeerAdc (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _LeerAdc (ARG)
       ___flneg
       ___flsub
         ___fladd
           _LeerAdc (ARG)
           ___flmul (ARG)
             _LeerAdc (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _LeerAdc (ARG)
           ___xxtofl (ARG)
             _LeerAdc (ARG)
         ___xxtofl (ARG)
           _LeerAdc (ARG)
       ___fltol
         ___flmul (ARG)
           _LeerAdc (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _LeerAdc (ARG)
       ___xxtofl
         _LeerAdc (ARG)
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         _isdigit
   _TanqueLLeno
     _LCD_Set_Cursor
       _LCD_CMD
         _LCD_Write_4Bit
           _IO_Expander_Write
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Write_4Bit
           _IO_Expander_Write
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
   _TanqueVacio
     _LCD_Set_Cursor
       _LCD_CMD
         _LCD_Write_4Bit
           _IO_Expander_Write
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Write_4Bit
           _IO_Expander_Write
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
   _inicio
     _I2C_Master_Init
     _LCD_Init
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _IO_Expander_Write
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
       _LCD_CMD
         _LCD_Write_4Bit
           _IO_Expander_Write
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
     _PutTexto
       _LCD_Set_Cursor
         _LCD_CMD
           _LCD_Write_4Bit
             _IO_Expander_Write
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
       _LCD_Write_String
         _LCD_Write_Char
           _LCD_Write_4Bit
             _IO_Expander_Write
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      81       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4E      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      23       8       43.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      81      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun May 23 22:32:36 2021

                         l80 0AAB                           l83 0AB3                           l92 09D3  
                         l77 09BD                           l86 009D                           l95 0166  
                         l89 0B3B                           _RS 00AD          ___wmul@multiplicand 0072  
        __Umul8_16@word_mpld 0076                          l102 0B97                          l111 0CB4  
                        l210 0A2C                          l106 0BCA                          l204 0E0C  
                        l213 0A41                          l109 0CA3                          l222 0A74  
                        l207 0A17                          l231 0B69                          l216 0A57  
                        l314 0A7F                          l171 09D4                          l500 0D83  
                        l316 0A93                          l174 09DF                          l510 0D83  
                        l350 0D0E                          l183 09B7                          l192 09FC  
                        l168 0AF4                          l177 09B1                          l194 0A01  
                        l195 0A04                          l611 045D                          l507 0D6E  
                        l620 0595                          l613 0439                          l607 03BC  
                        l703 07EC                          l632 0511                          l536 0C5D  
                        l641 056A                          l650 0595                          l722 0B07  
                        l491 0E7D                          l715 07E0                          l492 0E96  
                        l628 04EF                          l724 0B17                          l709 0768  
                        l653 0AD3                          l638 0533                          l823 09F1  
                        l807 02C1                          l488 0E29                          l760 0F0F  
                        l496 09C8                          l649 058C                          l761 0F1B  
                        l753 0EF5                          l818 035D                          l770 0FFF  
                        l747 0EBA                          l749 0F43                          l796 0208  
                        l799 022F                          _ASH 0877                          _AST 0876  
                        _AUV 0878                          _CUV 0859                          wreg 0009  
               ___flmul@aexp 0038                 ___flmul@bexp 0039                 ___flmul@sign 0033  
               ___flmul@temp 003E                 ___flmul@prod 003A              __end_of_LCD_CMD 0A42  
        LCD_Write_String@Str 0076               _LCD_Set_Cursor 0B3C              __end_of_MAXTEMP 082A  
               ___fltol@exp1 004A                         l2001 0395                         l2011 03A4  
                       l2003 0396                         l2101 04AF                         l2021 03C2  
                       l2013 03A9                         l2005 039A                         l2111 04F7  
                       l2103 04D3                         l2031 03D6                         l2023 03C6  
                       l2015 03B1                         l2007 039E                         l2201 0B44  
                       l2121 0510                         l2113 04FC                         l2105 04D9  
                       l2041 03EA                         l2033 03DA                         l2025 03CA  
                       l2017 03B2                         l2009 039F                         l2203 0B4A  
                       l2123 0515                         l2131 0521                         l2107 04DE  
                       l2051 03FE                         l2043 03EE                         l2035 03DE  
                       l2027 03CE                         l2019 03B4                         l2205 0B50  
                       l2213 0A58                         l2221 0E0D                         l2125 0518  
                       l2117 0505                         l2109 04E7                         l2133 0525  
                       l2061 043D                         l2053 0402                         l2045 03F2  
                       l2037 03E2                         l2029 03D2                         l2301 05AA  
                       l2207 0B56                         l2215 0A5B                         l2231 0E61  
                       l2223 0E21                         l2151 0566                         l2143 0538  
                       l2135 0526                         l2127 051A                         l2119 050C  
                       l2071 0452                         l2063 0443                         l2047 03F6  
                       l2039 03E6                         l2055 0406                         l2311 05C6  
                       l2303 05AF                         l2217 0A65                         l2233 0E65  
                       l2225 0E3D                         l2161 0582                         l2153 056F  
                       l2145 053D                         l2137 052A                         l2129 051F  
                       l2081 046F                         l2065 0445                         l2073 0456  
                       l2057 0407                         l2049 03FA                         l2401 0772  
                       l2321 05D9                         l2313 05CA                         l2305 05B7  
                       l2241 09BE                         l2219 0A69                         l2235 0E93  
                       l2227 0E45                         l2163 0586                         l2155 0574  
                       l2147 0545                         l2139 0530                         l2091 0487  
                       l2083 0477                         l2075 0461                         l2067 0449  
                       l2059 041E                         l2171 0AF6                         l2411 07A7  
                       l2403 077A                         l2331 05F5                         l2323 05E1  
                       l2315 05CE                         l2307 05B9                         l2243 09C6  
                       l2251 0D1B                         l2237 0E95                         l2229 0E49  
                       l2165 0588                         l2157 057C                         l2149 0549  
                       l2093 048B                         l2085 047B                         l2077 0466  
                       l2069 044A                         l2181 0B13                         l2173 0AF8  
                       l2421 07D7                         l2413 07B1                         l2405 077E  
                       l2341 0632                         l2325 05E3                         l2317 05CF  
                       l2309 05C1                         l2245 09C8                         l2261 0D40  
                       l2501 01D1                         l2167 0590                         l2159 0581  
                       l2095 048C                         l2087 047F                         l2175 0AFF  
                       l2423 07DB                         l2415 07BF                         l2407 0796  
                       l2351 067A                         l2343 063F                         l2335 05FE  
                       l2327 05EB                         l2319 05D4                         l2431 0E99  
                       l2271 0D4E                         l2263 0D42                         l2255 0D24  
                       l2191 09EE                         l2503 01D4                         l2511 0205  
                       l2169 0594                         l2097 0494                         l2089 0485  
                       l2177 0B03                         l2425 07DC                         l2417 07C8  
                       l2409 079A                         l2361 06B6                         l2353 0687  
                       l2345 0659                         l2337 060B                         l2329 05F0  
                       l2433 0E9E                         l2281 0D73                         l2265 0D46  
                       l2273 0D5E                         l2257 0D37                         l2249 0D0F  
                       l2193 09F0                         l2185 09E1                         l2521 023E  
                       l2513 020A                         l2505 01E5                         l2601 0F6C  
                       l1641 0ADD                         l1633 0AD4                         l2099 0499  
                       l2179 0B0E                         l2427 07E4                         l2419 07CA  
                       l2371 0707                         l2363 06BD                         l2355 068E  
                       l2347 0666                         l2339 0618                         l2291 0596  
                       l2451 0EE6                         l2443 0ECB                         l2435 0EA2  
                       l2283 0D78                         l2259 0D38                         l2187 09E2  
                       l2531 0262                         l2523 0243                         l2507 01F4  
                       l2611 0FFE                         l2603 0F80                         l1651 0AF2  
                       l1643 0ADE                         l1635 0AD9                         l1901 0A06  
                       l2197 0B3D                         l2381 073C                         l2373 071E  
                       l2365 06D1                         l2357 069B                         l2349 0673  
                       l2293 059C                         l2461 0F13                         l2453 0EEE  
                       l2445 0ED0                         l2437 0EB2                         l2285 0AB4  
                       l2189 09E8                         l2533 0266                         l2525 0250  
                       l2517 020F                         l2509 01F8                         l2605 0F95  
                       l2701 0BC1                         l1645 0AE0                         l1637 0ADA  
                       l2621 0D8D                         l1903 0A19                         l1911 0A30  
                       l2199 0B3E                         l2711 0C93                         l2391 074D  
                       l2383 073D                         l2375 0725                         l2367 06DE  
                       l2359 06A2                         l2295 05A0                         l2471 0F3B  
                       l2463 0F1D                         l2455 0EFC                         l2447 0EDB  
                       l2439 0EC2                         l2287 0AB7                         l2279 0D65  
                       l2551 02B9                         l2543 0290                         l2527 0254  
                       l2519 0233                         l2607 0FBE                         l2703 0BC8  
                       l1647 0AEF                         l1639 0ADB                         l2631 0DB6  
                       l2623 0D91                         l2615 0B18                         l1905 0A1E  
                       l1913 0A35                         l2713 0C9B                         l2705 0C5E  
                       l2393 0751                         l2385 0744                         l2377 0731  
                       l2369 06F2                         l2297 05A4                         l2465 0F31  
                       l2457 0F05                         l2449 0EE2                         l1921 0A77  
                       l2561 02E6                         l2553 02CD                         l2545 029A  
                       l2529 025A                         l2481 017B                         l2609 0FE6  
                       l1649 0AF1                         l2641 0DE0                         l2633 0DBA  
                       l2625 0D94                         l2617 0D85                         l2721 0BD0  
                       l1907 0A23                         l1915 0A43                         l2715 0CA5  
                       l2707 0C76                         l1683 09B8                         l2395 0765  
                       l2379 0738                         l2387 0748                         l2299 05A5  
                       l2467 0F36                         l2459 0F09                         l1923 0A7B  
                       l2563 02EA                         l2571 0339                         l2555 02D6  
                       l2547 02A5                         l2539 0268                         l2491 01A3  
                       l2483 0180                         l2475 0169                         l2651 002B  
                       l2643 0DF0                         l2635 0DC5                         l2627 0DA4  
                       l2619 0D8A                         l2731 0BEB                         l2723 0BD5  
                       l1909 0A2E                         l1917 0A46                         l2709 0C8E  
                       l2389 074C                         l2469 0F3A                         l1941 0CD7  
                       l1933 0CB5                         l1925 0A84                         l2565 02F5  
                       l2557 02D9                         l2549 02AB                         l2493 01B2  
                       l2485 0183                         l2477 016E                         l2573 0345  
                       l2661 006C                         l2653 0033                         l2645 0DFC  
                       l2637 0DCC                         l2629 0DAB                         l2741 0BFA  
                       l2733 0BEE                         l2725 0BE2                         l2717 0BCB  
                       l2583 0A95                         l2399 076D                         l1951 0D00  
                       l1943 0CDE                         l1935 0CC5                         l1927 0A89  
                       l1919 0A75                         l2567 032E                         l2559 02DF  
                       l2575 0359                         l2495 01B6                         l2487 018F  
                       l2479 0174                         l2663 0085                         l2655 003D  
                       l2647 000E                         l2639 0DDC                         l2671 09D0  
                       l2743 0BFD                         l2735 0BF1                         l2727 0BE7  
                       l2719 0BCE                         l1881 09AC                         l2585 0AA5  
                       l2673 009E                         l1945 0CF0                         l1937 0CC8  
                       l1953 0D06                         l1961 0C1F                         l1929 0A8F  
                       l2569 0335                         l2489 0192                         l2497 01C2  
                       l2593 0F44                         l2665 008A                         l2657 005A  
                       l2649 0026                         l2681 0B74                         l2745 0C00  
                       l2737 0BF4                         l2729 0BE9                         l1883 09AF  
                       l1891 09F6                         l2587 0AA9                         l1947 0CF8  
                       l1939 0CD3                         l1971 0C4F                         l1963 0C2A  
                       l2835 0224                         l2499 01CD                         l2595 0F49  
                       l2667 0093                         l2659 0062                         l2683 0B76  
                       l2675 0B6A                         l2691 0B98                         l2747 0C03  
                       l2739 0BF7                         l1877 09D4                         l1885 09B2  
                       l1893 09F8                         l2837 0B5E                         l2589 0AAF  
                       l1981 0368                         l1949 0CF9                         l1965 0C2E  
                       l1973 0C55                         l1957 0C13                         l2597 0F60  
                       l2685 0B7E                         l2677 0B6B                         l2693 0BA9  
                       l2669 09C9                         l1879 09D9                         l1887 09B5  
                       l1895 09F9                         l1991 037F                         l1983 036C  
                       l1967 0C40                         l1959 0C1C                         l2599 0F68  
                       l2687 0B85                         l2679 0B72                         l2695 0BB2  
                       l1897 0A02                         l1889 09F3                         l1993 0380  
                       l1985 036D                         l1977 035E                         l1969 0C48  
                       l2689 0B91                         l2697 0BB6                         l1987 0372  
                       l1995 0382                         l1979 0364                         l2699 0BB9  
                       l1997 038A                         l1989 0377                         l1999 038F  
                       STR_1 0865                         STR_2 086C                         STR_3 0869  
                       STR_4 0847                         STR_5 0850                         STR_6 0835  
                       STR_7 083E                         STR_8 082A                         _CHUM 085D  
                       u2000 048B                         u2001 048A                         u2100 0525  
                       u2020 04AF                         u2101 0524                         u2021 04AE  
                       u2110 052A                         u2030 04DE                         u2111 0529  
                       u2031 04DD                         u2023 04AB                         u2015 048E  
                       u2200 0581                         u2120 0530                         u2040 04F7  
                       u3000 0345                         u2201 0580                         u2121 052F  
                       u2041 04F6                         u3001 0344                         u2210 0586  
                       u2130 0537                         u2050 04FC                         u3010 0359  
                       u2211 0585                         u2131 0536                         u2051 04FB  
                       u3011 0358                         u2300 0E3D                         u2220 0594  
                       u2140 053D                         u2301 0E3C                         u2221 0593  
                       u2141 053C                         u2310 0E49                         u3030 0AAF  
                       u2150 0549                         u2070 0510                         u2230 0B03  
                       u3110 0BB2                         u2311 0E48                         u3031 0AAE  
                       u2151 0548                         u2071 050F                         u2231 0B02  
                       u3111 0BB1                         u1600 0A01                         u2320 0E65  
                       u3120 0C76                         u2160 0557                         u2080 0515  
                       u2400 0D5D                         u3040 0F60                         u3104 0BA9  
                       u1601 0A00                         u2321 0E64                         u3121 0C75  
                       u3025 0A9D                         u2081 0514                         u2065 0506  
                       u2401 0D5C                         u3041 0F5F                         u2330 0E93  
                       u3130 0C8E                         u2170 0566                         u2090 051F  
                       u2250 0B13                         u2410 0D64                         u3050 0B72  
                       u2331 0E92                         u3131 0C8D                         u2171 0565  
                       u2091 051E                         u2251 0B12                         u2411 0D63  
                       u3051 0B71                         u2180 056F                         u2500 05D9  
                       u2340 09C6                         u2260 09E8                         u3060 0B97  
                       u2181 056E                         u2165 0553                         u2245 0B08  
                       u2501 05D8                         u2341 09C5                         u2261 09E7  
                       u3061 0B96                         u2190 0574                         u2510 05F0  
                       u2430 0D73                         u2350 0D1B                         u1710 0CF0  
                       u1630 0A7B                         u2270 09EE                         u3070 0B9F  
                       u1615 0A38                         u2335 0E8F                         u2191 0573  
                       u2511 05EF                         u2431 0D72                         u2351 0D1A  
                       u1711 0CEF                         u1631 0A7A                         u2271 09ED  
                       u3071 0B9C                         u3207 0DBD                         u2280 0A74  
                       u1800 036C                         u2520 05F5                         u2440 0D78  
                       u2360 0D31                         u1625 0A4E                         u2281 0A73  
                       u1801 036B                         u2521 05F4                         u2441 0D77  
                       u2425 0D66                         u1705 0CD8                         u3217 0DC8  
                       u2290 0E21                         u1810 0372                         u2610 074C  
                       u2450 05A4                         u2370 0D46                         u1730 0D06  
                       u3090 0BA7                         u2291 0E20                         u1811 0371  
                       u2611 074B                         u2451 05A3                         u2371 0D45  
                       u1731 0D05                         u1715 0CEC                         u3091 0BA4  
                       u3227 0DD5                         u1580 09D9                         u1900 0428  
                       u1820 0377                         u2700 07DB                         u2620 0751  
                       u2460 05AA                         u2380 0D4D                         u1740 0C1C  
                       u1660 0A8F                         u3084 0BA1                         u1581 09D8  
                       u1901 0426                         u1821 0376                         u2701 07DA  
                       u2621 0750                         u2605 073E                         u2461 05A9  
                       u2381 0D4C                         u2365 0D2D                         u1725 0CFA  
                       u1741 0C1B                         u1661 0A8E                         u1645 0A80  
                       u3237 0DE5                         u3157 0BDB                         u1590 09DF  
                       u1910 0429                         u1830 0395                         u2630 0765  
                       u2550 06FD                         u2470 05AF                         u2710 0E9E  
                       u1670 0CC5                         u1591 09DE                         u1831 0394  
                       u2631 0764                         u2535 0674                         u2471 05AE  
                       u2711 0E9D                         u1671 0CC4                         u1655 0A85  
                       u3247 0DF5                         u3167 0C09                         u1920 043D  
                       u1840 039E                         u2640 076C                         u2560 0714  
                       u2480 05CE                         u2800 0F0F                         u2720 0EA2  
                       u1760 0C2E                         u1921 043C                         u1841 039D  
                       u2641 076B                         u2545 06A3                         u2481 05CD  
                       u2801 0F0E                         u2721 0EA1                         u1761 0C2D  
                       u3257 0E05                         u3177 0D99                         u1930 0449  
                       u1850 03A4                         u2650 0772                         u2490 05D4  
                       u2810 0F13                         u2730 0EC2                         u1690 0CD7  
                       u1770 0C40                         u1931 0448                         u1851 03A3  
                       u2651 0771                         u2555 06F9                         u2491 05D3  
                       u2811 0F12                         u2731 0EC1                         u2395 0D4F  
                       u1691 0CD6                         u1771 0C3F                         u1755 0C20  
                       u3267 0B8A                         u3187 0DA7                         u1860 03A9  
                       u2660 077E                         u2820 0F27                         u2900 0233  
                       u3277 0AA6                         u1861 03A8                         u2661 077D  
                       u2565 0710                         u1685 0CC9                         u2901 0232  
                       u3197 0DB2                         u1950 045D                         u1870 03C2  
                       u2670 078C                         u2590 073C                         u2830 0F36  
                       u2750 0EE1                         u1790 0C55                         u2910 025A  
                       u3287 0A29                         u1951 045C                         u1871 03C1  
                       u2591 073B                         u2575 071F                         u2831 0F35  
                       u2751 0EE0                         u1791 0C54                         u1775 0C3C  
                       u2911 0259                         u1960 0461                         u1880 03C6  
                       u2680 07A7                         u2840 0F3A                         u2920 0262  
                       u1961 0460                         u1945 044C                         u1881 03C5  
                       u2681 07A6                         u2585 0732                         u2841 0F39  
                       u2825 0F23                         u2745 0ED5                         u1785 0C49  
                       u2921 0261                         u1970 0466                         u1890 041E  
                       u2690 07BF                         u2770 0EFB                         u2930 028F  
                       u2850 0174                         u1971 0465                         u1891 041D  
                       u2691 07BE                         u2675 0788                         u2771 0EFA  
                       u2931 028E                         u2851 0173                         u1980 047B  
                       u2940 029A                         u2860 018F                         u1981 047A  
                       u2685 07A3                         u2765 0EEF                         u2941 0299  
                       u2861 018E                         u1990 047F                         u2790 0F09  
                       u2950 02A5                         u2870 01C2                         u1991 047E  
                       u1895 041A                         u2695 07BB                         u2791 0F08  
                       u2951 02A4                         u2935 028B                         u2871 01C1  
                       u2960 02B9                         u2880 01CD                         u2785 0EFF  
                       u2961 02B8                         u2881 01CC                         u2970 02CD  
                       u2890 0204                         u2971 02CC                         u2955 02A1  
                       u2891 0203                         u2980 02DF                         u2981 02DE  
                       u2965 02B5                         u2990 02F4                         u2991 02F3  
                       u2975 02C9               ??_LeerSensores 0054              __end_of_PIN_BOM 0875  
            __end_of_PIN_VAL 0876                ??_Iniciar_ADC 0070            ?_LCD_Write_String 0076  
                       _flag 00B0                         _main 0BCB                         _ftoa 0F44  
                       _texH 00AE                         _texT 006E                         fsr0h 0005  
                       fsr1h 0007                         indf0 0000                         fsr0l 0004  
                       indf1 0001                         fsr1l 0006                         btemp 007E  
                       start 0002           ??_LCD_Write_String 0078              __end_of_LeerAdc 0AB4  
       LCD_Write_4Bit@Nibble 0073             __end_of_LCD_Init 0E0D             ?_I2C_Master_Init 0070  
           ?_I2C_Master_Wait 0070             ?_I2C_Master_Stop 0070                ___fltol@sign1 0049  
            __end_of___fladd 0596                        ?_main 0070                        ?_ftoa 005C  
            __end_of___flneg 09C9              __end_of___flmul 07ED              __end_of___flsub 0AD4  
            __end_of___fltol 0D84              __end_of___lldiv 0D0F              __end_of___llmod 0C5E  
                      _CTEMP 0861                        _MAXUV 086F                        _PORTC 000E  
                      _TRISA 0012                        _TRISB 0013                        _TRISC 0014  
     __end_of_LCD_Set_Cursor 0B6A              __end_of_dpowers 0828              __end_of_isdigit 09F2  
                      _nivel 0873                        _texuv 006F                        ftoa@f 005C  
                      ftoa@l 0066                        status 0003                        wtemp0 007E  
            __end_of_sprintf 035E               _LCD_Write_4Bit 0A18                 __end_of_CHUM 0861  
             _LCD_Write_Char 0A42          __end_of_Iniciar_ADC 09BE              __initialization 07ED  
               __end_of_main 0C13                 __end_of_ftoa 1000            _IO_Expander_Write 0A05  
         ?_IO_Expander_Write 0070                       ??_main 006C                       ??_ftoa 0061  
                  ??_LCD_CMD 0074            ?_I2C_Master_Start 0070            ?_I2C_Master_Write 0070  
        ??_IO_Expander_Write 0071              ?_LCD_Set_Cursor 0076             __end_of_PutTexto 0B3C  
         ??_I2C_Master_Start 0070                       _ADCON0 009D                       _ADCON1 009E  
         ??_I2C_Master_Write 0070             ___llmod@dividend 0024                       _ADRESH 009C  
                     _ADRESL 009B                       _ANSELA 1F38                       _ANSELC 1F4E  
                     _RB4I2C 010C                       _RB6I2C 010D                       _RB4PPS 1F1C  
                     _RB6PPS 1F1E                       _MINHUM 0871                ??_TanqueLLeno 007B  
                     _TRISB4 009C                       _TRISB6 009E                ??_TanqueVacio 007B  
                  ??_LeerAdc 0072       __end_of_LCD_Write_4Bit 0A2D             __end_of___xxtofl 0F44  
     __end_of_LCD_Write_Char 0A58    __end_of_IO_Expander_Write 0A18                       ___flge 0E0D  
                  ??___fladd 0048                       ___wmul 0A75                    ??___flneg 0074  
                  ??___flmul 002E                    ??___flsub 007D                    ??___fltol 0044  
                  ??___lldiv 0078                    ??___llmod 0028                       _inicio 09C9  
       __end_of_LeerSensores 0167                       _status 00AF                       ftoa@cp 006A  
                  ??_isdigit 0070           __size_of__Umul8_16 0023                    ??_sprintf 0034  
                 ___flge@ff1 0070                   ___flge@ff2 0074                 ___xxtofl@arg 0022  
               ___xxtofl@exp 0021                 ___xxtofl@val 0075      __end_of__initialization 07FD  
                _Iniciar_ADC 09B8                    ?_LCD_Init 0070                   ___flneg@f1 0070  
            ?_LCD_Write_4Bit 0070                __end_of_CTEMP 0865                   ___fltol@f1 0040  
            ?_LCD_Write_Char 0070                __end_of_MAXUV 0871          __end_of_TanqueLLeno 0B98  
             __pcstackCOMMON 0070                 __pidataBANK1 0007          __end_of_TanqueVacio 0BCB  
              __end_of_nivel 0874  __size_of_CondicionesDeRiego 0057                 sprintf@width 0041  
                 __pbssBANK0 006E                   __pbssBANK1 00A0                   ??_LCD_Init 0076  
          __end_of__Umul8_16 0B18   __size_of_IO_Expander_Write 0013                   __pmaintext 0BCB  
                    ?___flge 0070                      ?___wmul 0070                    ?_PutTexto 0070  
                    ?_inicio 0070    __size_of_LCD_Write_String 001D                      _LCD_CMD 0A2D  
                    _MAXTEMP 0828                    ?___xxtofl 0075                      _PIN_BOM 0874  
                    _PIN_VAL 0875                      _SSP1ADD 018D                      _SSP1BUF 018C  
             _lecturaHumedad 00A4                  _TanqueLLeno 0B6A                      _LeerAdc 0A94  
                _TanqueVacio 0B98                      _i2c_add 00AC        __size_of_LeerSensores 00C9  
            __size_of___flge 008A                      ___fladd 035E                   ??_PutTexto 007B  
                    ___flneg 09BE                      ___flmul 0596                      ___flsub 0AB4  
                    ___fltol 0D0F                      ___lldiv 0CB5              __size_of___wmul 001F  
                    ___llmod 0C13              __size_of_inicio 000B             ??_LCD_Set_Cursor 0077  
                    __ptext1 09C9                      __ptext2 0B18                      __ptext3 0D84  
                    __ptext4 0AD4                      __ptext5 0B98                      __ptext6 0B6A  
                    __ptext7 000E                      __ptext8 0F44                      __ptext9 0167  
                    _dpowers 0800                      _isdigit 09E0                   ??___xxtofl 0079  
              ?_PutVariables 0070     __size_of_I2C_Master_Init 0021     __size_of_I2C_Master_Wait 000C  
   __size_of_I2C_Master_Stop 0006                      _sprintf 0167                      clrloop0 0009  
       end_of_initialization 07FD                      ftoa@buf 00B1                      ftoa@rem 0062  
               _LeerSensores 009E    __size_of_I2C_Master_Start 0006    __size_of_I2C_Master_Write 0013  
            ___lldiv@divisor 0070              ___lldiv@counter 007D                    _PORTCbits 000E  
                 LCD_CMD@CMD 0075                  ___fladd@grs 0053               ??_PutVariables 006B  
              ___xxtofl@sign 0020             ??_LCD_Write_4Bit 0072            LCD_Write_String@i 0079  
           ??_LCD_Write_Char 0074                  ___flmul@grs 0034                 ?_Iniciar_ADC 0070  
             __end_of_MINHUM 0873            __size_of_LCD_Init 0089               __end_of___flge 0E97  
             __end_of___wmul 0A94             _LCD_Write_String 0A58               __end_of_inicio 09D4  
        start_initialization 07ED                  __end_of_ASH 0878                  __end_of_AST 0877  
                __end_of_AUV 0879                  __end_of_CUV 085D                   ftoa@status 0060  
          ??_I2C_Master_Init 0070            ??_I2C_Master_Wait 0070            ??_I2C_Master_Stop 0070  
            ___llmod@divisor 0020              ___llmod@counter 0029                     ??___flge 0078  
                   ??___wmul 0074                    __Umul8_16 0AF5                  __pdataBANK1 00C2  
 __end_of_CondicionesDeRiego 0CB5                     ??_inicio 007C            __size_of_PutTexto 0024  
                  ___fladd@a 0044                    ___fladd@b 0040                     ?_LCD_CMD 0070  
                  ___flmul@a 002A                    ___flmul@b 0026                    ___flsub@a 0054  
                  ___flsub@b 0058                    ___latbits 0001                __pcstackBANK0 0020  
          __size_of___xxtofl 00AD                 ?_TanqueLLeno 0070                  sprintf@flag 003A  
                sprintf@prec 0043                     ?_LeerAdc 0070                 ?_TanqueVacio 0070  
           _I2C_Master_Start 09AC             _I2C_Master_Write 09F2        IO_Expander_Write@Data 0071  
       __end_of_PutVariables 009E                     ?___fladd 0040                     ?___flneg 0070  
                   ?___flmul 0026                     ?___flsub 0054                     ?___fltol 0040  
                   ?___lldiv 0070                     ?___llmod 0020                   ?__Umul8_16 0070  
       I2C_Master_Write@data 0070                     ?_isdigit 0070                    _lecturaUv 00A8  
                   ?_sprintf 002A                     _LCD_Init 0D84               ___wmul@product 0074  
                  clear_ram0 0008         __size_of_Iniciar_ADC 0006                     _PIR1bits 070D  
                   _SSP1CON1 0190                     _SSP1CON2 0191                     _SSP1STAT 018F  
          ___wmul@multiplier 0070             __size_of_LCD_CMD 0015     __end_of_LCD_Write_String 0A75  
           __size_of_LeerAdc 0020                  _lecturaTemp 00A0                     _PutTexto 0B18  
                ??__Umul8_16 0072             __size_of___fladd 0238             __size_of___flneg 000B  
           __size_of___flmul 0257             __size_of___flsub 0020             __size_of___fltol 0075  
           __size_of___lldiv 005A             __size_of___llmod 004B                  _isdigit$753 0070  
                 _ANSELBbits 1F43                   sprintf@val 003C              _I2C_Master_Init 0AD4  
                   ___xxtofl 0E97              _I2C_Master_Wait 09D4              _I2C_Master_Stop 09B2  
           __size_of_isdigit 0012                     __ptext10 09E0                     __ptext11 0A75  
                   __ptext20 0AF5                     __ptext12 0C13                     __ptext21 035E  
                   __ptext13 0CB5                     __ptext30 0A18                     __ptext22 0A94  
                   __ptext14 0D0F                     __ptext31 0A05                     __ptext23 09B8  
                   __ptext15 0AB4                     __ptext32 09F2                     __ptext24 0C5E  
                   __ptext16 09BE                     __ptext33 09B2                     __ptext25 0E0D  
                   __ptext17 009E                     __ptext34 09AC                     __ptext26 0A58  
                   __ptext18 0E97                     __ptext35 09D4                     __ptext27 0A42  
                   __ptext19 0596                     __ptext28 0B3C                     __ptext29 0A2D  
               _SSP1CON1bits 0190                 _SSP1CON2bits 0191      __size_of_LCD_Set_Cursor 002E  
           __size_of_sprintf 01F7        __size_of_PutVariables 0090              _BackLight_State 00C2  
              __size_of_main 0048                __size_of_ftoa 00BC         __size_of_TanqueLLeno 002E  
       __size_of_TanqueVacio 0033     __end_of_I2C_Master_Start 09B2     __end_of_I2C_Master_Write 0A05  
         LCD_Write_Char@Data 0075                 _PutVariables 000E               __pstringtext10 085D  
             __pstringtext11 0861               __pstringtext20 086C               __pstringtext12 0871  
             __pstringtext21 0000               __pstringtext13 0828               __pstringtext14 0835  
             __pstringtext15 083E               __pstringtext16 0847               __pstringtext17 0850  
             __pstringtext18 0865               __pstringtext19 0869                     isdigit@c 0071  
         _CondicionesDeRiego 0C5E                    sprintf@ap 003B                    sprintf@sp 0040  
               LeerAdc@canal 0074             ___lldiv@dividend 0074          ?_CondicionesDeRiego 0070  
    __size_of_LCD_Write_4Bit 0015      __size_of_LCD_Write_Char 0016      __end_of_I2C_Master_Init 0AF5  
    __end_of_I2C_Master_Wait 09E0      __end_of_I2C_Master_Stop 09B8              LCD_Init@I2C_Add 0078  
              __pstringtext1 0800                __pstringtext2 086F                __pstringtext3 0873  
              __pstringtext4 0874                __pstringtext5 0875                __pstringtext6 0876  
              __pstringtext7 0877                __pstringtext8 0878                __pstringtext9 0859  
       ??_CondicionesDeRiego 007C       __Umul8_16@multiplicand 0070                     sprintf@c 0045  
                   sprintf@f 002A                   _SSP1DATPPS 1EC6                   _SSP1CLKPPS 1EC5  
           ___lldiv@quotient 0079            LCD_Set_Cursor@COL 0076            LCD_Set_Cursor@ROW 0079  
              ___fladd@signs 0050                ?_LeerSensores 0070                 ___fladd@aexp 0051  
               ___fladd@bexp 0052         __Umul8_16@multiplier 0078            __Umul8_16@product 0074  
